{"id":273,"date":"2019-10-15T02:27:30","date_gmt":"2019-10-15T02:27:30","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=273"},"modified":"2019-11-13T16:07:40","modified_gmt":"2019-11-13T16:07:40","slug":"compile-time-polymorphism-go","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/","title":{"rendered":"Compile Time Polymorphism in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">In compile-time polymorphism, the call is resolved during compile time by the compiler. Some of\u00a0the\u00a0 forms for compile-time polymorphism are<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>Method\/Function Overloading<\/strong>: more than one method\/function exists with the same name but with different signatures or possibly different return types<\/li><li><strong>Operator Overloading<\/strong>: the Same operator is used for operating on different data types<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Go doesn&#8217;t support Method Overloading. For example, see below program demonstrating that go doesn&#8217;t support method overloading.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype maths struct{}\n\nfunc (m *maths) add(a, b int) int {\n    return a + b\n}\n\nfunc (m *maths) add(a, b, c int) int {\n    return a + b + c\n}\n\nfunc main() {\n   m := &maths{}\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">(*maths).add redeclared in this block\n        previous declaration at .\/main.go:5:6<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Go also doesn&#8217;t support operator overloading. Reason for this is stated in faq of go &#8211;&nbsp;<a href=\"https:\/\/golang.org\/doc\/faq#overloading\">https:\/\/golang.org\/doc\/faq#overloading<\/a><\/p>\n\n\n\n<p class=\"has-background has-very-light-gray-background-color\">Method dispatch is simplified if it doesn&#8217;t need to do type matching as well. Experience with other languages told us that having a variety of methods with the same name but different signatures was occasionally useful but that it could also be confusing and fragile in practice. Matching only by name and requiring consistency in the types was a major simplifying decision in Go&#8217;s type system.<br>\nRegarding operator overloading, it seems more a convenience than an absolute requirement. Again, things are simpler without it.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now the question is there any alternative to do method overloading in GO. This is where <strong>Variadic function<\/strong>&nbsp;in go comes into the picture. See below program<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype maths struct{}\n\nfunc (m *maths) add(numbers ...int) int {\n    result := 0\n    for _, num := range numbers {\n        result += num\n    }\n    return result\n}\n\nfunc main() {\n    m := &maths{}\n\n\n    fmt.Printf(\"Result: %d\\n\", m.add(2, 3))\n    fmt.Printf(\"Result: %d\\n\", m.add(2, 3, 4))\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Result: 5\nResult: 9<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Conclusion<\/strong>:<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Go doesn&#8217;t directly support method\/function\/operator overloading but variadic function provides a way of achieving the same with increased code complexity.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>In compile-time polymorphism, the call is resolved during compile time by the compiler. Some of\u00a0the\u00a0 forms for compile-time polymorphism are Method\/Function Overloading: more than one method\/function exists with the same name but&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[34,36,15,35],"class_list":["post-273","post","type-post","status-publish","format-standard","hentry","category-tech","tag-compile","tag-compile-polymorphism","tag-oop","tag-polymorphism"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Compile Time Polymorphism in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Compile Time Polymorphism in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"In compile-time polymorphism, the call is resolved during compile time by the compiler. Some of\u00a0the\u00a0 forms for compile-time polymorphism are Method\/Function Overloading: more than one method\/function exists with the same name but...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-10-15T02:27:30+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-11-13T16:07:40+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/\",\"url\":\"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/\",\"name\":\"Compile Time Polymorphism in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2019-10-15T02:27:30+00:00\",\"dateModified\":\"2019-11-13T16:07:40+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Compile Time Polymorphism in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Compile Time Polymorphism in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/","og_locale":"en_US","og_type":"article","og_title":"Compile Time Polymorphism in Go (Golang) - Welcome To Golang By Example","og_description":"In compile-time polymorphism, the call is resolved during compile time by the compiler. Some of\u00a0the\u00a0 forms for compile-time polymorphism are Method\/Function Overloading: more than one method\/function exists with the same name but...","og_url":"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-10-15T02:27:30+00:00","article_modified_time":"2019-11-13T16:07:40+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/","url":"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/","name":"Compile Time Polymorphism in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2019-10-15T02:27:30+00:00","dateModified":"2019-11-13T16:07:40+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/compile-time-polymorphism-go\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Compile Time Polymorphism in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-4p","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/273","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=273"}],"version-history":[{"count":8,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/273\/revisions"}],"predecessor-version":[{"id":529,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/273\/revisions\/529"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=273"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=273"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=273"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}