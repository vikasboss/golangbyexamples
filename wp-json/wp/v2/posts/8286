{"id":8286,"date":"2022-07-30T09:34:26","date_gmt":"2022-07-30T04:04:26","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=8286"},"modified":"2022-07-30T09:36:49","modified_gmt":"2022-07-30T04:06:49","slug":"binary-tree-maximum-path-sum-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/","title":{"rendered":"Binary Tree Maximum Path Sum Program in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#Program\" title=\"Program\">Program<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">A\u00a0 binary tree is given.\u00a0The objective is to find the maximum Path Sum in that binary tree.\u00a0 A path in a binary tree is a sequence of nodes that are connected to each other. Each node only appears once in the Maximum Path Sum<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Example 1<\/strong><\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"281\" height=\"211\" src=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg?resize=281%2C211&#038;ssl=1\" alt=\"\" class=\"wp-image-6428\" data-recalc-dims=\"1\"\/><\/figure>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Output: 16\nMaximum Sum Path is: 4->2->1->3->6<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Example 2<\/strong><\/p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" decoding=\"async\" width=\"281\" height=\"211\" src=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2022\/07\/Binary-Tree-2.drawio-min.png?resize=281%2C211&#038;ssl=1\" alt=\"\" class=\"wp-image-8287\" data-recalc-dims=\"1\"\/><\/figure>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Output: 14\nMaximum Sum Path is: 5->3->6<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The idea is to track below four&nbsp; values at every node<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>a = root.Val<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>b = root.Val + leftSubTreeMaxSum<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>c\u00a0 = root.Val + rightSubTreeMaxSum<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>d =\u00a0 root.Val + leftSubTreeMaxSum+\u00a0 rightSubTreeMaxSum<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Then<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Max sum at a given node is given max of <strong>(a,b,c,d)<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The return value in the recursive call would be a max of <strong>(a,b,c)<\/strong>.\u00a0 Why? This is because only the path of a or b or c represents a path that can be taken into account at the parent node. d cannot be taken into account because it becomes an invalid path. To understand this with an example consider the binary tree in example two above. Path <strong>5->3->6<\/strong> cannot include parent node <strong>-5<\/strong> in its path because it becomes an invalid path.<\/li><\/ul>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Program\"><\/span><strong>Program<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Below is the program for the same<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\ntype TreeNode struct {\n\tVal   int\n\tLeft  *TreeNode\n\tRight *TreeNode\n}\n\nfunc maxPathSum(root *TreeNode) int {\n\tres := math.MinInt64\n\n\tmaxPathSumUtil(root, &res)\n\treturn res\n}\n\nfunc maxPathSumUtil(root *TreeNode, res *int) int {\n\tif root == nil {\n\t\treturn 0\n\t}\n\n\tl := maxPathSumUtil(root.Left, res)\n\tr := maxPathSumUtil(root.Right, res)\n\n\ta := root.Val\n\tb := root.Val + l\n\tc := root.Val + r\n\td := root.Val + l + r\n\n\tmaxReturnSum := maxOfThree(a, b, c)\n\n\tmaxSumPath := maxOfTwo(maxReturnSum, d)\n\tif maxSumPath > *res {\n\t\t*res = maxSumPath\n\t}\n\n\treturn maxReturnSum\n}\n\nfunc maxOfThree(a, b, c int) int {\n\tif a > b && a > c {\n\t\treturn a\n\t}\n\n\tif b > c {\n\t\treturn b\n\t}\n\n\treturn c\n}\n\nfunc maxOfTwo(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n\nfunc main() {\n\troot := &TreeNode{Val: 1}\n\troot.Left = &TreeNode{Val: 2}\n\troot.Left.Left = &TreeNode{Val: 4}\n\troot.Right = &TreeNode{Val: 3}\n\troot.Right.Left = &TreeNode{Val: 5}\n\troot.Right.Right = &TreeNode{Val: 6}\n\n\toutput := maxPathSum(root)\n\tfmt.Println(output)\n\n\troot = &TreeNode{Val: -10}\n\troot.Left = &TreeNode{Val: 2}\n\troot.Left.Left = &TreeNode{Val: 4}\n\troot.Right = &TreeNode{Val: 3}\n\troot.Right.Left = &TreeNode{Val: 5}\n\troot.Right.Right = &TreeNode{Val: 6}\n\toutput = maxPathSum(root)\n\tfmt.Println(output)\n\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">16\n14<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Note: <\/strong>Check out our Golang Advanced Tutorial. The tutorials in this series are elaborative and we have tried to cover all concepts with examples. This tutorial is for those who are looking to gain expertise and a solid understanding of golang &#8211; <a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Advance Tutorial<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Also if you are interested in understanding how all design patterns can be implemented in Golang. If yes, then this post is for you &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns Golang<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Also, check out our system design tutorial series here &#8211; <a href=\"https:\/\/techbyexample.com\/system-design-questions\/\">System Design Tutorial Series<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewProgram Overview A\u00a0 binary tree is given.\u00a0The objective is to find the maximum Path Sum in that binary tree.\u00a0 A path in a binary tree is a sequence of&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-8286","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Binary Tree Maximum Path Sum Program in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Binary Tree Maximum Path Sum Program in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewProgram Overview A\u00a0 binary tree is given.\u00a0The objective is to find the maximum Path Sum in that binary tree.\u00a0 A path in a binary tree is a sequence of...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2022-07-30T04:04:26+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-07-30T04:06:49+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/\",\"name\":\"Binary Tree Maximum Path Sum Program in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg\",\"datePublished\":\"2022-07-30T04:04:26+00:00\",\"dateModified\":\"2022-07-30T04:06:49+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Binary Tree Maximum Path Sum Program in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Binary Tree Maximum Path Sum Program in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/","og_locale":"en_US","og_type":"article","og_title":"Binary Tree Maximum Path Sum Program in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewProgram Overview A\u00a0 binary tree is given.\u00a0The objective is to find the maximum Path Sum in that binary tree.\u00a0 A path in a binary tree is a sequence of...","og_url":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2022-07-30T04:04:26+00:00","article_modified_time":"2022-07-30T04:06:49+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/","url":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/","name":"Binary Tree Maximum Path Sum Program in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg","datePublished":"2022-07-30T04:04:26+00:00","dateModified":"2022-07-30T04:06:49+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/11\/binary-tree-min.jpg"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/binary-tree-maximum-path-sum-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Binary Tree Maximum Path Sum Program in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-29E","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/8286","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=8286"}],"version-history":[{"count":1,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/8286\/revisions"}],"predecessor-version":[{"id":8288,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/8286\/revisions\/8288"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=8286"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=8286"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=8286"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}