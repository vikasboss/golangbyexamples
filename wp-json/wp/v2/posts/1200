{"id":1200,"date":"2020-01-23T16:25:59","date_gmt":"2020-01-23T16:25:59","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=1200"},"modified":"2020-01-23T16:30:04","modified_gmt":"2020-01-23T16:30:04","slug":"understanding-rune-in-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/","title":{"rendered":"Understanding Rune in Golang"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#Overview\" title=\"Overview\">Overview<\/a><ul class=\"ez-toc-list-level-2\"><li class=\"ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#What_is_Unicode\" title=\"What is Unicode\">What is Unicode<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#UTF-8\" title=\"UTF-8\">UTF-8<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#When_to_Use\" title=\"When to Use\">When to Use<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#Code\" title=\"Code:\">Code:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#Rune_array_to_string_and_vice_versa\" title=\"Rune array to string and vice versa\">Rune array to string and vice versa<\/a><ul class=\"ez-toc-list-level-2\"><li class=\"ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#Rune_array_to_string\" title=\"Rune array to string\">Rune array to string<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-8\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#String_to_Rune_Array\" title=\"String to Rune Array\">String to Rune Array<\/a><\/li><\/ul><\/li><\/ul><\/nav><\/div>\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\"><strong>rune<\/strong> in Go is\u00a0an alias for int32 meaning it is an integer value. This integer value is meant to represent a Unicode Code Point. To understand rune you have to know what Unicode is. Below is short description but you can refer to the famous blog post about it &#8211;<\/p>\n\n\n\n<p class=\"has-medium-font-size\"> <a href=\"http:\/\/www.joelonsoftware.com\/articles\/Unicode.html\">The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)<\/a><\/p>\n\n\n\n<h2 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"What_is_Unicode\"><\/span><strong>What is Unicode<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Unicode is a superset of ASCII characters which assigns a unique number to every character that exists. This unique number is called Unicode Code Point.For eg <\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Digit <strong>0<\/strong> is represented as Unicode Point <strong>U+0030 (Decimal Value &#8211; 48)<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Small Case <strong>b<\/strong> is represented as Unicode Point\u00a0 <strong>U+0062 (Decimal Value &#8211; 98)<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>A pound symbol <strong>\u00a3\u00a0<\/strong>is represented as Unicode Point <strong>U+00A3 (Decimal Value &#8211; 163)<\/strong><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Visit<strong>\u00a0<\/strong><a href=\"https:\/\/en.wikipedia.org\/wiki\/List_of_Unicode_characters\">https:\/\/en.wikipedia.org\/wiki\/List_of_Unicode_characters<\/a> to know about Unicode Point of other characters. But Unicode doesn&#8217;t talk about how these code points will be saved in memory. This is where <strong>utf-8<\/strong> comes into picture<\/p>\n\n\n\n<h2 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"UTF-8\"><\/span><strong>UTF-8<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">utf-8 saves every Unicode Point either using 1, 2, 3 or 4 bytes. ASCII points are stored using 1 byte. That is why rune is an alias for int32 because a Unicode Point can be of max 4 bytes in Go as source code in GO is encoded using utf-8, hence every string is also encoded in utf-8<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Every rune is intended to refer to one Unicode Point.\u00a0For eg if you print a string after typecasting it to a rune array then it will print the Unicode Point for each of character. For for below string <strong>&#8220;0b\u00a3&#8221;<\/strong> output will be &#8211; <strong>[U+0030 U+0062 U+00A3]<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"%U\\n\", []rune(\"0b\u00a3\"))<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"When_to_Use\"><\/span><strong>When to Use<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>You should use a rune when you intend to save Unicode Code Point in the rune value. A rune array should be used when all values in the array are meant to be a Unicode Code Point.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Rune is also used to represent a character.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Declare Rune<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">A rune is declared using a character between single quotes like below declaring a variable named <strong>&#8216;rPound&#8217;<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">rPound := '\u00a3'<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">After declaring Rune you can perform below things as well<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>Print Type &#8211; <\/strong>Output will be <strong>int32<\/strong><\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Type: %s\\n\", reflect.TypeOf(rPound))<\/code><\/pre>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>Print Unicode Code Point &#8211; <\/strong>Output will be <strong>U+00A3<\/strong><\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Unicode CodePoint: %U\\n\", rPound)<\/code><\/pre>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>Print Character &#8211; <\/strong>Output will be <strong>\u00a3<\/strong><\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Character: %c\\n\", r)<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Code\"><\/span><strong>Code:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Below is the code illustrating each point we discussed<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n    \"unsafe\"\n)\n\nfunc main() {\n    r := 'a'\n    \n    \/\/Print Size\n    fmt.Printf(\"Size: %d\\n\", unsafe.Sizeof(r))\n    \n    \/\/Print Type\n    fmt.Printf(\"Type: %s\\n\", reflect.TypeOf(r))\n    \n    \/\/Print Code Point\n    fmt.Printf(\"Unicode CodePoint: %U\\n\", r)\n    \n    \/\/Print Character\n    fmt.Printf(\"Character: %c\\n\", r)\n    s := \"0b\u00a3\"\n    \n    \/\/This will print the Unicode Points\n    fmt.Printf(\"%U\\n\", []rune(s))\n    \n    \/\/This will the decimal value of Unicode Code Point\n    fmt.Println([]rune(s))\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Size: 4\nType: int32\nUnicode CodePoint: U+0061\nCharacter: a\n[U+0030 U+0062 U+00A3]\n[48 98 163]<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Rune_array_to_string_and_vice_versa\"><\/span><strong>Rune array to string and vice versa<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<h2 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Rune_array_to_string\"><\/span><strong>Rune array to string<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    runeArray := []rune{'a', 'b', '\u00a3'}\n    s := string(runeArray)\n    fmt.Println(s)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">ab\u00a3<\/code><\/pre>\n\n\n\n<h2 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"String_to_Rune_Array\"><\/span><strong>String to Rune Array<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    s := \"ab\u00a3\"\n    r := []rune(s)\n    fmt.Printf(\"%U\\n\", r)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">[U+0061 U+0062 U+00A3]<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewWhat is UnicodeUTF-8When to UseCode:Rune array to string and vice versaRune array to stringString to Rune Array Overview rune in Go is\u00a0an alias for int32 meaning it is an&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,147],"class_list":["post-1200","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-rune"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Understanding Rune in Golang - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Understanding Rune in Golang - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewWhat is UnicodeUTF-8When to UseCode:Rune array to string and vice versaRune array to stringString to Rune Array Overview rune in Go is\u00a0an alias for int32 meaning it is an...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-01-23T16:25:59+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-01-23T16:30:04+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/\",\"name\":\"Understanding Rune in Golang - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-01-23T16:25:59+00:00\",\"dateModified\":\"2020-01-23T16:30:04+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Understanding Rune in Golang\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Understanding Rune in Golang - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/","og_locale":"en_US","og_type":"article","og_title":"Understanding Rune in Golang - Welcome To Golang By Example","og_description":"Table of Contents OverviewWhat is UnicodeUTF-8When to UseCode:Rune array to string and vice versaRune array to stringString to Rune Array Overview rune in Go is\u00a0an alias for int32 meaning it is an...","og_url":"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-01-23T16:25:59+00:00","article_modified_time":"2020-01-23T16:30:04+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/","url":"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/","name":"Understanding Rune in Golang - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-01-23T16:25:59+00:00","dateModified":"2020-01-23T16:30:04+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/understanding-rune-in-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Understanding Rune in Golang"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-jm","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1200","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=1200"}],"version-history":[{"count":6,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1200\/revisions"}],"predecessor-version":[{"id":1206,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1200\/revisions\/1206"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=1200"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=1200"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=1200"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}