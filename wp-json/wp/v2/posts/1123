{"id":1123,"date":"2020-01-15T15:40:44","date_gmt":"2020-01-15T15:40:44","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=1123"},"modified":"2020-01-15T16:37:12","modified_gmt":"2020-01-15T16:37:12","slug":"write-to-a-file-go","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/write-to-a-file-go\/","title":{"rendered":"Write to a file in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">There are different ways of writing a file in GO. Let&#8217;s examine this in detail through different examples which illustrates how to write line by line to a file.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#Buffered_write_using_bufio_package\" title=\"Buffered write using bufio package\">Buffered write using bufio package<\/a><ul class=\"ez-toc-list-level-2\"><li class=\"ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#Example_With_Default_Buffer_Size_of_4096_bytes\" title=\"Example: With Default Buffer Size of 4096 bytes\">Example: With Default Buffer Size of 4096 bytes<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#Example_With_Custom_Buffer_Size_of_10_bytes\" title=\"Example: With Custom Buffer Size of 10 bytes\">Example: With Custom Buffer Size of 10 bytes<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#Using_fileWrite\" title=\"Using file.Write()\">Using file.Write()<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#Using_ioutilWriteFile\" title=\"Using ioutil.WriteFile()\">Using ioutil.WriteFile()<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Buffered_write_using_bufio_package\"><\/span><strong>Buffered write using bufio package<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\"><strong>bufio<\/strong> package can be used to do a buffered write in Go. It has a default buffer size of 4096 bytes however a custom buffer size can also be specified. The main advantage of buffered write is that it keeps the data to be written in the buffer and thus minimizes the number of times we have to do the IO operation. It does a write when<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>writer.flush()<\/strong> is called <\/li><li>Buffer is full on next write. For example, let&#8217;s say it has 3500 bytes in full in buffer and buffer has a size of 4096. The next line to be written is of 1000 bytes. Since it 3500 + 1000 > 4096, it will write some of the bytes to file so that some buffer is available for next write.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">If there is no buffer then there will be IO write on every line. Let&#8217;s see an example of a write to a file. We are using <strong>writer.Available()<\/strong> and <strong>writer.Buffered() <\/strong>to print the <strong>available<\/strong> and <strong>used<\/strong> buffer size respectively. <\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Example_With_Default_Buffer_Size_of_4096_bytes\"><\/span><strong>Example: With Default Buffer Size of 4096 bytes<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">It will write to <strong>temp.txt<\/strong> in the current directory. Write happens at the end when <strong>writer.Flush()<\/strong> is called as buffer never really gets full in between.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"log\"\n    \"os\"\n)\n\nfunc main() {\n    file, err := os.Create(\".\/temp.txt\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    writer := bufio.NewWriter(file)\n    linesToWrite := []string{\"This is an example\", \"to show how\", \"to write to a file\", \"line by line.\"}\n    for _, line := range linesToWrite {\n        bytesWritten, err := writer.WriteString(line + \"\\n\")\n        if err != nil {\n            log.Fatalf(\"Got error while writing to a file. Err: %s\", err.Error())\n        }\n        fmt.Printf(\"Bytes Written: %d\\n\", bytesWritten)\n        fmt.Printf(\"Available: %d\\n\", writer.Available())\n        fmt.Printf(\"Buffered : %d\\n\", writer.Buffered())\n    }\n    writer.Flush()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">Bytes Written: 19\nAvailable: 4077\nBuffered : 19\nBytes Written: 12\nAvailable: 4065\nBuffered : 31\nBytes Written: 19\nAvailable: 4046\nBuffered : 50\nBytes Written: 14\nAvailable: 4032\nBuffered : 64<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Example_With_Custom_Buffer_Size_of_10_bytes\"><\/span><strong>Example: With Custom Buffer Size of 10 bytes<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">We can also create a custom buffer size for our writer using bufio.NewWriterSize(). In the below example, we create a write with a custom buffer size of 10 bytes. If you carefully notice the bytes <strong>&#8220;Available&#8221;<\/strong> and <strong>&#8220;Buffered&#8221;<\/strong> in output, you will find that writes to file keep happening in between when the buffer is full and at the end when <strong>writer.Flush()<\/strong> is called.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"log\"\n    \"os\"\n)\n\n\/\/Write file using bufio writer\nfunc main() {\n    file, err := os.Create(\".\/temp  .txt\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    writer := bufio.NewWriterSize(file, 10)\n    linesToWrite := []string{\"This is an example\", \"to show how\", \"to write to a file\", \"line by line.\"}\n    for _, line := range linesToWrite {\n        bytesWritten, err := writer.WriteString(line + \"\\n\")\n        if err != nil {\n            log.Fatalf(\"Got error while writing to a file. Err: %s\", err.Error())\n        }\n        fmt.Printf(\"Bytes Written: %d\\n\", bytesWritten)\n        fmt.Printf(\"Available: %d\\n\", writer.Available())\n        fmt.Printf(\"Buffered : %d\\n\", writer.Buffered())\n    }\n    writer.Flush()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Bytes Written: 19\nAvailable: 1\nBuffered : 9\nBytes Written: 12\nAvailable: 9\nBuffered : 1\nBytes Written: 19\nAvailable: 0\nBuffered : 10\nBytes Written: 14\nAvailable: 6\nBuffered : 4<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Using_fileWrite\"><\/span><strong>Using file.Write()<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">It does not maintain any buffer and writes to the file immediately as soon as the write is called. See the example below<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"log\"\n    \"os\"\n)\n\n\nfunc main() {\n    file, err := os.Create(\".\/test.txt\")\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer file.Close()\n    linesToWrite := []string{\"This is an example\", \"to show how\", \"to write to a file\", \"line by line.\"}\n    for _, line := range linesToWrite {\n        file.WriteString(line + \"\\n\")\n    }\n}<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Using_ioutilWriteFile\"><\/span><strong>Using ioutil.WriteFile()<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\"><strong>ioutil.WriteFile()<\/strong> is kind of a shortcut to writing to a file. It takes in three-parameter &#8211; (1) file (2) The string to be written (3) Permission mode of the file. The third parameter is used to create a file with that permission if the file doesn&#8217;t already exist. One calling <strong>ioutil.WriteFile()<\/strong>, it will<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Create the file if not present with the specified permission<\/li><li>Write to the file<\/li><li>Close the file<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">See below example: If temp.txt doesn&#8217;t exist then it will create a new temp.txt file with permission 0777<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"io\/ioutil\"\n    \"log\"\n)\n\nfunc main() {\n    linesToWrite := \"This is an example to show how to write to file using ioutil\"\n    err := ioutil.WriteFile(\"temp.txt\", []byte(linesToWrite), 0777)\n    if err != nil {\n        log.Fatal(err)\n    }\n}<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>There are different ways of writing a file in GO. Let&#8217;s examine this in detail through different examples which illustrates how to write line by line to a file. Table of Contents&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[158,157],"class_list":["post-1123","post","type-post","status-publish","format-standard","hentry","category-tech","tag-buffered-write","tag-bufio"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Write to a file in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Write to a file in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"There are different ways of writing a file in GO. Let&#8217;s examine this in detail through different examples which illustrates how to write line by line to a file. Table of Contents...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-01-15T15:40:44+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-01-15T16:37:12+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/\",\"url\":\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/\",\"name\":\"Write to a file in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-01-15T15:40:44+00:00\",\"dateModified\":\"2020-01-15T16:37:12+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Write to a file in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Write to a file in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/write-to-a-file-go\/","og_locale":"en_US","og_type":"article","og_title":"Write to a file in Go (Golang) - Welcome To Golang By Example","og_description":"There are different ways of writing a file in GO. Let&#8217;s examine this in detail through different examples which illustrates how to write line by line to a file. Table of Contents...","og_url":"https:\/\/golangbyexamples.com\/write-to-a-file-go\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-01-15T15:40:44+00:00","article_modified_time":"2020-01-15T16:37:12+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/write-to-a-file-go\/","url":"https:\/\/golangbyexamples.com\/write-to-a-file-go\/","name":"Write to a file in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-01-15T15:40:44+00:00","dateModified":"2020-01-15T16:37:12+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/write-to-a-file-go\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/write-to-a-file-go\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Write to a file in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-i7","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1123","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=1123"}],"version-history":[{"count":10,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1123\/revisions"}],"predecessor-version":[{"id":1165,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1123\/revisions\/1165"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=1123"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=1123"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=1123"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}