{"id":4335,"date":"2020-11-13T00:08:46","date_gmt":"2020-11-12T18:38:46","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=4335"},"modified":"2020-11-13T00:19:59","modified_gmt":"2020-11-12T18:49:59","slug":"init-function-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/init-function-golang\/","title":{"rendered":"Init function in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/init-function-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/init-function-golang\/#Init_function_in_the_main_package\" title=\"Init function in the main package\">Init function in the main package<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/init-function-golang\/#Multiple_init_function_in_different_source_file_of_same_package\" title=\"Multiple init() function in different source file of same package\">Multiple init() function in different source file of same package<\/a><ul class=\"ez-toc-list-level-2\"><li class=\"ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/init-function-golang\/#Multiple_init_function_in_same_source_file\" title=\"Multiple init() function in same source file\">Multiple init() function in same source file<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/init-function-golang\/#Order_of_execution_of_program\" title=\"Order of execution of program\">Order of execution of program<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">init() function is a special function that is used to initialize global variables of a package. These functions are executed when the package is initialized. Each of the GO source files in a package can have its own init() function. Whenever you import any package in the program, then on the execution of that program, init functions(if present)&nbsp; in the GO source files belonging to that imported package are called first. Some points to note about init function<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Init function is optional<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Init function does not take any argument<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Init function does not have any return value.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Init function is called implicitly. Since it is called implicitly, init function cannot reference it from anywhere.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>There can be multiple init() functions within the same source file.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">init function is majorly used for the initialization of global variables that cannot be initialized using an initialization expression. For example, it requires a network call to intialize any DB client. Another example could be fetching secret keys on startup. Init function is also used for running anything that only needs to be executed once. Let&#8217;s see a simple use case of using an init function.&nbsp;<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Assume you are using redis cache in your application. You want redis client to created during the application first launch. A good place to initialize a redis client is in init() function. Let&#8217;s see an example.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Create a module named redisexample and put below files in that module.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module redisexample\n\ngo 1.14<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>redis\/redis.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package redis\n\nimport (\n\t\"encoding\/json\"\n\t\"time\"\n\n\t\"github.com\/go-redis\/redis\"\n)\n\ntype redisClient struct {\n\tc *redis.Client\n}\n\nvar (\n\tclient = &redisClient{}\n)\n\nfunc init() {\n\tc := redis.NewClient(&redis.Options{\n\t\tAddr: \"127.0.0.1:6379\",\n\t})\n\n\tif err := c.Ping().Err(); err != nil {\n\t\tpanic(\"Unable to connect to redis \" + err.Error())\n\t}\n\tclient.c = c\n}\n\nfunc GetKey(key string, src interface{}) error {\n\tval, err := client.c.Get(key).Result()\n\tif err == redis.Nil || err != nil {\n\t\treturn err\n\t}\n\terr = json.Unmarshal([]byte(val), &src)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\n\/\/SetKey set key\nfunc SetKey(key string, value interface{}, expiration time.Duration) error {\n\tcacheEntry, err := json.Marshal(value)\n\tif err != nil {\n\t\treturn err\n\t}\n\terr = client.c.Set(key, cacheEntry, expiration).Err()\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"time\"\n\n\t\"redisexample\/redis\"\n)\n\nfunc main() {\n\terr := redis.SetKey(\"a\", \"b\", time.Minute*1)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error: %v\", err.Error())\n\t}\n\n\tvar value string\n\terr = redis.GetKey(\"a\", &value)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error: %v\", err.Error())\n\t}\n\n\tfmt.Println(value)\n\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">b<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above example, we have an init function in the <strong>redis.go<\/strong> file. In the init function we initialize the redis global client which is in turn used in the <strong>main<\/strong> function in main.go.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Init_function_in_the_main_package\"><\/span><strong>Init function in the main package<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main<\/strong> package can also contain the init function. The init function will be triggered before the <strong>main<\/strong> function<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nvar sample int\n\nfunc init() {\n\tfmt.Println(\"In Init function\")\n\tsample = 4\n}\n\nfunc main() {\n\tfmt.Println(\"Main started\")\n\tfmt.Println(sample)\n\tfmt.Println(\"Main Ended\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">In Init function\nMain started\n4\nMain Ended<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, we have an init function and the main function. In the init function, we initialize the global variable &#8220;sample&#8221;. Notice the order of execution i.e init function is executed first and then the main function is executed.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Multiple_init_function_in_different_source_file_of_same_package\"><\/span><strong>Multiple init() function in different source file of same package<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\"><strong>init() <\/strong>function is called in all the source files belonging to a package if present. Let&#8217;s see an example for it.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>learn\/math\/add.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package math\n\nimport \"fmt\"\n\nfunc init(){\n\tfmt.Println(\"In add init\")\n}\n\nfunc Add(a, b int) int {\n\treturn a + b\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>learn\/math\/subtract.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package math\n\nimport \"fmt\"\n\nfunc init(){\n\tfmt.Println(\"In subtract init\")\n}\n\nfunc Subtract(a, b int) int {\n\treturn a - b\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>learn\/main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com\/learn\/math\"\n)\n\nfunc main() {\n\tfmt.Println(math.Add(2, 1))\n\tfmt.Println(math.Subtract(2, 1))\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">In add init\nIn subtract init\n3\n1<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Multiple_init_function_in_same_source_file\"><\/span><strong>Multiple init() function in same source file<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">There can be multiple init function within same source file.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nvar sample int\n\nfunc init() {\n\tfmt.Println(\"Init1\")\n}\n\nfunc init() {\n\tfmt.Println(\"Init2\")\n}\n\nfunc main() {\n\tfmt.Println(\"Main started\")\n\tfmt.Println(\"Main Ended\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Init1\nInit2\nMain started\nMain Ended<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In above program we have an init function and a main function. In init function we initialize the global variable &#8220;sample&#8221;. Notice the order of execution i.e init function is executed first and then the main function is executed.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Order_of_execution_of_program\"><\/span><strong>Order of execution of program<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Now as we have seen above examples, let&#8217;s see the order of execution of a go program.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The program starts with the main package.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>All imported packages in the source files of the main package are initialized. The same thing happens recursively for further imported packages.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Then global variables declaration in these packages is initialized. The initialization dependency kicks in for initialization of these variables. <a href=\"https:\/\/golang.org\/ref\/spec#Order_of_evaluation\">https:\/\/golang.org\/ref\/spec#Order_of_evaluation<\/a><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>After this, init() function is run in these packages<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Global variables in the main package are initialized<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>init function in the main package is run if present<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>main function in main package is run.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Note here that package initialization is only done once even if it is imported several times.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">For example if main package imports package <strong>a<\/strong> and in turn package <strong>a<\/strong> imports package <strong>b<\/strong>, then below will be the order<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Global variables in package <strong>b<\/strong> will be initialized. init function in source files of package b will be run<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Global variables in the package <strong>a<\/strong> will be initialized. init function in source files of package <strong>b<\/strong> will be run<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Global variables in <strong>main<\/strong> package will be intialized. init function in source files of <strong>main<\/strong> package will be run<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>main<\/strong> function will start executing.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see a program for the same.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module sample\n\ngo 1.14<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>sample\/b\/b1.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package b\n\nimport (\n\t\"fmt\"\n)\n\nfunc init() {\n\tfmt.Println(\"Init: b1\")\n}\n\nfunc TestB() error {\n\treturn nil\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>sample\/b\/b2.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package b\n\nimport (\n\t\"fmt\"\n)\n\nfunc init() {\n\tfmt.Println(\"Init: b2\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>sample\/a\/a1.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package a\n\nimport (\n\t\"fmt\"\n\t\"sample\/b\"\n)\n\nfunc init() {\n\tfmt.Println(\"Init: a1\")\n}\n\nfunc TestA() error {\n\treturn b.TestB()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>sample\/a\/a2.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package a\n\nimport (\n\t\"fmt\"\n)\n\nfunc init() {\n\tfmt.Println(\"Init: a2\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>sample\/main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"sample\/a\"\n)\n\nfunc init() {\n\tfmt.Println(\"Init: main\")\n}\nfunc main() {\n\tfmt.Println(\"Main Function Executing\")\n\ta.TestA()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Init: b1\nInit: b2\nInit: a1\nInit: a1\nInit: main\nMain Function Executing<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice in above example that init function in source files of package <strong>b<\/strong> are run first. Then init function in source files of package <strong>a<\/strong> is run and then init function in source file of main package is run. After that main function is run<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewInit function in the main packageMultiple init() function in different source file of same packageMultiple init() function in same source fileOrder of execution of program Overview init() function is&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-4335","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Init function in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/init-function-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Init function in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewInit function in the main packageMultiple init() function in different source file of same packageMultiple init() function in same source fileOrder of execution of program Overview init() function is...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/init-function-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-11-12T18:38:46+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-11-12T18:49:59+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/init-function-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/init-function-golang\/\",\"name\":\"Init function in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-11-12T18:38:46+00:00\",\"dateModified\":\"2020-11-12T18:49:59+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/init-function-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/init-function-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/init-function-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Init function in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Init function in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/init-function-golang\/","og_locale":"en_US","og_type":"article","og_title":"Init function in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewInit function in the main packageMultiple init() function in different source file of same packageMultiple init() function in same source fileOrder of execution of program Overview init() function is...","og_url":"https:\/\/golangbyexamples.com\/init-function-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-11-12T18:38:46+00:00","article_modified_time":"2020-11-12T18:49:59+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/init-function-golang\/","url":"https:\/\/golangbyexamples.com\/init-function-golang\/","name":"Init function in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-11-12T18:38:46+00:00","dateModified":"2020-11-12T18:49:59+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/init-function-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/init-function-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/init-function-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Init function in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-17V","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4335","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=4335"}],"version-history":[{"count":4,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4335\/revisions"}],"predecessor-version":[{"id":4343,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4335\/revisions\/4343"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=4335"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=4335"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=4335"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}