{"id":576,"date":"2019-11-15T18:48:23","date_gmt":"2019-11-15T18:48:23","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=576"},"modified":"2019-12-27T16:37:54","modified_gmt":"2019-12-27T16:37:54","slug":"facade-design-pattern-in-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/","title":{"rendered":"Facade Design Pattern in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference  &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns in Go (Golang)<\/a><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#Definition\" title=\"Definition:&nbsp; \">Definition:&nbsp; <\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#Problem_Statement\" title=\"Problem Statement:\">Problem Statement:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#When_to_Use\" title=\"When to Use:\">When to Use:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#UML_Diagram\" title=\"UML Diagram:\">UML Diagram:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#Mapping\" title=\"Mapping\">Mapping<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#Practical_Example\" title=\"Practical Example:\">Practical Example:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#Full_Working_Code\" title=\"Full Working Code:\">Full Working Code:<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Definition\"><\/span><strong>Definition:&nbsp; <\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Facade Pattern is classified as a structural design pattern. This design pattern is meant to hide the complexities of the underlying system and provide a simple interface to the client. It provides a unified interface to underlying many interfaces in the system so that from the client perspective it is easier to use. Basically it provides a higher level abstraction over a complicated system.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><br>The term <strong>Facade<\/strong> itself means<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>the principal front of a building, that faces on to a street or open space<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\"><br>Only the front face of the building is shown all the underlying complexity is hidden behind.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><br>Let&#8217;s understand the Facade Design Pattern with a simple example. In this era of the digital wallet, when someone actually does a wallet debit\/credit there are a lot of things that are happening in the background which the client may not be aware of. Below list illustrates some of the activities which happen during the credit\/debit process<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Check Account<\/li><li>Check Security Pin<\/li><li>Credit\/Debit Balance<\/li><li>Make Ledger Entry<\/li><li>Send Notification<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">As can be noticed, there are a lot of things that happen for a single debit\/credit operation. This is where the Facade pattern comes into picture. As a client one only needs to enter the Wallet Number, Security Pin, Amount and specify the type of operation. The rest of the things are taken care of in the background. Here we create a <strong>WalletFacade<\/strong> which provides a simple interface to the client and which takes care of dealing with all underlying operations. <\/p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"200\" src=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg?resize=640%2C200&#038;ssl=1\" alt=\"\" data-id=\"638\" data-full-url=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg?fit=741%2C231&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/facade-design-pattern-behind-scenes\/\" class=\"wp-image-638\" srcset=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg?w=741&amp;ssl=1 741w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg?resize=300%2C94&amp;ssl=1 300w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Problem_Statement\"><\/span><strong>Problem Statement:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>In order to use the complex system, the client had to know the underlying details. Need to provide a simple interface to the client so that they can use a complex system without knowing any of its inner complex details.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"When_to_Use\"><\/span><strong>When to Use:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>When you want to expose a complex system in a simplified way.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#8211; Like in the above example of credit\/debit wallet they need to know only one interface and the rest of the things should be taken care of by that interface.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"UML_Diagram\"><\/span><strong>UML Diagram:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-2 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"284\" src=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-1.jpg?resize=640%2C284&#038;ssl=1\" alt=\"\" data-id=\"639\" data-full-url=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-1.jpg?fit=735%2C326&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/facade-design-pattern-1\/\" class=\"wp-image-639\" srcset=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-1.jpg?w=735&amp;ssl=1 735w, https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-1.jpg?resize=300%2C133&amp;ssl=1 300w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<p class=\"has-medium-font-size\">Below is the corresponding mapping UML diagram with the practical example given below<\/p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-3 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"274\" src=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-2.jpg?resize=640%2C274&#038;ssl=1\" alt=\"\" data-id=\"640\" data-full-url=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-2.jpg?fit=801%2C343&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/facade-design-pattern-2\/\" class=\"wp-image-640\" srcset=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-2.jpg?w=801&amp;ssl=1 801w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-2.jpg?resize=300%2C128&amp;ssl=1 300w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-2.jpg?resize=768%2C329&amp;ssl=1 768w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Mapping\"><\/span><strong>Mapping<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">The below table represents the mapping from the UML diagram actors to actual implementation actors in code.<\/p>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table class=\"has-subtle-pale-blue-background-color has-background\"><tbody><tr><td>Wallet Facade<\/td><td>walletFacade.go<\/td><\/tr><tr><td>account<\/td><td>account.go<\/td><\/tr><tr><td>securityCode<\/td><td>securityCode.go<\/td><\/tr><tr><td>wallet<\/td><td>wallet.go<\/td><\/tr><tr><td>ledger<\/td><td>ledger.go<\/td><\/tr><tr><td>notification<\/td><td>notification.go<\/td><\/tr><tr><td>Client<\/td><td>main.go<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Practical_Example\"><\/span><strong>Practical Example:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>walletFacade.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype walletFacade struct {\n    account      *account\n    wallet       *wallet\n    securityCode *securityCode\n    notification *notification\n    ledger       *ledger\n}\n\nfunc newWalletFacade(accountID string, code int) *walletFacade {\n    fmt.Println(\"Starting create account\")\n    walletFacacde := &walletFacade{\n        account:      newAccount(accountID),\n        securityCode: newSecurityCode(code),\n        wallet:       newWallet(),\n        notification: &notification{},\n        ledger:       &ledger{},\n    }\n    fmt.Println(\"Account created\")\n    return walletFacacde\n}\n\nfunc (w *walletFacade) addMoneyToWallet(accountID string, securityCode int, amount int) error {\n    fmt.Println(\"Starting add money to wallet\")\n    err := w.account.checkAccount(accountID)\n    if err != nil {\n        return err\n    }\n    err = w.securityCode.checkCode(securityCode)\n    if err != nil {\n        return err\n    }\n    w.wallet.creditBalance(amount)\n    w.notification.sendWalletCreditNotification()\n    w.ledger.makeEntry(accountID, \"credit\", amount)\n    return nil\n}\n\nfunc (w *walletFacade) deductMoneyFromWallet(accountID string, securityCode int, amount int) error {\n    fmt.Println(\"Starting debit money from wallet\")\n    err := w.account.checkAccount(accountID)\n    if err != nil {\n        return err\n    }\n    err = w.securityCode.checkCode(securityCode)\n    if err != nil {\n        return err\n    }\n    err = w.wallet.debitBalance(amount)\n    if err != nil {\n        return err\n    }\n    w.notification.sendWalletDebitNotification()\n    w.ledger.makeEntry(accountID, \"credit\", amount)\n    return nil\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>account.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype account struct {\n    name string\n}\n\nfunc newAccount(accountName string) *account {\n    return &account{\n        name: accountName,\n    }\n}\n\nfunc (a *account) checkAccount(accountName string) error {\n    if a.name != accountName {\n        return fmt.Errorf(\"Account Name is incorrect\")\n    }\n    fmt.Println(\"Account Verified\")\n    return nil\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>securityCode.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype securityCode struct {\n    code int\n}\n\nfunc newSecurityCode(code int) *securityCode {\n    return &securityCode{\n        code: code,\n    }\n}\n\nfunc (s *securityCode) checkCode(incomingCode int) error {\n    if s.code != incomingCode {\n        return fmt.Errorf(\"Security Code is incorrect\")\n    }\n    fmt.Println(\"SecurityCode Verified\")\n    return nil\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>wallet.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype wallet struct {\n    balance int\n}\n\nfunc newWallet() *wallet {\n    return &wallet{\n        balance: 0,\n    }\n}\n\nfunc (w *wallet) creditBalance(amount int) {\n    w.balance += amount\n    fmt.Println(\"Wallet balance added successfully\")\n    return\n}\n\nfunc (w *wallet) debitBalance(amount int) error {\n    if w.balance < amount {\n        return fmt.Errorf(\"Balance is not sufficient\")\n    }\n    fmt.Println(\"Wallet balance is Sufficient\")\n    w.balance = w.balance - amount\n    return nil\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>ledger.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype ledger struct {\n}\n\nfunc (s *ledger) makeEntry(accountID, txnType string, amount int) {\n    fmt.Printf(\"Make ledger entry for accountId %s with txnType %s for amount %d\", accountID, txnType, amount)\n    return\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>notification.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype notification struct {\n}\n\nfunc (n *notification) sendWalletCreditNotification() {\n    fmt.Println(\"Sending wallet credit notification\")\n}\n\nfunc (n *notification) sendWalletDebitNotification() {\n    fmt.Println(\"Sending wallet debit notification\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"log\"\n)\n\nfunc main() {\n    fmt.Println()\n    walletFacade := newWalletFacade(\"abc\", 1234)\n    fmt.Println()\n    err := walletFacade.addMoneyToWallet(\"abc\", 1234, 10)\n    if err != nil {\n        log.Fatalf(\"Error: %s\\n\", err.Error())\n    }\n    fmt.Println()\n    err = walletFacade.deductMoneyFromWallet(\"ab\", 1234, 5)\n    if err != nil {\n        log.Fatalf(\"Error: %s\\n\", err.Error())\n    }\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><br><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Starting create account\nAccount created\n\nStarting add money to wallet\nAccount Verified\nSecurityCode Verified\nWallet balance added successfully\nSending wallet credit notification\nMake ledger entry for accountId abc with txnType credit for amount 10\n\nStarting debit money from wallet\nAccount Verified\nSecurityCode Verified\nWallet balance is Sufficient\nSending wallet debit notification\nMake ledger entry for accountId abc with txnType debit for amount 5\n<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Full_Working_Code\"><\/span><strong>Full Working Code:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"log\"\n)\n\ntype walletFacade struct {\n    account      *account\n    wallet       *wallet\n    securityCode *securityCode\n    notification *notification\n    ledger       *ledger\n}\n\nfunc newWalletFacade(accountID string, code int) *walletFacade {\n    fmt.Println(\"Starting create account\")\n    walletFacacde := &walletFacade{\n        account:      newAccount(accountID),\n        securityCode: newSecurityCode(code),\n        wallet:       newWallet(),\n        notification: &notification{},\n        ledger:       &ledger{},\n    }\n    fmt.Println(\"Account created\")\n    return walletFacacde\n}\n\nfunc (w *walletFacade) addMoneyToWallet(accountID string, securityCode int, amount int) error {\n    fmt.Println(\"Starting add money to wallet\")\n    err := w.account.checkAccount(accountID)\n    if err != nil {\n        return err\n    }\n    err = w.securityCode.checkCode(securityCode)\n    if err != nil {\n        return err\n    }\n    w.wallet.creditBalance(amount)\n    w.notification.sendWalletCreditNotification()\n    w.ledger.makeEntry(accountID, \"credit\", amount)\n    return nil\n}\n\nfunc (w *walletFacade) deductMoneyFromWallet(accountID string, securityCode int, amount int) error {\n    fmt.Println(\"Starting debit money from wallet\")\n    err := w.account.checkAccount(accountID)\n    if err != nil {\n        return err\n    }\n    err = w.securityCode.checkCode(securityCode)\n    if err != nil {\n        return err\n    }\n    err = w.wallet.debitBalance(amount)\n    if err != nil {\n        return err\n    }\n    w.notification.sendWalletDebitNotification()\n    w.ledger.makeEntry(accountID, \"credit\", amount)\n    return nil\n}\n\ntype account struct {\n    name string\n}\n\nfunc newAccount(accountName string) *account {\n    return &account{\n        name: accountName,\n    }\n}\n\nfunc (a *account) checkAccount(accountName string) error {\n    if a.name != accountName {\n        return fmt.Errorf(\"Account Name is incorrect\")\n    }\n    fmt.Println(\"Account Verified\")\n    return nil\n}\n\ntype securityCode struct {\n    code int\n}\n\nfunc newSecurityCode(code int) *securityCode {\n    return &securityCode{\n        code: code,\n    }\n}\n\nfunc (s *securityCode) checkCode(incomingCode int) error {\n    if s.code != incomingCode {\n        return fmt.Errorf(\"Security Code is incorrect\")\n    }\n    fmt.Println(\"SecurityCode Verified\")\n    return nil\n}\n\ntype wallet struct {\n    balance int\n}\n\nfunc newWallet() *wallet {\n    return &wallet{\n        balance: 0,\n    }\n}\n\nfunc (w *wallet) creditBalance(amount int) {\n    w.balance += amount\n    fmt.Println(\"Wallet balance added successfully\")\n    return\n}\n\nfunc (w *wallet) debitBalance(amount int) error {\n    if w.balance < amount {\n        return fmt.Errorf(\"Balance is not sufficient\")\n    }\n    fmt.Println(\"Wallet balance is Sufficient\")\n    w.balance = w.balance - amount\n    return nil\n}\n\ntype ledger struct {\n}\n\nfunc (s *ledger) makeEntry(accountID, txnType string, amount int) {\n    fmt.Printf(\"Make ledger entry for accountId %s with txnType %s for amount %d\\n\", accountID, txnType, amount)\n    return\n}\n\ntype notification struct {\n}\n\nfunc (n *notification) sendWalletCreditNotification() {\n    fmt.Println(\"Sending wallet credit notification\")\n}\n\nfunc (n *notification) sendWalletDebitNotification() {\n    fmt.Println(\"Sending wallet debit notification\")\n}\n\nfunc main() {\n    fmt.Println()\n    walletFacade := newWalletFacade(\"abc\", 1234)\n    fmt.Println()\n    err := walletFacade.addMoneyToWallet(\"abc\", 1234, 10)\n    if err != nil {\n        log.Fatalf(\"Error: %s\\n\", err.Error())\n    }\n    fmt.Println()\n    err = walletFacade.deductMoneyFromWallet(\"abc\", 1234, 5)\n    if err != nil {\n        log.Fatalf(\"Error: %s\\n\", err.Error())\n    }\n}\n\n<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Starting create account\nAccount created\n\nStarting add money to wallet\nAccount Verified\nSecurityCode Verified\nWallet balance added successfully\nSending wallet credit notification\nMake ledger entry for accountId abc with txnType credit for amount 10\n\nStarting debit money from wallet\nAccount Verified\nSecurityCode Verified\nWallet balance is Sufficient\nSending wallet debit notification\nMake ledger entry for accountId abc with txnType debit for amount 5\n<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; Problem Statement:When&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[65,64,66,67,69],"class_list":["post-576","post","type-post","status-publish","format-standard","hentry","category-tech","tag-design-pattern-in-go","tag-design-pattern-in-golang","tag-facade","tag-facade-design-pattern","tag-facade-design-pattern-in-go"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Facade Design Pattern in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Facade Design Pattern in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; Problem Statement:When...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-11-15T18:48:23+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-12-27T16:37:54+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/\",\"name\":\"Facade Design Pattern in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg\",\"datePublished\":\"2019-11-15T18:48:23+00:00\",\"dateModified\":\"2019-12-27T16:37:54+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Facade Design Pattern in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Facade Design Pattern in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/","og_locale":"en_US","og_type":"article","og_title":"Facade Design Pattern in Go (Golang) - Welcome To Golang By Example","og_description":"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; Problem Statement:When...","og_url":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-11-15T18:48:23+00:00","article_modified_time":"2019-12-27T16:37:54+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/","url":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/","name":"Facade Design Pattern in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg","datePublished":"2019-11-15T18:48:23+00:00","dateModified":"2019-12-27T16:37:54+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Facade-Design-Pattern-Behind-Scenes.jpg"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/facade-design-pattern-in-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Facade Design Pattern in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-9i","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/576","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=576"}],"version-history":[{"count":8,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/576\/revisions"}],"predecessor-version":[{"id":1023,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/576\/revisions\/1023"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=576"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=576"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=576"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}