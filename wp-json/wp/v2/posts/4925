{"id":4925,"date":"2021-01-10T23:34:05","date_gmt":"2021-01-10T18:04:05","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=4925"},"modified":"2021-01-10T23:34:13","modified_gmt":"2021-01-10T18:04:13","slug":"octet-stream-http-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/","title":{"rendered":"HTTP send\/receive application octet-stream request body in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/#HTTP_Client_Example\" title=\"HTTP Client Example\">HTTP Client Example<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/#HTTP_Server_Example\" title=\"HTTP Server Example\">HTTP Server Example<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\"><strong>application\/octet-stream<\/strong> content-type is used to transfer binary data in the HTTP request body.&nbsp;So <strong>application\/octet-stream<\/strong> is used for sending files over HTTP request.&nbsp;Let&#8217;s see an example of both HTTP client and server in golang for sending and receiving <strong>application\/octet-stream<\/strong> data.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s create two folders first.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>client<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>server<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Also, create a file named <strong>photo.png<\/strong> in the <strong>client<\/strong> folder<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"HTTP_Client_Example\"><\/span><strong>HTTP Client Example<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Below is the program for the same<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>client\/main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"bytes\"\n\t\"fmt\"\n\t\"io\/ioutil\"\n\t\"log\"\n\t\"net\/http\"\n\t\"time\"\n)\n\nfunc main() {\n\terr := call(\"http:\/\/localhost:8080\/photo\", \"POST\")\n\tif err != nil {\n\t\tfmt.Printf(\"Error occurred. Err: %s\", err.Error())\n\t}\n}\n\nfunc call(urlPath, method string) error {\n\tclient := &http.Client{\n\t\tTimeout: time.Second * 10,\n\t}\n\n\tb, err := ioutil.ReadFile(\"photo.png\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treq, err := http.NewRequest(method, urlPath, bytes.NewReader(b))\n\tif err != nil {\n\t\treturn err\n\t}\n\treq.Header.Set(\"Content-Type\", \"application\/octet-stream\")\n\trsp, _ := client.Do(req)\n\tif rsp.StatusCode != http.StatusOK {\n\t\tlog.Printf(\"Request failed with response code: %d\", rsp.StatusCode)\n\t}\n\treturn nil\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, we are sending the file <strong>photo.png<\/strong> as <strong>application\/octet-stream <\/strong>request body in the POST request. photo.png is first converted into bytes and these bytes are sent as <strong>application\/octet-stream<\/strong> body. For that, bytes of the file are read first<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">b, err := ioutil.ReadFile(\"photo.png\")<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">After the file is converted into bytes, it is passed to the <strong>http.NewRequest<\/strong> method as below for the third argument<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">bytes.NewReader(b)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The <strong>bytes.NewReader<\/strong> returns the <strong>bytes.Reader<\/strong> instance. <strong>bytes.Reader<\/strong> implements both <strong>io.Reader <\/strong>and <strong>io.Writer.<\/strong> The <strong>http.NewRequest<\/strong> method accepts the <strong>io.Reader<\/strong> for the body part. Therefore <strong>bytes.Reader <\/strong>instance can be passed as the third argument to http.NewRequest<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">req, err := http.NewRequest(method, urlPath, bytes.NewReader(b))<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Also in the above program, we are making a call to the below API<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">http:\/\/localhost:8080\/photo<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s create a server that will listen on port <strong>8080<\/strong> so that we can test the above client as well. Also, the server will parse the application\/octet-stream body and save it as <strong>photo.png<\/strong>. Let&#8217;s see the program for the server now<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"HTTP_Server_Example\"><\/span><strong>HTTP Server Example<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Below is the program for the same.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>server\/main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"io\/ioutil\"\n\t\"net\/http\"\n\t\"os\"\n)\n\nfunc main() {\n\tcreateEmployeeHanlder := http.HandlerFunc(createEmployee)\n\thttp.Handle(\"\/photo\", createEmployeeHanlder)\n\thttp.ListenAndServe(\":8080\", nil)\n}\n\nfunc createEmployee(w http.ResponseWriter, request *http.Request) {\n\td, err := ioutil.ReadAll(request.Body)\n\tif err != nil {\n\t\thttp.Error(w, err.Error(), http.StatusBadRequest)\n\t}\n\ttmpfile, err := os.Create(\".\/\" + \"photo.png\")\n\tdefer tmpfile.Close()\n\tif err != nil {\n\t\thttp.Error(w, err.Error(), http.StatusBadRequest)\n\t}\n\ttmpfile.Write(d)\n\n\tw.WriteHeader(200)\n\treturn\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, we have created an API that will listen on port 8080. The API signature will be<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">http:\/\/localhost:8080\/photo<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It reads the bytes from the POST body and saves them to a file <strong>photo.png<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s run both the Server and the Client. Run the server first.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run server\/main.go<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It will start listening to port 8080. After that run the client.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run client\/main.go<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">After the API is successfully executed, check at the server end. A file named <strong>photo.png<\/strong> will be created at the server end.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewHTTP Client ExampleHTTP Server Example Overview application\/octet-stream content-type is used to transfer binary data in the HTTP request body.&nbsp;So application\/octet-stream is used for sending files over HTTP request.&nbsp;Let&#8217;s see&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-4925","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>HTTP send\/receive application octet-stream request body in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"HTTP send\/receive application octet-stream request body in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewHTTP Client ExampleHTTP Server Example Overview application\/octet-stream content-type is used to transfer binary data in the HTTP request body.&nbsp;So application\/octet-stream is used for sending files over HTTP request.&nbsp;Let&#8217;s see...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-01-10T18:04:05+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-01-10T18:04:13+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/\",\"name\":\"HTTP send\/receive application octet-stream request body in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-01-10T18:04:05+00:00\",\"dateModified\":\"2021-01-10T18:04:13+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"HTTP send\/receive application octet-stream request body in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"HTTP send\/receive application octet-stream request body in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/","og_locale":"en_US","og_type":"article","og_title":"HTTP send\/receive application octet-stream request body in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewHTTP Client ExampleHTTP Server Example Overview application\/octet-stream content-type is used to transfer binary data in the HTTP request body.&nbsp;So application\/octet-stream is used for sending files over HTTP request.&nbsp;Let&#8217;s see...","og_url":"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-01-10T18:04:05+00:00","article_modified_time":"2021-01-10T18:04:13+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/","url":"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/","name":"HTTP send\/receive application octet-stream request body in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-01-10T18:04:05+00:00","dateModified":"2021-01-10T18:04:13+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/octet-stream-http-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/octet-stream-http-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"HTTP send\/receive application octet-stream request body in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1hr","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4925","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=4925"}],"version-history":[{"count":3,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4925\/revisions"}],"predecessor-version":[{"id":4932,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4925\/revisions\/4932"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=4925"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=4925"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=4925"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}