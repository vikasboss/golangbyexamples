{"id":203,"date":"2019-08-18T15:02:35","date_gmt":"2019-08-18T15:02:35","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=203"},"modified":"2019-11-12T18:46:41","modified_gmt":"2019-11-12T18:46:41","slug":"go-abstract-class","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/go-abstract-class\/","title":{"rendered":"Abstract Class in GO: Complete Guide"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Go Interface doesn&#8217;t have fields and also it doesn&#8217;t allow the definition of methods inside it. Any type needs to implements all methods of interface to become of that interface type. There are use cases where it is useful to have a default implementation of a method and also default fields in GO. Before understanding how to do it lets first understand the requirements of an abstract class:<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li>Abstract class should have default fields<\/li><li> Abstract class should have the default method<\/li><li>It should not be possible to create a direct instance of the abstract class<\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">We will use a combination of a <strong>interface (abstract interface)<\/strong> and <strong>struct (abstract concrete type).<\/strong> Together they can provide the functionalities of an abstract class. See the below program:<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\n\/\/Abstract Interface\ntype iAlpha interface {\n    work()\n    common()\n}\n\n\/\/Abstract Concrete Type\ntype alpha struct {\n    name string\n}\n\nfunc (a *alpha) common() {\n    fmt.Println(\"common called\")\n}\n\n\/\/Implementing Type\ntype beta struct {\n    alpha\n}\n\nfunc (b *beta) work() {\n    fmt.Println(\"work called\")\n    fmt.Printf(\"name is %s\\n\", b.name)\n    b.common()\n}\n\nfunc main() {\n    a := alpha{\n        name: \"test\",\n    }\n    b := &beta{\n        alpha: a,\n    }\n    b.work()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Output:<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">work called\nname is test\ncommon called<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In above program:<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>We created an abstract interface <strong>iAlpha<\/strong>, an\u00a0abstract concrete struct\u00a0<strong>alpha, <\/strong>and an implementor struct\u00a0<strong>beta<\/strong><\/li><li><strong>alpha <\/strong>struct is embedded in <strong>beta <\/strong>struct<\/li><li>The beta struct is able to access default field\u00a0<strong>&#8220;name&#8221;<\/strong><\/li><li>The beta struct is able to access the default method <strong>&#8220;common&#8221;<\/strong><\/li><li>It is not able to create a direct instance of <strong>iAlpha\u00a0<\/strong>\u00a0as <strong>alpha<\/strong> struct only implement only one of the method of <strong>iAlpha.<\/strong><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">So it fulfills all three requirements but there is also one limitation of the above method. It is not possible to call the &#8220;<strong>work<\/strong>&#8221; method\u00a0from <strong>&#8220;common&#8221; <\/strong>method of alpha. Basically there is no way to call an undefined method of the abstract interface from default methods of an abstract concrete type. There is one way to fix it, though. See below program<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\n\/\/Abstract Interface\ntype iAlpha interface {\n    work()\n    common()\n}\n\n\/\/Abstract Concrete Type\ntype alpha struct {\n    name string\n    work func()\n}\n\nfunc (a *alpha) common() {\n    fmt.Println(\"common called\")\n    a.work()\n}\n\n\/\/Implementing Type\ntype beta struct {\n    alpha\n}\n\nfunc (b *beta) work() {\n    fmt.Println(\"work called\")\n    fmt.Printf(\"name is %s\\n\", b.name)\n}\n\nfunc main() {\n    a := alpha{\n        name: \"test\",\n    }\n    b := &beta{\n        alpha: a,\n    }\n    b.alpha.work = b.work\n    b.common()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Output:<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">common called\nwork called\nname is test<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program:<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>We created a new field&nbsp;<strong>&#8220;work&#8221; <\/strong>of type func in alpha<\/li><li>We assigned alpha&#8217;s <strong>&#8220;work&#8221; <\/strong>method to beta <strong>&#8220;work&#8221; <\/strong>method<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">The only problem with the above program is that it is possible to create a direct instantiation of <strong>alpha<\/strong> struct and by providing\u00a0the definition of <strong>work<\/strong> method, an instance of type <strong>iAlpha <\/strong>is created. This violates point 3 of the above Abstract class requirement as without creating our own new type we are able to create a type of <strong>iAlpha. <\/strong>Let&#8217;s try to fix this problem. The below program additionally also solves the problem where it was not possible to call the undefined methods from default methods.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\n\/\/Abstract Interface\ntype iAlpha interface {\n    work()\n    common(iAlpha)\n}\n\n\/\/Abstract Concrete Type\ntype alpha struct {\n    name string\n}\n\nfunc (a *alpha) common(i iAlpha) {\n    fmt.Println(\"common called\")\n    i.work()\n}\n\n\/\/Implementing Type\ntype beta struct {\n    alpha\n}\n\nfunc (b *beta) work() {\n    fmt.Println(\"work called\")\n    fmt.Printf(\"Name is %s\\n\", b.name)\n}\n\nfunc main() {\n    a := alpha{\n        name: \"test\",\n    }\n    b := &beta{\n        alpha: a,\n    }\n    b.common(b)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Output:<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">common called\nwork called\nName is test<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program:<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>\u00a0All the default methods will accept the first argument of interface type\u00a0<strong>iAlpha. <\/strong>All the undefined methods of <strong>alpha <\/strong>struct will be called using this argument from default methods.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Conclusion:<\/strong> We can see in the above program that we are able to fulfill all three requirements of an abstract class. This is one of the ways to simulate abstract class in GO.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Go Interface doesn&#8217;t have fields and also it doesn&#8217;t allow the definition of methods inside it. Any type needs to implements all methods of interface to become of that interface type. There&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[12,14,13,16,3,17,15],"class_list":["post-203","post","type-post","status-publish","format-standard","hentry","category-tech","tag-abstract","tag-abstract-class","tag-class","tag-complete","tag-go","tag-guide","tag-oop"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Abstract Class in GO: Complete Guide - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/go-abstract-class\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Abstract Class in GO: Complete Guide - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Go Interface doesn&#8217;t have fields and also it doesn&#8217;t allow the definition of methods inside it. Any type needs to implements all methods of interface to become of that interface type. There...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/go-abstract-class\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-08-18T15:02:35+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-11-12T18:46:41+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/go-abstract-class\/\",\"url\":\"https:\/\/golangbyexamples.com\/go-abstract-class\/\",\"name\":\"Abstract Class in GO: Complete Guide - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2019-08-18T15:02:35+00:00\",\"dateModified\":\"2019-11-12T18:46:41+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/go-abstract-class\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/go-abstract-class\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/go-abstract-class\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Abstract Class in GO: Complete Guide\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Abstract Class in GO: Complete Guide - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/go-abstract-class\/","og_locale":"en_US","og_type":"article","og_title":"Abstract Class in GO: Complete Guide - Welcome To Golang By Example","og_description":"Go Interface doesn&#8217;t have fields and also it doesn&#8217;t allow the definition of methods inside it. Any type needs to implements all methods of interface to become of that interface type. There...","og_url":"https:\/\/golangbyexamples.com\/go-abstract-class\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-08-18T15:02:35+00:00","article_modified_time":"2019-11-12T18:46:41+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/go-abstract-class\/","url":"https:\/\/golangbyexamples.com\/go-abstract-class\/","name":"Abstract Class in GO: Complete Guide - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2019-08-18T15:02:35+00:00","dateModified":"2019-11-12T18:46:41+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/go-abstract-class\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/go-abstract-class\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/go-abstract-class\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Abstract Class in GO: Complete Guide"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-3h","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/203","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=203"}],"version-history":[{"count":13,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/203\/revisions"}],"predecessor-version":[{"id":499,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/203\/revisions\/499"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=203"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=203"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=203"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}