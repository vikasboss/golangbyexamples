{"id":562,"date":"2019-11-13T19:57:19","date_gmt":"2019-11-13T19:57:19","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=562"},"modified":"2019-12-27T16:37:52","modified_gmt":"2019-12-27T16:37:52","slug":"strategy-design-pattern-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/","title":{"rendered":"Strategy Design Pattern in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference  &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns in Go (Golang)<\/a><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#Definition\" title=\"Definition:&nbsp; \">Definition:&nbsp; <\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#When_to_Use\" title=\"When to Use\">When to Use<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#UML_Diagram\" title=\"UML Diagram\">UML Diagram<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#Mapping\" title=\"Mapping\">Mapping<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#Practical_Example\" title=\"Practical Example \">Practical Example <\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Definition\"><\/span><strong>Definition:&nbsp; <\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Strategy design pattern is a behavioral design pattern. This design pattern allows you to change the behavior of an object at run time without any change in the class of that object.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s understand the strategy pattern with an example. Suppose you are building an In-Memory-Cache. Since it is an In-Memory-Cache it is of limited size. Whenever it reaches its maximum size that some old entries from the cache need to be evicted. This eviction can happen via several algorithms. Some of the popular algorithms are<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li><strong>LRU<\/strong> &#8211; Least Recently Used: Remove the entry which has been used least recently.<\/li><li><strong>FIFO<\/strong> &#8211; First In First Out: Remove the entry, which was created first.<\/li><li><strong>LFU<\/strong> &#8211; Least Frequently Used: Remove the entry which was least frequently used.<\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">Now the problem is how to decouple our Cache class with the algorithm such that we should be able to change the algorithm at run time. Also Cache class should not change when a new algorithm is being added. This is were Strategy Pattern comes into the picture. The strategy pattern suggests creating a family of the algorithm with each algorithm having its own class. Each of these classes follows the same interface and this makes the algorithm interchangeable within the family. Let&#8217;s say the common interface name is <strong>evictionAlgo<\/strong>.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now our main <strong>Cache <\/strong>class will embed <strong>evictionAlgo<\/strong> interface. Instead of implementing all types of eviction algorithms in itself, our Cache class will delegate all it to the <strong>evictionAlgo<\/strong> interface. Since evictionAlgo is an interface, we can run time change the algorithm to either be LRU, FIFO, LFU without any change in Cache class.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"When_to_Use\"><\/span><strong>When to Use<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>When an object needs to support different behavior and you want to change the behavior at run time.<\/li><li>When you want to avoid a lot of conditionals of choosing the runtime behavior.<\/li><li>When you have different algorithms that are similar and they only differ in the way they execute some behavior.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"UML_Diagram\"><\/span><strong>UML Diagram<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Notice below UML diagram, Context (Cache) embeds the strategy (evictionAlgo) interface. <\/p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"372\" src=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg?resize=640%2C372&#038;ssl=1\" alt=\"\" data-id=\"635\" data-full-url=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg?fit=676%2C393&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/strategy-design-pattern-1\/\" class=\"wp-image-635\" srcset=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg?w=676&amp;ssl=1 676w, https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg?resize=300%2C174&amp;ssl=1 300w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below is the corresponding mapping UML diagram with the example given above<\/p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-2 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"360\" src=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-2.jpg?resize=640%2C360&#038;ssl=1\" alt=\"\" data-id=\"636\" data-full-url=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-2.jpg?fit=716%2C403&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/strategy-design-pattern-2\/\" class=\"wp-image-636\" srcset=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-2.jpg?w=716&amp;ssl=1 716w, https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-2.jpg?resize=300%2C169&amp;ssl=1 300w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Mapping\"><\/span><strong>Mapping<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">The below table represents the mapping from the UML diagram actors to actual implementation actors in code.<\/p>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table class=\"has-subtle-pale-blue-background-color has-background\"><tbody><tr><td>Context<\/td><td>cache.go<\/td><\/tr><tr><td>Strategy<\/td><td>evictionAlgo.go<\/td><\/tr><tr><td>Concrete Strategy Object 1<\/td><td>lfu.go<\/td><\/tr><tr><td>Concrete Strategy Object 2<\/td><td>lru.go<\/td><\/tr><tr><td>Concrete Strategy Object 3<\/td><td>fifo.go<\/td><\/tr><tr><td>Client<\/td><td>main.go<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Practical_Example\"><\/span><strong>Practical Example <\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>evictionAlgo.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype evictionAlgo interface {\n    evict(c *cache)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>fifo.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype fifo struct {\n}\n\nfunc (l *fifo) evict(c *cache) {\n    fmt.Println(\"Evicting by fifo strtegy\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>lru.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype lru struct {\n}\n\nfunc (l *lru) evict(c *cache) {\n    fmt.Println(\"Evicting by lru strtegy\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>lfu.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype lfu struct {\n}\n\nfunc (l *lfu) evict(c *cache) {\n    fmt.Println(\"Evicting by lfu strtegy\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>cache.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype cache struct {\n    storage      map[string]string\n    evictionAlgo evictionAlgo\n    capacity     int\n    maxCapacity  int\n}\n\nfunc initCache(e evictionAlgo) *cache {\n    storage := make(map[string]string)\n    return &cache{\n        storage:      storage,\n        evictionAlgo: e,\n        capacity:     0,\n        maxCapacity:  2,\n    }\n}\n\nfunc (c *cache) setEvictionAlgo(e evictionAlgo) {\n    c.evictionAlgo = e\n}\n\nfunc (c *cache) add(key, value string) {\n    if c.capacity == c.maxCapacity {\n        c.evict()\n    }\n    c.capacity++\n    c.storage[key] = value\n}\n\nfunc (c *cache) get(key string) {\n    delete(c.storage, key)\n}\n\nfunc (c *cache) evict() {\n    c.evictionAlgo.evict(c)\n    c.capacity--\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nfunc main() {\n    lfu := &lfu{}\n    cache := initCache(lfu)\n    cache.add(\"a\", \"1\")\n    cache.add(\"b\", \"2\")\n    cache.add(\"c\", \"3\")\n    lru := &lru{}\n    cache.setEvictionAlgo(lru)\n    cache.add(\"d\", \"4\")\n    fifo := &fifo{}\n    cache.setEvictionAlgo(fifo)\n    cache.add(\"e\", \"5\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Evicting by lfu strtegy\nEvicting by lru strtegy\nEvicting by fifo strtegy<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[25,3,4,60,61],"class_list":["post-562","post","type-post","status-publish","format-standard","hentry","category-tech","tag-design-pattern","tag-go","tag-golang","tag-strategy-design-pattern","tag-strategy-design-pattern-in-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Strategy Design Pattern in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Strategy Design Pattern in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-11-13T19:57:19+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-12-27T16:37:52+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/\",\"name\":\"Strategy Design Pattern in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg\",\"datePublished\":\"2019-11-13T19:57:19+00:00\",\"dateModified\":\"2019-12-27T16:37:52+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Strategy Design Pattern in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Strategy Design Pattern in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/","og_locale":"en_US","og_type":"article","og_title":"Strategy Design Pattern in Go (Golang) - Welcome To Golang By Example","og_description":"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to...","og_url":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-11-13T19:57:19+00:00","article_modified_time":"2019-12-27T16:37:52+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/","url":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/","name":"Strategy Design Pattern in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg","datePublished":"2019-11-13T19:57:19+00:00","dateModified":"2019-12-27T16:37:52+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Strategy-Design-Pattern-1.jpg"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/strategy-design-pattern-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Strategy Design Pattern in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-94","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/562","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=562"}],"version-history":[{"count":7,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/562\/revisions"}],"predecessor-version":[{"id":1021,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/562\/revisions\/1021"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=562"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=562"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=562"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}