{"id":571,"date":"2019-11-15T18:34:53","date_gmt":"2019-11-15T18:34:53","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=571"},"modified":"2020-09-09T02:22:59","modified_gmt":"2020-09-08T20:52:59","slug":"chain-of-responsibility-design-pattern-in-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/","title":{"rendered":"Chain of Responsibility Design Pattern in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference  &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns in Go (Golang)<\/a><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#Definition\" title=\"Definition:&nbsp; \">Definition:&nbsp; <\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#When_to_Use\" title=\"When to Use:\">When to Use:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#UML_Diagram\" title=\"UML Diagram:\">UML Diagram:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#Mapping\" title=\"Mapping&nbsp;\">Mapping&nbsp;<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#Practical_Example\" title=\"Practical Example:\">Practical Example:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#Full_Working_Code\" title=\"Full Working Code:\">Full Working Code:<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Definition\"><\/span><strong>Definition:&nbsp; <\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Chain of Responsibility Design Pattern is a behavioral design pattern. It lets you create a chain of request handlers. For every incoming request, it is passed through the chain and each of the handler:<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li>Processes the request or skips the processing.<\/li><li>Decides whether to pass the request to the next handler in the chain or not<\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">Chain of Responsibility Design pattern will be best understood with an example. Let&#8217;s take the case of a hospital. A hospital has multiple departments such as:<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li>Reception<\/li><li>Doctor<\/li><li>Medicine Room<\/li><li>Cashier<\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">Whenever any patient arrives he first goes to <strong>Reception<\/strong> then to <b>Doctor <\/b>then to <strong>Medicine Room <\/strong>and then to <strong>Cashier<\/strong> and so on. In a way, a patient is sent into a chain of departments which when done, sends the patient to further departments. This is where the Chain of Responsibility pattern comes into the picture.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"When_to_Use\"><\/span><strong>When to Use:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The pattern is applicable when there are multiple candidates to process the same request.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>When you don&#8217;t want the client to choose the receiver as multiple objects can handle the request. Also, you want to decouple the client from receivers. The Client only needs to know the first element in the chain.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">&nbsp; &nbsp; &nbsp; &nbsp; -As in the example of the hospital, a patient first goes to the reception and then reception based upon a patient&#8217;s current status sends up to the next handler in the chain.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"UML_Diagram\"><\/span><strong>UML Diagram:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"577\" height=\"299\" src=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg?resize=577%2C299&#038;ssl=1\" alt=\"\" data-id=\"629\" data-full-url=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg?fit=577%2C299&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/chain-of-responsibility-design-pattern-1\/\" class=\"wp-image-629\" srcset=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg?w=577&amp;ssl=1 577w, https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg?resize=300%2C155&amp;ssl=1 300w\" sizes=\"auto, (max-width: 577px) 100vw, 577px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<p class=\"has-medium-font-size\">Below is the corresponding mapping UML diagram with the practical example given below<\/p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-2 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"202\" src=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-2.jpg?resize=640%2C202&#038;ssl=1\" alt=\"\" data-id=\"630\" data-full-url=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-2.jpg?fit=887%2C280&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/chain-of-responsibility-design-pattern-2\/\" class=\"wp-image-630\" srcset=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-2.jpg?w=887&amp;ssl=1 887w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-2.jpg?resize=300%2C95&amp;ssl=1 300w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-2.jpg?resize=768%2C242&amp;ssl=1 768w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-2.jpg?resize=850%2C268&amp;ssl=1 850w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Mapping\"><\/span><strong>Mapping&nbsp;<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table class=\"has-subtle-pale-blue-background-color has-background\"><tbody><tr><td>handler<\/td><td>department.go<\/td><\/tr><tr><td>Concrete Handler 1<\/td><td>account.go<\/td><\/tr><tr><td>Concrete Handler 2<\/td><td>doctor.go<\/td><\/tr><tr><td>Concrete Handler 3<\/td><td>medical.go<\/td><\/tr><tr><td>Concrete Handler 4<\/td><td>cashier.go<\/td><\/tr><tr><td>Client<\/td><td>main.go<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Practical_Example\"><\/span><strong>Practical Example:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>department.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype department interface {\n    execute(*patient)\n    setNext(department)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>reception.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype reception struct {\n    next department\n}\n\nfunc (r *reception) execute(p *patient) {\n    if p.registrationDone {\n        fmt.Println(\"Patient registration already done\")\n        r.next.execute(p)\n        return\n    }\n    fmt.Println(\"Reception registering patient\")\n    p.registrationDone = true\n    r.next.execute(p)\n}\n\nfunc (r *reception) setNext(next department) {\n    r.next = next\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>doctor.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype doctor struct {\n    next department\n}\n\nfunc (d *doctor) execute(p *patient) {\n    if p.doctorCheckUpDone {\n        fmt.Println(\"Doctor checkup already done\")\n        d.next.execute(p)\n        return\n    }\n    fmt.Println(\"Doctor checking patient\")\n    p.doctorCheckUpDone = true\n    d.next.execute(p)\n}\n\nfunc (d *doctor) setNext(next department) {\n    d.next = next\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>medical.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype medical struct {\n    next department\n}\n\nfunc (m *medical) execute(p *patient) {\n    if p.medicineDone {\n        fmt.Println(\"Medicine already given to patient\")\n        m.next.execute(p)\n        return\n    }\n    fmt.Println(\"Medical giving medicine to patient\")\n    p.medicineDone = true\n    m.next.execute(p)\n}\n\nfunc (m *medical) setNext(next department) {\n    m.next = next\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>cashier.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype cashier struct {\n\tnext department\n}\n\nfunc (c *cashier) execute(p *patient) {\n\tif p.paymentDone {\n\t\tfmt.Println(\"Payment Done\")\n\t}\n\tfmt.Println(\"Cashier getting money from patient patient\")\n}\n\nfunc (c *cashier) setNext(next department) {\n\tc.next = next\n}\n<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>patient.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype patient struct {\n    name              string\n    registrationDone  bool\n    doctorCheckUpDone bool\n    medicineDone      bool\n    paymentDone       bool\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nfunc main() {\n    cashier := &cashier{}\n    \/\/Set next for medical department\n    medical := &medical{}\n    medical.setNext(cashier)\n    \/\/Set next for doctor department\n    doctor := &doctor{}\n    doctor.setNext(medical)\n    \/\/Set next for reception department\n    reception := &reception{}\n    reception.setNext(doctor)\n    patient := &patient{name: \"abc\"}\n    \/\/Patient visiting\n    reception.execute(patient)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Reception registering patient\nDoctor checking patient\nMedical giving medicine to patient\nCashier getting money from patient patient<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Full_Working_Code\"><\/span><strong>Full Working Code:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype department interface {\n    execute(*patient)\n    setNext(department)\n}\n\ntype reception struct {\n    next department\n}\n\nfunc (r *reception) execute(p *patient) {\n    if p.registrationDone {\n        fmt.Println(\"Patient registration already done\")\n        r.next.execute(p)\n        return\n    }\n    fmt.Println(\"Reception registering patient\")\n    p.registrationDone = true\n    r.next.execute(p)\n}\n\nfunc (r *reception) setNext(next department) {\n    r.next = next\n}\n\ntype doctor struct {\n    next department\n}\n\nfunc (d *doctor) execute(p *patient) {\n    if p.doctorCheckUpDone {\n        fmt.Println(\"Doctor checkup already done\")\n        d.next.execute(p)\n        return\n    }\n    fmt.Println(\"Doctor checking patient\")\n    p.doctorCheckUpDone = true\n    d.next.execute(p)\n}\n\nfunc (d *doctor) setNext(next department) {\n    d.next = next\n}\n\ntype medical struct {\n    next department\n}\n\nfunc (m *medical) execute(p *patient) {\n    if p.medicineDone {\n        fmt.Println(\"Medicine already given to patient\")\n        m.next.execute(p)\n        return\n    }\n    fmt.Println(\"Medical giving medicine to patient\")\n    p.medicineDone = true\n    m.next.execute(p)\n}\n\nfunc (m *medical) setNext(next department) {\n    m.next = next\n}\n\ntype cashier struct {\n    next department\n}\n\nfunc (c *cashier) execute(p *patient) {\n    if p.paymentDone {\n        fmt.Println(\"Payment Done\")\n    }\n    fmt.Println(\"Cashier getting money from patient patient\")\n}\n\nfunc (c *cashier) setNext(next department) {\n    c.next = next\n}\n\ntype patient struct {\n    name              string\n    registrationDone  bool\n    doctorCheckUpDone bool\n    medicineDone      bool\n    paymentDone       bool\n}\n\nfunc main() {\n    cashier := &cashier{}\n   \n    \/\/Set next for medical department\n    medical := &medical{}\n    medical.setNext(cashier)\n   \n    \/\/Set next for doctor department\n    doctor := &doctor{}\n    doctor.setNext(medical)\n   \n    \/\/Set next for reception department\n    reception := &reception{}\n    reception.setNext(doctor)\n   \n    patient := &patient{name: \"abc\"}\n    \/\/Patient visiting\n    reception.execute(patient)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Reception registering patient\nDoctor checking patient\nMedical giving medicine to patient\nCashier getting money from patient patient<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[62,63,65,64],"class_list":["post-571","post","type-post","status-publish","format-standard","hentry","category-tech","tag-chain-of-responsibility-design-pattern-in-golang","tag-chain-of-responsiblity","tag-design-pattern-in-go","tag-design-pattern-in-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Chain of Responsibility Design Pattern in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Chain of Responsibility Design Pattern in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-11-15T18:34:53+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-09-08T20:52:59+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/\",\"name\":\"Chain of Responsibility Design Pattern in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg\",\"datePublished\":\"2019-11-15T18:34:53+00:00\",\"dateModified\":\"2020-09-08T20:52:59+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Chain of Responsibility Design Pattern in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Chain of Responsibility Design Pattern in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/","og_locale":"en_US","og_type":"article","og_title":"Chain of Responsibility Design Pattern in Go (Golang) - Welcome To Golang By Example","og_description":"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to...","og_url":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-11-15T18:34:53+00:00","article_modified_time":"2020-09-08T20:52:59+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/","url":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/","name":"Chain of Responsibility Design Pattern in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg","datePublished":"2019-11-15T18:34:53+00:00","dateModified":"2020-09-08T20:52:59+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Chain-of-Responsibility-Design-Pattern-1.jpg"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/chain-of-responsibility-design-pattern-in-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Chain of Responsibility Design Pattern in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-9d","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/571","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=571"}],"version-history":[{"count":9,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/571\/revisions"}],"predecessor-version":[{"id":3956,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/571\/revisions\/3956"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=571"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=571"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=571"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}