{"id":3841,"date":"2020-08-14T12:47:46","date_gmt":"2020-08-14T07:17:46","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=3841"},"modified":"2020-08-14T12:50:21","modified_gmt":"2020-08-14T07:20:21","slug":"select-versus-switch-in-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/","title":{"rendered":"Select versus switch in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/#Example_of_switch\" title=\"Example of switch\">Example of switch<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/#Example_of_select\" title=\"Example of select\">Example of select<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Below are some of the differences between <strong>switch<\/strong> and <strong>select<\/strong> statement<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>In switch each of the case statement is an expression while in select each of the case statement is either send or receive operation on a channel.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Format of <strong>switch<\/strong><\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">switch statement; expression {\ncase expression1:\n     \/\/Dosomething\ncase expression2:\n     \/\/Dosomething\ndefault:\n     \/\/Dosomething\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Format of <strong>select<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">select {\ncase channel_send_or_receive:\n     \/\/Dosomething\ncase channel_send_or_receive:\n     \/\/Dosomething\ndefault:\n     \/\/Dosomething\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">This is how switch works. Given a\u00a0<strong>switch expression<\/strong>, it goes through all cases and tries to find the first\u00a0<strong>case expression<\/strong>\u00a0that matches the\u00a0<strong>switch expression<\/strong>\u00a0otherwise the default case is executed if present. The order of matching is from top to bottom. While with a select statement ,it chooses\u00a0 the case on which send or receive operation on a channel\u00a0 is not blocked and is ready to be executed. If multiple cases are ready to be executed then one is choosen at random.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Switch statement is non-blocking.\u00a0\u00a0It selects the matching case otherwise default case is executed. Even if the default block is not present and none of the case matches the switch block ends and the program proceeds. Select statement can block \u00a0as it is used with channels and channels can block on send or receive\u00a0 operation. A\u00a0select statement\u00a0 will block if send and receive operation is blocked in all the case statements and default block is not present. Default block makes the select non-blocking as default case will be executed if all the other cases are blocked<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>A switch will go in sequence to select the matching case. So switch is deterministic. You can say lookig at switch statement ad expression, that which of the case is going to match. Select will execute a case at random with no sequence. So select is non-deterministic. It will randomly choose one of the ready case statements to execute.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Switch allows a fallthrough keyword to select multiple matching cases. Select doesn&#8217;t allow fallthrough keyword to select multiple cases. Only one case out of ready cases will be chosen at random.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Switch has two forms: expression switches and type switches while select has only one form.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Please refer to comprehensive tutorial for both<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Switch &#8211;<a href=\"https:\/\/golangbyexamples.com\/switch-statement-golang\/\">https:\/\/golangbyexamples.com\/switch-statement-golang\/<\/a><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Select &#8211; <a href=\"https:\/\/golangbyexamples.com\/switch-statement-golang\/\">https:\/\/golangbyexamples.com\/select-statement-golang\/<\/a><\/li><\/ul>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Example_of_switch\"><\/span><strong>Example of switch<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    switch ch := \"b\"; ch {\n    case \"a\":\n        fmt.Println(\"a\")\n    case \"b\":\n        fmt.Println(\"b\")    \n    default:\n        fmt.Println(\"No matching character\")    \n    }\n    \n    \/\/fmt.Println(ch)\n\n}  <\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">b<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above example, the switch case goes in sequence and matches the switch expression which is \u201cb\u201d here.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Example_of_select\"><\/span><strong>Example of select<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    ch1 := make(chan string)\n    ch2 := make(chan string)\n\n    go goOne(ch1)\n    go goTwo(ch2)\n\n    select {\n    case msg1 := <-ch1:\n        fmt.Println(msg1)\n    case msg2 := <-ch2:\n        fmt.Println(msg2)\n    }\n}\nfunc goOne(ch chan string) {\n    ch <- \"From goOne goroutine\"\n}\nfunc goTwo(ch chan string) {\n    ch <- \"From goTwo goroutine\"\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">From goOne goroutine<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program we created two channels which are passed to two different goroutines. Then each of the&nbsp; goroutine&nbsp; is sending one value to the channel. In the select&nbsp; we have two case statement. Each of the two case statement is waiting for a receive operation to complete on one of the channels. Once any receive operation is complete on any of the channel it is executed and select exits. So as seen from output, in the above program it&nbsp; prints the received value from one of the channel and exits.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">So in the above program since it is not deterministic which of the send operation will complete earlier that is why you will see different output if you run the program different times.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewExample of switchExample of select Overview Below are some of the differences between switch and select statement In switch each of the case statement is an expression while in&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-3841","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Select versus switch in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Select versus switch in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewExample of switchExample of select Overview Below are some of the differences between switch and select statement In switch each of the case statement is an expression while in...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-08-14T07:17:46+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-08-14T07:20:21+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/\",\"name\":\"Select versus switch in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-08-14T07:17:46+00:00\",\"dateModified\":\"2020-08-14T07:20:21+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Select versus switch in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Select versus switch in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/","og_locale":"en_US","og_type":"article","og_title":"Select versus switch in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewExample of switchExample of select Overview Below are some of the differences between switch and select statement In switch each of the case statement is an expression while in...","og_url":"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-08-14T07:17:46+00:00","article_modified_time":"2020-08-14T07:20:21+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/","url":"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/","name":"Select versus switch in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-08-14T07:17:46+00:00","dateModified":"2020-08-14T07:20:21+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/select-versus-switch-in-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Select versus switch in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-ZX","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3841","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=3841"}],"version-history":[{"count":4,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3841\/revisions"}],"predecessor-version":[{"id":3848,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3841\/revisions\/3848"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=3841"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=3841"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=3841"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}