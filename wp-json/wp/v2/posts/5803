{"id":5803,"date":"2021-06-06T11:45:35","date_gmt":"2021-06-06T06:15:35","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5803"},"modified":"2021-06-06T11:45:41","modified_gmt":"2021-06-06T06:15:41","slug":"printf-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/printf-golang\/","title":{"rendered":"Understanding Printf function in Go (Golang)"},"content":{"rendered":"\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png?resize=429%2C241&#038;ssl=1\" alt=\"printf image\" class=\"wp-image-5804\" width=\"429\" height=\"241\" srcset=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min.png?resize=1024%2C575&amp;ssl=1 1024w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min.png?resize=300%2C168&amp;ssl=1 300w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min.png?resize=768%2C431&amp;ssl=1 768w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min.png?resize=1536%2C862&amp;ssl=1 1536w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min.png?resize=2048%2C1150&amp;ssl=1 2048w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min.png?resize=850%2C477&amp;ssl=1 850w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min.png?w=1280&amp;ssl=1 1280w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min.png?w=1920&amp;ssl=1 1920w\" sizes=\"auto, (max-width: 429px) 100vw, 429px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p> <\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/printf-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/printf-golang\/#Program\" title=\"Program\">Program<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Printf<\/strong> is defined in the <strong>fmt<\/strong> package and is used to format a string and write to standard output<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golang.org\/pkg\/fmt\/#Printf\">https:\/\/golang.org\/pkg\/fmt\/#Printf<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below is the function prototype of <strong>Printf<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func Printf(format string, a ...interface{}) (n int, err error)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Printf<\/strong> formats the string using custom specifiers. It also doesn&#8217;t add a new line. <strong>Printf<\/strong> is also a variadic function meaning that it can have multiple arguments.&nbsp;There are two important points about its argument list<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Notice that the first argument is a <strong>format<\/strong> or <strong>template<\/strong>\u00a0string.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The next is a variable number of arguments. Each of the arguments in this list could be string, int, struct, or anything. That is why it is an empty interface<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">The <strong>format<\/strong> or <strong>template<\/strong> string contains the actual string that needs to be formatted plus some formating verbs. These formating verbs tell how the trailing arguments will be formatted in the final string.\u00a0 So basically the format string argument contains certain symbols which are replaced by trailing arguments.\u00a0\u00a0<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Eg<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Printing a string variable<\/strong><\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>%s<\/strong> symbol is used<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Example\u00a0<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">name := \"John\"\nfmt.Printf(\"Name is: %s\\n\", name)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Printing an integer<\/strong><\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>%d<\/strong> symbol is used<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Example\u00a0<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">age := 21\nfmt.Printf(\"Age is: %d\\n\", age)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Printing a struct<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">For example, there are three format specifiers for printing a struct.\u00a0<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>%v<\/strong>\u00a0\u2013 It will print only values. The field name will not be printed. This is the default way of printing a struct when using Println<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>%+v \u2013\u00a0<\/strong>It will print both field and value.\u00a0<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>%#v \u2013\u00a0<\/strong>It will print the struct, also both field name and value<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">That is why<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Employee is %v\\n\", e)\nfmt.Printf(\"Employee is %+v\\n\", e)\nfmt.Printf(\"Employee is %#v\\n\", e)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">prints below respectively<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Employee is {John 21}\nEmployee is {Name:John Age:21}\nEmployee is main.employee{Name:\"John\", Age:21}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It is as per the explanation above.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Also, note that this function returns the number of characters printed and any error if happens. Unlike <strong>Println<\/strong>\u00a0it does add a new line. You will have to add <strong>&#8220;\\n&#8221;<\/strong> explicitly.\u00a0<\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Program\"><\/span>Program<span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Here is the working program for the same<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\ntype employee struct {\n\tName string\n\tAge  int\n}\n\nfunc main() {\n\tname := \"John\"\n\tage := 21\n\n\tfmt.Printf(\"Name is: %s\\n\", name)\n\tfmt.Printf(\"Age is: %d\\n\", age)\n\n\tfmt.Printf(\"Name: %s Age: %d\\n\", name, age)\n\n\te := employee{\n\t\tName: name,\n\t\tAge:  age,\n\t}\n\n\tfmt.Printf(\"Employee is %v\\n\", e)\n\tfmt.Printf(\"Employee is %+v\\n\", e)\n\tfmt.Printf(\"Employee is %#v\\n\", e)\n\n\tbytesPrinted, err := fmt.Printf(\"Name is: %s\\n\", name)\n\tif err != nil {\n\t\tlog.Fatalln(\"Error occured\", err)\n\t}\n\tfmt.Println(bytesPrinted)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Name is: John\nAge is: 21\nName: John Age: 21\nEmployee is {John 21}\nEmployee is {Name:John Age:21}\nEmployee is main.employee{Name:\"John\", Age:21}\nName is: John\n14<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice that in below <strong>Printf<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Name: %s Age: %d\\n\", name, age)<\/code><\/pre>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>%s <\/strong>is replaced by name.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>%d<\/strong> is replaced by age.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">So basically the symbols or verbs in the format string argument are replaced by trailing arguments in order<\/p>\n\n\n\n<p class=\"has-medium-font-size\">If the number of format specifiers in the format string does not match the number of next variable arguments then the format specifier will be printed as is. For example, in the below code, we have two format specifier<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>%d<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>%s<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">While the next variable number of arguments is only one. Hence when we print it then it will print the second format specifier as is with MISSING as a warning<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nimport \"fmt\"\ntype employee struct {\n    Name string\n    Age  int\n}\nfunc main() {\n    name := \"John\"\n    fmt.Printf(\"Name is: %s %d\\n\", name)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Name is: John %!d(MISSING)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Also, check out our Golang advance tutorial Series &#8211; <a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Advance Tutorial<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewProgram Overview Printf is defined in the fmt package and is used to format a string and write to standard output https:\/\/golang.org\/pkg\/fmt\/#Printf Below is the function prototype of Printf&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-5803","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Understanding Printf function in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"description\" content=\"This tutorial will give you in depth details of Printf function in golang provided by the fmt package of go.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/printf-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Understanding Printf function in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"This tutorial will give you in depth details of Printf function in golang provided by the fmt package of go.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/printf-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-06-06T06:15:35+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-06-06T06:15:41+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/printf-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/printf-golang\/\",\"name\":\"Understanding Printf function in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/printf-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/printf-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png\",\"datePublished\":\"2021-06-06T06:15:35+00:00\",\"dateModified\":\"2021-06-06T06:15:41+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"description\":\"This tutorial will give you in depth details of Printf function in golang provided by the fmt package of go.\",\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/printf-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/printf-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/printf-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/printf-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Understanding Printf function in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Understanding Printf function in Go (Golang) - Welcome To Golang By Example","description":"This tutorial will give you in depth details of Printf function in golang provided by the fmt package of go.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/printf-golang\/","og_locale":"en_US","og_type":"article","og_title":"Understanding Printf function in Go (Golang) - Welcome To Golang By Example","og_description":"This tutorial will give you in depth details of Printf function in golang provided by the fmt package of go.","og_url":"https:\/\/golangbyexamples.com\/printf-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-06-06T06:15:35+00:00","article_modified_time":"2021-06-06T06:15:41+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/printf-golang\/","url":"https:\/\/golangbyexamples.com\/printf-golang\/","name":"Understanding Printf function in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/printf-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/printf-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png","datePublished":"2021-06-06T06:15:35+00:00","dateModified":"2021-06-06T06:15:41+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"description":"This tutorial will give you in depth details of Printf function in golang provided by the fmt package of go.","breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/printf-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/printf-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/printf-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/printf-min-1024x575.png"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/printf-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Understanding Printf function in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1vB","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5803","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5803"}],"version-history":[{"count":2,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5803\/revisions"}],"predecessor-version":[{"id":5808,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5803\/revisions\/5808"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5803"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5803"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5803"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}