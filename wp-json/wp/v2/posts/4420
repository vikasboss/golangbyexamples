{"id":4420,"date":"2020-11-22T22:22:01","date_gmt":"2020-11-22T16:52:01","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=4420"},"modified":"2020-11-24T22:47:28","modified_gmt":"2020-11-24T17:17:28","slug":"workspace-hello-world-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/","title":{"rendered":"Set up GO Workspace and Hello World Program"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">This is the chapter 3 of the golang comprehensive tutorial series. Refer to this link for other chapters of the series &#8211; <a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Comprehensive Tutorial Series<\/a> <br><br><strong>Next Tutorial<\/strong> &#8211; <a href=\"https:\/\/golangbyexamples.com\/packages-modules-go-first\">Packages and Modules &#8211; Part 1<\/a><br><strong>Previous Tutorial<\/strong> &#8211; <a href=\"https:\/\/golangbyexamples.com\/about-golang\/\"><\/a><a href=\"https:\/\/golangbyexamples.com\/golang-installation\">GO Installation<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now let&#8217;s check out the current tutorial. Below is the table of contents for the current tutorial.<\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#GO_Workspace\" title=\"GO Workspace\">GO Workspace<\/a><ul class=\"ez-toc-list-level-2\"><li class=\"ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#GOROOT\" title=\"GOROOT\">GOROOT<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#GOPATH\" title=\"GOPATH\">GOPATH<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#GOBIN\" title=\"GOBIN\">GOBIN<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#Run_Hello_World\" title=\"Run Hello World\">Run Hello World<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#Conclusion\" title=\"Conclusion:\">Conclusion:<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">This is the third tutorial of the golang comprehensive tutorial series. Refer to this link for other chapters of the series.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">In chapter one we saw an intro to Go and basic advantages of GO and in chapter 2 we have already seen how to install GO. It is now time to set up the workspace for GO and run our first hello world program.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"GO_Workspace\"><\/span><strong>GO Workspace<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Before we proceed let&#8217;s understand some important GO ENV variables:<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"GOROOT\"><\/span><strong>GOROOT<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">It is the location of your GO SDK. GO binary distribution assumes this location to be<strong> \/usr\/local\/go<\/strong> for Linux\/MAC platforms and &nbsp;c:\\Go&nbsp;for Windows. But GO SDK can also be installed in a custom location. In case it is installed to a custom location, then GOROOT should point to that directory.&nbsp; GOROOT should only be set when installing GO to a custom location or when you want to maintain different versions of GO<\/p>\n\n\n\n<p class=\"has-medium-font-size\">For example if you have installed GO to the location ~\/Documents\/go on Linux\/MAC platform, then make below entry to the ~\/$HOME\/.profile file.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">export GOROOT=~\/Documents\/go\nexport PATH=$PATH:$GOROOT\/bin<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"GOPATH\"><\/span><strong>GOPATH<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">The discussion for GOPATH will revolve around whether you are using GO version 1.13 higher or lower. In version 1.13, GO introduced a new feature for dependency management called GO modules. Let&#8217;s first understand the legacy behavior of <strong>GOPATH<\/strong> and then we will discuss what has changed with respect to <strong>GOPATH<\/strong> after GO version 1.13.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Before GO version 1.13<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">The <strong>GOPATH<\/strong> env variable was used for resolving go imports statements as well as it also specifies the location of your GO workspace. It is the root of GO workspace. A dependency cannot be imported if it is not inside GOPATH. Hence earlier version required all your source code to be inside <strong>GOPATH<\/strong>. So basically <strong>GOPATH<\/strong> is used for<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Resolving imports. A dependency cannot be imported if it is not inside GOPATH. Hence it still requires your code to be inside GOPATH<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Packages are installed in the directory $GOPATH\/pkg\/$GOOS_$GOARCH.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Store compiled application binary in $GOPATH\/bin (This can be overridden by setting $GOBIN to a different path)<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">It contains the following folders<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>src<\/strong> &#8211;<ul><li>Source file location. It contains .go and other source files<\/li><li>When installing any dependency package using &#8216;go get&#8217;, all the package files are stored in this location.<\/li><\/ul><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>pkg<\/strong> &#8211;<ul><li>Stores the compilation output of your actual source code present in src. directory. It contains .a&nbsp;files<\/li><li>Basically, it contains the GO packages compiled from the src\/ directory. They are then used at link time to create binary executables which are then placed in the bin\/ directory.<\/li><li>It is a good idea to compile a package once and used it to create different binary executables.<\/li><li>Each pair of Operating System and Architecture will have its own subdirectory in pkg. (eg: pkg\/GOOS_GOARCH)<\/li><\/ul><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>bin<\/strong>&nbsp;&#8211; location of executables built by Go<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong>With Go version 1.13 or later<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">In version <strong>1.13, <\/strong>GO announced a new feature of dependency management called GO modules. We will learn about this feature in upcoming tutorials. For now, you can imagine that with the new feature, GO doesn&#8217;t require putting all GO code in the Go workspace or in the $GOAPTH\/src directory. You can create the directory anywhere and put your Go program there. Note that all legacy behavior of GOPATH is still valid for version 1.1.3 and higher.&nbsp; Also note that with this new GO module feature, GO programs can be run in two ways.&nbsp;<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>Using modules:<\/strong> when using modules, <strong>GOPATH<\/strong> is not used for resolving imports. However, when using modules for running GO programs,&nbsp; GOPATH will be used for<ul><li>Store download source code in $GOPATH\/pkg\/mod directory.<\/li><li>Store compiled application binary in $GOPATH\/bin (This can be overridden by setting $GOBIN to a different path)<\/li><\/ul><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>Not using modules<\/strong>:&nbsp; It is still possible to run a GO program in the legacy ways even with version 1.13 or later. When not using modules while running GO programs, $GOPATH behavior is same as earlier versions which is the same as mentioned above<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Set Up GOPATH.<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">If this env variable is unset, it defaults <strong>$HOME\/go<\/strong> on Unix systems and <strong>%USERPROFILE%\\go<\/strong> on Windows. If your workspace location is ~<strong>\/Desktop\/go<\/strong>, then make below entry to the <strong>~\/$HOME\/.profile<\/strong> file. It is good idea to always have the <strong>GOPATH<\/strong> set up as <strong>GOPATH<\/strong> is used even with the introduction of modules<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">export GOPATH=~\/Desktop\/go<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"GOBIN\"><\/span><strong>GOBIN<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>GOBIN<\/strong> env variable specifies the directory where go will place the compiled application binary after building the main package.&nbsp;It defaults to <strong>$GOPATH\/bin<\/strong> or <strong>$HOME\/go\/bin <\/strong>if the <strong>GOPATH<\/strong> environment variable is not set. .&nbsp; Also it is good idea to add <strong>GOBIN<\/strong> path to <strong>PATH<\/strong> env as well so that binary installed can be run without specifying full path of the binary. Set GOBIN in the <strong>~\/.$HOME\/.profile<\/strong> file and add it to PATH as well.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">export GOBIN=$GOPATH\/bin\nexport PATH=$PATH:$GOBIN<\/code><\/pre>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Run_Hello_World\"><\/span><strong>Run Hello World<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">In this example, we will be creating our first hello world program. So far here is the value of <strong>GOROOT<\/strong>, <strong>GOPATH<\/strong>, and <strong>GOBIN<\/strong>.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">echo $GOROOT will give installed directory for GO\necho $GOPATH will give ~\/Desktop\/go\necho $GOBIN will give ~\/Desktop\/go\/bin<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">A typical program has <strong>.go<\/strong> file extension. Now let&#8217;s create a &#8220;Hello World&#8221; program. For that first create a directory named hello outside $GOPATH\/src.&nbsp; Since the project is getting creating outside $GOPATH\/src we also need to create a <strong>go.mod<\/strong> file with import path as <strong><a href=\"http:\/\/sample.com\">sample.com<\/a>\/hello<\/strong> .&nbsp; We will look at the import path, go.mod file and module in detail in the upcoming tutorial. For now, let&#8217;s create a simple module so that we can see how the hello world program looks like in go. Use the below command for that<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go mod init sample.com\/hello<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It will create go.mod file as below.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">module sample.com\/hello\n\ngo 1.14<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Now create file hello.go with below contents.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello World\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">There are three different commands to run the above GO program. First cd to the <strong>&#8216;hello&#8217;<\/strong> directory.<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li>&#8216;<strong>go install&#8217;<\/strong><\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">It will compile the program and place the binary at the <strong>$GOBIN<\/strong> folder. Type below command, Make sure you are in the <strong>hello <\/strong>directory which contains the <strong>hello.go<\/strong> file.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">It will create a binary named hello in the $GOBIN directory. The name of the binary is same as last part of the import path of the module. The import path of the module is <strong><a href=\"http:\/\/sample.com\">sample.com<\/a>\/hello<\/strong> and last part of import path is simply <strong>hello<\/strong>. Hence binary name will be <strong>hello<\/strong> in our case. Type hello on the terminal, it will give below output<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Hello World<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Output of &#8216;which hello&#8217; will be <strong>&#8216;~\/Desktop\/go\/bin\/hello&#8217;<\/strong> . Remember our <strong>GOBIN<\/strong> path was &#8216;<strong>~\/Desktop\/go\/bin<\/strong>.&#8217; Hence the binary hello was copied to this directory.<\/p>\n\n\n\n<ol start=\"2\" class=\"has-medium-font-size wp-block-list\"><li>&#8216;<strong>go build&#8217;<\/strong><\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">It will compile the program and place the binary in the current working directory. Type the below command<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go build<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In our case it will create the binary named <strong>&#8216;hello&#8217;<\/strong>&nbsp; same as impbeside <strong>hello.go<\/strong> file. To run the binary type <strong>&#8216;.\/hello&#8217;<\/strong> on the terminal. It will give below output<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Hello World<\/code><\/pre>\n\n\n\n<ol start=\"3\" class=\"has-medium-font-size wp-block-list\"><li><strong>&#8216;go run hello.go&#8217;<\/strong><\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">This command will compile and then execute the binary. Type the below command.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run hello.go <\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It will output<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Hello World<\/code><\/pre>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Conclusion\"><\/span><strong>Conclusion:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">That all for this tutorial. Hope you have liked this article. please share feedback\/mistakes\/improvements in comments.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong><strong>Next Tutorial<\/strong> &#8211; <\/strong><a href=\"https:\/\/golangbyexamples.com\/packages-modules-go-first\">Packages and Modules &#8211; Part 1<\/a><strong><br><strong>Previous Tutorial<\/strong> &#8211; <\/strong><a href=\"https:\/\/golangbyexamples.com\/golang-installation\">GO Installation<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>This is the chapter 3 of the golang comprehensive tutorial series. Refer to this link for other chapters of the series &#8211; Golang Comprehensive Tutorial Series Next Tutorial &#8211; Packages and Modules&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-4420","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Set up GO Workspace and Hello World Program - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Set up GO Workspace and Hello World Program - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"This is the chapter 3 of the golang comprehensive tutorial series. Refer to this link for other chapters of the series &#8211; Golang Comprehensive Tutorial Series Next Tutorial &#8211; Packages and Modules...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-11-22T16:52:01+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-11-24T17:17:28+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"7 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/\",\"name\":\"Set up GO Workspace and Hello World Program - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-11-22T16:52:01+00:00\",\"dateModified\":\"2020-11-24T17:17:28+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Set up GO Workspace and Hello World Program\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Set up GO Workspace and Hello World Program - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/","og_locale":"en_US","og_type":"article","og_title":"Set up GO Workspace and Hello World Program - Welcome To Golang By Example","og_description":"This is the chapter 3 of the golang comprehensive tutorial series. Refer to this link for other chapters of the series &#8211; Golang Comprehensive Tutorial Series Next Tutorial &#8211; Packages and Modules...","og_url":"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-11-22T16:52:01+00:00","article_modified_time":"2020-11-24T17:17:28+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"7 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/","url":"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/","name":"Set up GO Workspace and Hello World Program - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-11-22T16:52:01+00:00","dateModified":"2020-11-24T17:17:28+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/workspace-hello-world-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Set up GO Workspace and Hello World Program"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-19i","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4420","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=4420"}],"version-history":[{"count":11,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4420\/revisions"}],"predecessor-version":[{"id":4527,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4420\/revisions\/4527"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=4420"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=4420"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=4420"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}