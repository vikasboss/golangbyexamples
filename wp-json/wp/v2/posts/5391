{"id":5391,"date":"2021-03-23T01:23:57","date_gmt":"2021-03-22T19:53:57","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5391"},"modified":"2021-03-23T01:33:05","modified_gmt":"2021-03-22T20:03:05","slug":"grpc-vs-rest","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/","title":{"rendered":"Difference between GRPC and Rest"},"content":{"rendered":"\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"359\" src=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png?resize=640%2C359&#038;ssl=1\" alt=\"grpc vs rest\" class=\"wp-image-5397\" srcset=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest.png?resize=1024%2C574&amp;ssl=1 1024w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest.png?resize=300%2C168&amp;ssl=1 300w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest.png?resize=768%2C431&amp;ssl=1 768w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest.png?resize=1536%2C861&amp;ssl=1 1536w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest.png?resize=850%2C477&amp;ssl=1 850w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest.png?w=2040&amp;ssl=1 2040w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest.png?w=1280&amp;ssl=1 1280w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest.png?w=1920&amp;ssl=1 1920w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Links\" title=\"Links\">Links<\/a><ul class=\"ez-toc-list-level-3\"><li class=\"ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#GRPC\" title=\"GRPC\">GRPC<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#REST\" title=\"REST\">REST<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Protocol\" title=\"Protocol\">Protocol<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Nature\" title=\"Nature\">Nature<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Mode_of_Data_Transfer\" title=\"Mode of Data Transfer\">Mode of Data Transfer<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-8\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Model\" title=\"Model\">Model<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-9\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Performance\" title=\"Performance\">Performance<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-10\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Code_Generation\" title=\"Code Generation\">Code Generation<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-11\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Type_Safety\" title=\"Type Safety\">Type Safety<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-12\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#SetUP\" title=\"SetUP\">SetUP<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-13\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#When_To_Use\" title=\"When To Use\">When To Use<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-14\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#Conclusion\" title=\"Conclusion\">Conclusion<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">REST is an architectural style built on top of HTTP\/1. GRPC is not a style instead it is an RPC framework built on top of HTTP\/2 and it uses protocol buffers behind the scenes. So basically GRPC is an actual implementation or you can say it is a library whereas REST is just a set of rules and principles.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Although we are comparing a GRPC (implemented framework) with REST -( architectural styles and principles), which might sound weird. Still, it is important to understand the difference in terms of high-level architecture which you will get if you follow one approach over the other<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Here are the major differences between the two. Also to mention that this article assumes that you already have some knowledge of GRPC, HTTP2, REST<\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Links\"><\/span>Links<span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"GRPC\"><\/span><strong>GRPC<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\">Here is the link to GRPC for further reading <a href=\"https:\/\/grpc.io\/\">https:\/\/grpc.io\/<\/a><\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"REST\"><\/span><strong>REST<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\">Here is the link to REST for further reading &#8211; <a href=\"https:\/\/en.wikipedia.org\/wiki\/Representational_state_transfer\">https:\/\/en.wikipedia.org\/wiki\/Representational_state_transfer<\/a><\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Protocol\"><\/span><strong>Protocol<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>GRPC is an RPC framework and is built on top of HTTP\/2<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST architectural style is specified on top of HTTP\/1. All the semantics of HTTP\/1.1 has been retained in HTTP\/2. So REST APIs should continue to work even one using HTTP\/2<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Nature\"><\/span><strong>Nature<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The way of thinking in GRPC is API-oriented or action-oriented.\u00a0<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST is resource-oriented.<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Mode_of_Data_Transfer\"><\/span><strong>Mode of Data Transfer<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>GRPC supports only Protocol Buffers to transfer data between server and client.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST supports JSON,\u00a0 XML, and other data formats.\u00a0 REST can also be made to work with Protocol Buffers trivially.<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Model\"><\/span><strong>Model<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>GRPC provides four different ways of communication between client and server. The four different ways are unary, server streaming, client streaming, and bi-directional streaming. So effectively in GRPC both client and server can talk to each other.<ul><li>Unary &#8211; This is the simplest one. The clients send a request and the server sends the response<\/li><li>Client streaming &#8211; The client can send a stream of multiple messages while the server is expected to return only a single response to all client requests.<\/li><li>Server Streaming- The client will send only one message while the server can send a stream of messages back to it.<\/li><li>Bi-directional streaming &#8211; Both client and server can stream multiple messages. The streaming will be in parallel and with no order. Also, it will be nonblocking. Neither client nor server needs to wait for a response before sending the next message.<\/li><\/ul><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST works on the Request-Response model. Basically, you send the request and then you get the response. So REST only provides a unary way of communication. In REST only the client talks to the server.<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Performance\"><\/span><strong>Performance<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Since GRPC inherently uses HTTP\/2 so all the performance optimizations applied to HTTP\/2 automatically are available in GRPC. HTTP\/2 has introduced several performance optimizations over HTTP\/1 such as<ul><li>Duplex Streaming<\/li><li>Multiplexing<\/li><li>Headers Compression<\/li><li>etc<\/li><\/ul><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">&nbsp; &nbsp; &nbsp; &nbsp; Plus GRPC uses protocol buffers internally and since protocol buffers are binary data and have less size, they are transferred over a network fast. GRPC can utilize each TCP connection very effectively.Due to these two reasons, GRPC is very fast.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST over HTTP\/1 will be slower than GRPC. It uses JSON, XML which for representing the same data take more size than protocol buffers.<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Code_Generation\"><\/span><strong>Code Generation<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Since GRPC is built on top of protocol buffers it provides automatic code generation. In fact with protocol buffers code generation is a must thing to use GRPC.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST also provides code generation through Swagger, OPEN API but that is just an extra thing provided and it is not as effective as code generation by protocol buffers<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Type_Safety\"><\/span><strong>Type Safety<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Since protocol buffers are used for code generation in the case of GRPC.\u00a0 So that in a way provides type safety to GRPC. GRPC will not allow you to send int for a field where a string is expected. The API contract is defined by the proto file and is strict.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST doesn&#8217;t have any such restriction. The API contract is mostly just a document using OPEN API or swagger and hence it is loose.<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"SetUP\"><\/span><strong>SetUP<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>GRPC would require you to set up a client locally to be able to make a GRPC call.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST call doesn&#8217;t need a client set up. You can make a call using a browser, postman, curl, etc<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"When_To_Use\"><\/span><strong>When To Use<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>GRPC is mostly suitable for internal microservices where low latency and high throughput might be needed. It will not be suitable to currently expose your service as a GRPC as there are no APIs available for external services to integrate. It could be possible in the near future when GRPC is fully evolved.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>REST is more suitable to expose your APIs to external services.<\/li><\/ul>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Conclusion\"><\/span><strong>Conclusion<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">These are some of the major differences between GRPC and REST. Hope you have liked this article. Please share feedback in the comments.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Note: If you are interested in learning Golang, then for that we have a golang comprehensive tutorial series. Do check it out \u2013\u00a0<a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Comprehensive Tutorial Series<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewLinksGRPCRESTProtocolNatureMode of Data TransferModelPerformanceCode GenerationType SafetySetUPWhen To UseConclusion Overview REST is an architectural style built on top of HTTP\/1. GRPC is not a style instead it is an RPC&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4,21,315],"class_list":["post-5391","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang","tag-grpc","tag-rest"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Difference between GRPC and Rest - Welcome To Golang By Example<\/title>\n<meta name=\"description\" content=\"This article describes the difference between GRPC and REST in detail. GRPC is a framework while REST is a protocol or set of rules\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Difference between GRPC and Rest - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"This article describes the difference between GRPC and REST in detail. GRPC is a framework while REST is a protocol or set of rules\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-03-22T19:53:57+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-03-22T20:03:05+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/\",\"url\":\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/\",\"name\":\"Difference between GRPC and Rest - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png\",\"datePublished\":\"2021-03-22T19:53:57+00:00\",\"dateModified\":\"2021-03-22T20:03:05+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"description\":\"This article describes the difference between GRPC and REST in detail. GRPC is a framework while REST is a protocol or set of rules\",\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Difference between GRPC and Rest\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Difference between GRPC and Rest - Welcome To Golang By Example","description":"This article describes the difference between GRPC and REST in detail. GRPC is a framework while REST is a protocol or set of rules","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/","og_locale":"en_US","og_type":"article","og_title":"Difference between GRPC and Rest - Welcome To Golang By Example","og_description":"This article describes the difference between GRPC and REST in detail. GRPC is a framework while REST is a protocol or set of rules","og_url":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-03-22T19:53:57+00:00","article_modified_time":"2021-03-22T20:03:05+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/","url":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/","name":"Difference between GRPC and Rest - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png","datePublished":"2021-03-22T19:53:57+00:00","dateModified":"2021-03-22T20:03:05+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"description":"This article describes the difference between GRPC and REST in detail. GRPC is a framework while REST is a protocol or set of rules","breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/grpc-vs-rest\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/03\/grpc_vs_rest-1024x574.png"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/grpc-vs-rest\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Difference between GRPC and Rest"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1oX","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5391","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5391"}],"version-history":[{"count":6,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5391\/revisions"}],"predecessor-version":[{"id":5401,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5391\/revisions\/5401"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5391"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5391"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5391"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}