{"id":6069,"date":"2021-08-10T01:18:06","date_gmt":"2021-08-09T19:48:06","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=6069"},"modified":"2021-08-10T01:18:30","modified_gmt":"2021-08-09T19:48:30","slug":"curly-braces-regex-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/","title":{"rendered":"Golang Regex: Understanding Curly Braces in Regular Expressions"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#Examples\" title=\"Examples\">Examples<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#Curly_braces_applied_to_a_grouping\" title=\"Curly braces applied to a grouping\">Curly braces applied to a grouping<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#Curly_Braces_applied_to_a_Character_Class\" title=\"Curly Braces applied to a Character Class\">Curly Braces applied to a Character Class<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#How_to_use_the_curly_brace_as_a_literal_character_in_regex\" title=\"How to use the curly brace as a literal character in regex.\u00a0\">How to use the curly brace as a literal character in regex.\u00a0<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Curly braces act as a repetition\u00a0quantifier in regex. They specify the number of times a character before preceding it can appear in the input string or text. They can also be used to specify a range i.e specify the minimum and maximum of times a\u00a0 character can appear.\u00a0<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Its syntax is\u00a0<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">{min,\u00a0max}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">where&nbsp;<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>min<\/strong> denotes the minimum number of times a character can appear<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>max<\/strong> denotes the maximum number of times a character can appear<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">For example<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a{n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">This specifies that character &#8220;a&#8221; can appear exactly n times. Similarly for the below regex<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">\\d{n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">This specifies that any digit can appear exactly n times.&nbsp;Curly braces can also be used to define a range.<br>For example<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>{m,n}<\/strong> &#8211; Atleast <strong>m<\/strong> and up to <strong>n<\/strong> times<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>{m,\u00a0}<\/strong> &#8211; Atleast <strong>m<\/strong> times<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>{, n}<\/strong> &#8211; Upto <strong>n <\/strong>times<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see an example for the same<\/p>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Examples\"><\/span><strong>Examples<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`b{2}`)\n\n\tmatches := sampleRegexp.FindString(\"bb\")\n\tfmt.Println(matches)\n\n\tmatches = sampleRegexp.FindString(\"bbb\")\n\tfmt.Println(matches)\n\n\tmatches = sampleRegexp.FindString(\"bbbb\")\n\tfmt.Println(matches)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">bb\nbb\nbb<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">By default, curly braces are greedy or non-lazy. What does it mean? They will match all the possible characters and always prefers more. It is also possible to make the curly braces operator non-greedy or lazy. This can be done by adding a question mark after the curly braces operator. Let&#8217;s see an example for the same.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">As you can see from the output that after adding a question mark operator after the curly brace\u00a0operator, it tries to match the minimum number of characters as possible i.e it becomes nongreedy<\/p>\n\n\n\n<p class=\"has-medium-font-size\">That is why given regex<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">ab{2,4}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It gives a match <strong>abb<\/strong> for all below input strings<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">abb\nabbb\nabbbb<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Program for the same<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"regexp\"\n)\n\nfunc main() {\n    sampleRegexp := regexp.MustCompile(`ab{2,4}`)\n\n    matches := sampleRegexp.FindStringSubmatch(\"abb\")\n    fmt.Println(matches)\n\n    matches = sampleRegexp.FindStringSubmatch(\"abbb\")\n    fmt.Println(matches)\n\n    matches = sampleRegexp.FindStringSubmatch(\"abbbb\")\n    fmt.Println(matches)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">abb\nabbb\nabbbb<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">while<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>ab{2,4}?<\/strong> will always give match as <strong>abb<\/strong> for all the above input strings<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Program for the same<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`ab{2,4}?`)\n\n\tmatches := sampleRegexp.FindString(\"abb\")\n\tfmt.Println(matches)\n\n\tmatches = sampleRegexp.FindString(\"abbb\")\n\tfmt.Println(matches)\n\n\tmatches = sampleRegexp.FindString(\"abbbb\")\n\tfmt.Println(matches)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">abb\nabb\nabb<\/code><\/pre>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Curly_braces_applied_to_a_grouping\"><\/span><strong>Curly braces applied to a grouping<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">A part of the regular expression can be placed inside a balanced parenthesis. This part is one group now. We can additionally apply curly braces to this group. The curly braces will be added after the grouping\u00a0<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see an example of the same.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`(ab){2}`)\n\n\tmatches := sampleRegexp.FindString(\"abab\")\n\tfmt.Println(matches)\n\n\tmatches = sampleRegexp.FindString(\"ababbc\")\n\tfmt.Println(matches)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">abab\nabab<\/code><\/pre>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Curly_Braces_applied_to_a_Character_Class\"><\/span><strong>Curly Braces applied to a Character Class<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Curly Brace quantifier can also be applied to the entire character class. Its meaning remains the same though. A character class is represented by square brackets in regex. Let&#8217;s see a program for the same.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">We have below regex in the above program<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">[ab]{4}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It means it would match a string of length exactly 4\u00a0and\u00a0comprised of characters <strong>&#8216;a&#8217;<\/strong> and <strong>&#8216;b&#8217; <\/strong>in any order<\/p>\n\n\n\n<p class=\"has-medium-font-size\">That is why the regex matches the below strings<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">abab\naaaa\nbbbb\naabb\nbbaa<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">And it does not match<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">aba - String of length 3\nabbaa - String of length 5<\/code><\/pre>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"How_to_use_the_curly_brace_as_a_literal_character_in_regex\"><\/span><strong>How to use the curly brace as a literal character in regex.\u00a0<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">The escaping character can be placed before the opening brace or closing brace if they are needed to be used in a literal way.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">A closing brace that is not preceded by an opening is treated as a literal closing brace.\u00a0<\/p>\n\n\n\n<p class=\"has-medium-font-size\">That is all about curly braces in regex in golang. Hope you have liked this article. Please share feedback in the comments<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Note: <\/strong>Check out our Golang Advanced Tutorial. The tutorials in this series are elaborative and we have tried to cover all concepts with examples. This tutorial is for those who are looking to gain expertise and a solid understanding of golang &#8211; <a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Advance Tutorial<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Also if you are interested in understanding how all design patterns can be implemented in Golang. If yes, then this post is for you &#8211;<a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns Golang<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewExamplesCurly braces applied to a groupingCurly Braces applied to a Character ClassHow to use the curly brace as a literal character in regex.\u00a0 Overview Curly braces act as a&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3],"class_list":["post-6069","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Golang Regex: Understanding Curly Braces in Regular Expressions - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Golang Regex: Understanding Curly Braces in Regular Expressions - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewExamplesCurly braces applied to a groupingCurly Braces applied to a Character ClassHow to use the curly brace as a literal character in regex.\u00a0 Overview Curly braces act as a...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-08-09T19:48:06+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-08-09T19:48:30+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/\",\"name\":\"Golang Regex: Understanding Curly Braces in Regular Expressions - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-08-09T19:48:06+00:00\",\"dateModified\":\"2021-08-09T19:48:30+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Golang Regex: Understanding Curly Braces in Regular Expressions\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Golang Regex: Understanding Curly Braces in Regular Expressions - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/","og_locale":"en_US","og_type":"article","og_title":"Golang Regex: Understanding Curly Braces in Regular Expressions - Welcome To Golang By Example","og_description":"Table of Contents OverviewExamplesCurly braces applied to a groupingCurly Braces applied to a Character ClassHow to use the curly brace as a literal character in regex.\u00a0 Overview Curly braces act as a...","og_url":"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-08-09T19:48:06+00:00","article_modified_time":"2021-08-09T19:48:30+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/","url":"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/","name":"Golang Regex: Understanding Curly Braces in Regular Expressions - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-08-09T19:48:06+00:00","dateModified":"2021-08-09T19:48:30+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/curly-braces-regex-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Golang Regex: Understanding Curly Braces in Regular Expressions"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1zT","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/6069","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=6069"}],"version-history":[{"count":3,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/6069\/revisions"}],"predecessor-version":[{"id":6074,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/6069\/revisions\/6074"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=6069"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=6069"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=6069"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}