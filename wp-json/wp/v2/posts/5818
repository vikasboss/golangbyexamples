{"id":5818,"date":"2021-06-15T00:24:51","date_gmt":"2021-06-14T18:54:51","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5818"},"modified":"2021-06-15T00:39:03","modified_gmt":"2021-06-14T19:09:03","slug":"doubly-linked-list-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/","title":{"rendered":"Doubly Linked List in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#Program\" title=\"Program\">Program<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">A Doubly Linked List contains three fields in its node.&nbsp;<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Data field&nbsp;<\/li><li>One Next pointer points to the next node in the list<\/li><li>One Previous pointer which points to the previous node in the list<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Here <strong>&#8220;Data&#8221;<\/strong> and <strong>&#8220;Next&#8221; <\/strong>fields are the same as in the case of a singly linked list. <strong>&#8220;Previous&#8221;<\/strong> pointer field is new which makes a linked list a doubly linked list.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Refer to this article to learn about single linked list  <\/p>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/\">https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below is an example of a doubly linked list. Prev pointer of head (start) node points to Null. Similarly, the <strong>Next<\/strong> pointer of the last node points to Null.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png?resize=640%2C100&#038;ssl=1\" alt=\"double linked list\" class=\"wp-image-5819\" width=\"640\" height=\"100\" srcset=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll.png?resize=1024%2C160&amp;ssl=1 1024w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll.png?resize=300%2C47&amp;ssl=1 300w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll.png?resize=768%2C120&amp;ssl=1 768w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll.png?resize=1536%2C240&amp;ssl=1 1536w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll.png?resize=850%2C133&amp;ssl=1 850w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll.png?w=1596&amp;ssl=1 1596w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll.png?w=1280&amp;ssl=1 1280w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Program\"><\/span><strong>Program<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">To implement a doubly linked list in Go language, create a node struct with <strong>data<\/strong>, <strong>prev<\/strong> pointer, and <strong>next<\/strong> pointer, methods to add nodes in the doubly linked list (from the front end from the back end both), and methods to traverse forward and reverse.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype node struct {\n\tdata string\n\tprev *node\n\tnext *node\n}\n\ntype doublyLinkedList struct {\n\tlen  int\n\ttail *node\n\thead *node\n}\n\nfunc initDoublyList() *doublyLinkedList {\n\treturn &doublyLinkedList{}\n}\n\nfunc (d *doublyLinkedList) AddFrontNodeDLL(data string) {\n\tnewNode := &node{\n\t\tdata: data,\n\t}\n\tif d.head == nil {\n\t\td.head = newNode\n\t\td.tail = newNode\n\t} else {\n\t\tnewNode.next = d.head\n\t\td.head.prev = newNode\n\t\td.head = newNode\n\t}\n\td.len++\n\treturn\n}\n\nfunc (d *doublyLinkedList) AddEndNodeDLL(data string) {\n\tnewNode := &node{\n\t\tdata: data,\n\t}\n\tif d.head == nil {\n\t\td.head = newNode\n\t\td.tail = newNode\n\t} else {\n\t\tcurrentNode := d.head\n\t\tfor currentNode.next != nil {\n\t\t\tcurrentNode = currentNode.next\n\t\t}\n\t\tnewNode.prev = currentNode\n\t\tcurrentNode.next = newNode\n\t\td.tail = newNode\n\t}\n\td.len++\n\treturn\n}\nfunc (d *doublyLinkedList) TraverseForward() error {\n\tif d.head == nil {\n\t\treturn fmt.Errorf(\"TraverseError: List is empty\")\n\t}\n\ttemp := d.head\n\tfor temp != nil {\n\t\tfmt.Printf(\"value = %v, prev = %v, next = %v\\n\", temp.data, temp.prev, temp.next)\n\t\ttemp = temp.next\n\t}\n\tfmt.Println()\n\treturn nil\n}\n\nfunc (d *doublyLinkedList) TraverseReverse() error {\n\tif d.head == nil {\n\t\treturn fmt.Errorf(\"TraverseError: List is empty\")\n\t}\n\ttemp := d.tail\n\tfor temp != nil {\n\t\tfmt.Printf(\"value = %v, prev = %v, next = %v\\n\", temp.data, temp.prev, temp.next)\n\t\ttemp = temp.prev\n\t}\n\tfmt.Println()\n\treturn nil\n}\n\nfunc (d *doublyLinkedList) Size() int {\n\treturn d.len\n}\nfunc main() {\n\tdoublyList := initDoublyList()\n\tfmt.Printf(\"Add Front Node: C\\n\")\n\tdoublyList.AddFrontNodeDLL(\"C\")\n\tfmt.Printf(\"Add Front Node: B\\n\")\n\tdoublyList.AddFrontNodeDLL(\"B\")\n\tfmt.Printf(\"Add Front Node: A\\n\")\n\tdoublyList.AddFrontNodeDLL(\"A\")\n\tfmt.Printf(\"Add End Node: D\\n\")\n\tdoublyList.AddEndNodeDLL(\"D\")\n\tfmt.Printf(\"Add End Node: E\\n\")\n\tdoublyList.AddEndNodeDLL(\"E\")\n\n\tfmt.Printf(\"Size of doubly linked ist: %d\\n\", doublyList.Size())\n\n\terr := doublyList.TraverseForward()\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t}\n\n\terr = doublyList.TraverseReverse()\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t}\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Add Front Node: C\nAdd Front Node: B\nAdd Front Node: A\nAdd End Node: D\nAdd End Node: E\nSize of doubly linked ist: 5\nvalue = A, prev = <nil>, next = &{B 0xc000070060 0xc000070020}\nvalue = B, prev = &{A <nil> 0xc000070040}, next = &{C 0xc000070040 0xc000070080}\nvalue = C, prev = &{B 0xc000070060 0xc000070020}, next = &{D 0xc000070020 0xc0000700a0}\nvalue = D, prev = &{C 0xc000070040 0xc000070080}, next = &{E 0xc000070080 <nil>}\nvalue = E, prev = &{D 0xc000070020 0xc0000700a0}, next = <nil>\n\nvalue = E, prev = &{D 0xc000070020 0xc0000700a0}, next = <nil>\nvalue = D, prev = &{C 0xc000070040 0xc000070080}, next = &{E 0xc000070080 <nil>}\nvalue = C, prev = &{B 0xc000070060 0xc000070020}, next = &{D 0xc000070020 0xc0000700a0}\nvalue = B, prev = &{A <nil> 0xc000070040}, next = &{C 0xc000070040 0xc000070080}\nvalue = A, prev = <nil>, next = &{B 0xc000070060 0xc000070020}<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewProgram Overview A Doubly Linked List contains three fields in its node.&nbsp; Data field&nbsp; One Next pointer points to the next node in the list One Previous pointer which&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-5818","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Doubly Linked List in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"description\" content=\"In this tutorial we will study about implementing a doubly linked list in golang.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Doubly Linked List in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"In this tutorial we will study about implementing a doubly linked list in golang.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-06-14T18:54:51+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-06-14T19:09:03+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/\",\"name\":\"Doubly Linked List in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png\",\"datePublished\":\"2021-06-14T18:54:51+00:00\",\"dateModified\":\"2021-06-14T19:09:03+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"description\":\"In this tutorial we will study about implementing a doubly linked list in golang.\",\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Doubly Linked List in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Doubly Linked List in Go (Golang) - Welcome To Golang By Example","description":"In this tutorial we will study about implementing a doubly linked list in golang.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/","og_locale":"en_US","og_type":"article","og_title":"Doubly Linked List in Go (Golang) - Welcome To Golang By Example","og_description":"In this tutorial we will study about implementing a doubly linked list in golang.","og_url":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-06-14T18:54:51+00:00","article_modified_time":"2021-06-14T19:09:03+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/","url":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/","name":"Doubly Linked List in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png","datePublished":"2021-06-14T18:54:51+00:00","dateModified":"2021-06-14T19:09:03+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"description":"In this tutorial we will study about implementing a doubly linked list in golang.","breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2021\/06\/dll-1024x160.png"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/doubly-linked-list-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Doubly Linked List in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1vQ","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5818","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5818"}],"version-history":[{"count":5,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5818\/revisions"}],"predecessor-version":[{"id":5826,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5818\/revisions\/5826"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5818"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5818"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5818"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}