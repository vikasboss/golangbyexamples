{"id":5605,"date":"2021-05-10T23:07:55","date_gmt":"2021-05-10T17:37:55","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5605"},"modified":"2021-05-10T23:14:06","modified_gmt":"2021-05-10T17:44:06","slug":"concatenation-regex-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/","title":{"rendered":"Concatenation (AND) of regexes in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/#Program\" title=\"Program\">Program<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">It is similar to <strong>AND<\/strong> operator. For example, if there are two regexes <strong>r1<\/strong> and <strong>r2<\/strong>, the concatenation of regexes will be represented as below.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">r1r2<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It will match regex <strong>r1<\/strong> followed by <strong>r2<\/strong>. Both <strong>r1<\/strong> and <strong>r2<\/strong> should be valid regexes. Basically, if string <strong>s<\/strong> matches regex <strong>r1<\/strong> and string <strong>t<\/strong> matches regex <strong>r2<\/strong>, then string <strong>st<\/strong> will match <strong>r1r2<\/strong>.<\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Program\"><\/span><strong>Program<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Here is the example program for the same<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tfirst := \"abc\"\n\tsecond := \"xyz\"\n\tsampleRegex := regexp.MustCompile(first + second)\n\n\tmatch := sampleRegex.Match([]byte(\"abcxyz\"))\n\tfmt.Println(match)\n\n\tmatch = sampleRegex.Match([]byte(\"abc\"))\n\tfmt.Println(match)\n\n\tmatch = sampleRegex.Match([]byte(\"xyz\"))\n\tfmt.Println(match)\n\n\tmatch = sampleRegex.Match([]byte(\"abd\"))\n\tfmt.Println(match)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">true\nfalse\nfalse\nfalse<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It only matches<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">abcxyz<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We first compile the given regex using the <strong><a href=\"https:\/\/golang.org\/pkg\/regexp\/#MustCompile\">MustCompile<\/a><\/strong> function. This function panics if the given regex is not valid. After it is able to successfully compile the given regex, it returns the instance of <strong><a href=\"https:\/\/golang.org\/pkg\/regexp\/\">regexp<\/a><\/strong> struct.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">sampleRegexp := regexp.MustCompile(first + second)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We can call the <strong><a href=\"https:\/\/golang.org\/pkg\/regexp\/#Match\">Match<\/a><\/strong> method on the regexp instance to match the given pattern with the regex. It returns true if the regex matches with the input string otherwise false. We need to pass in bytes of the input string to this method.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">match := sampleRegexp.Match([]byte(\"abcxyz\"))<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Concatenation can also be done between more than three regexes. Below is an example for the same<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"regexp\"\n)\nfunc main() {\n    first := \"abc\"\n    second := \"xyz\"\n    third := \"123\"\n    sampleRegex := regexp.MustCompile(first + second + third)\n\n    match := sampleRegex.Match([]byte(\"abcxyz123\"))\n    fmt.Println(match)\n\n    match = sampleRegex.Match([]byte(\"abc\"))\n    fmt.Println(match)\n\n    match = sampleRegex.Match([]byte(\"xyz\"))\n    fmt.Println(match)\n\n    match = sampleRegex.Match([]byte(\"abcxyz\"))\n    fmt.Println(match)\n\n    match = sampleRegex.Match([]byte(\"abd\"))\n    fmt.Println(match)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">true\nfalse\nfalse\nfalse\nfalse<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It only matches<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">abcxyz123<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Also, check out our Golang advance tutorial Series \u2013&nbsp;<a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\"><u>Golang Advance Tutorial<\/u><\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewProgram Overview It is similar to AND operator. For example, if there are two regexes r1 and r2, the concatenation of regexes will be represented as below. It will&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-5605","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Concatenation (AND) of regexes in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"description\" content=\"This tutorial is about concatenation of two or more regexes in golang. We will use the regexp package for the same.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Concatenation (AND) of regexes in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"This tutorial is about concatenation of two or more regexes in golang. We will use the regexp package for the same.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-05-10T17:37:55+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-05-10T17:44:06+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/\",\"name\":\"Concatenation (AND) of regexes in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-05-10T17:37:55+00:00\",\"dateModified\":\"2021-05-10T17:44:06+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"description\":\"This tutorial is about concatenation of two or more regexes in golang. We will use the regexp package for the same.\",\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Concatenation (AND) of regexes in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Concatenation (AND) of regexes in Go (Golang) - Welcome To Golang By Example","description":"This tutorial is about concatenation of two or more regexes in golang. We will use the regexp package for the same.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/","og_locale":"en_US","og_type":"article","og_title":"Concatenation (AND) of regexes in Go (Golang) - Welcome To Golang By Example","og_description":"This tutorial is about concatenation of two or more regexes in golang. We will use the regexp package for the same.","og_url":"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-05-10T17:37:55+00:00","article_modified_time":"2021-05-10T17:44:06+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/","url":"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/","name":"Concatenation (AND) of regexes in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-05-10T17:37:55+00:00","dateModified":"2021-05-10T17:44:06+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"description":"This tutorial is about concatenation of two or more regexes in golang. We will use the regexp package for the same.","breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/concatenation-regex-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/concatenation-regex-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Concatenation (AND) of regexes in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1sp","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5605","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5605"}],"version-history":[{"count":2,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5605\/revisions"}],"predecessor-version":[{"id":5608,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5605\/revisions\/5608"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5605"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5605"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5605"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}