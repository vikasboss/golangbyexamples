{"id":832,"date":"2019-12-12T17:32:27","date_gmt":"2019-12-12T17:32:27","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=832"},"modified":"2020-03-09T23:45:09","modified_gmt":"2020-03-09T23:45:09","slug":"singly-linked-list-in-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/","title":{"rendered":"Linked List in Golang"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Singly-linked list is a simple kind of linked list that allows traversal in one direction i.e forward. Each node in the linked list contains the data part and the pointer to the next node in the linked list.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">The linked list implemented below supports the following operations<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li>AddFront<\/li><li>AddBack<\/li><li>RemoveFront<\/li><li>RemoveBack<\/li><li>Traverse<\/li><li>Front<\/li><li>Size<\/li><\/ol>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype ele struct {\n    name string\n    next *ele\n}\n\ntype singleList struct {\n    len  int\n    head *ele\n}\n\nfunc initList() *singleList {\n    return &singleList{}\n}\n\nfunc (s *singleList) AddFront(name string) {\n    ele := &ele{\n        name: name,\n    }\n    if s.head == nil {\n        s.head = ele\n    } else {\n        ele.next = s.head\n        s.head = ele\n    }\n    s.len++\n    return\n}\n\nfunc (s *singleList) AddBack(name string) {\n    ele := &ele{\n        name: name,\n    }\n    if s.head == nil {\n        s.head = ele\n    } else {\n        current := s.head\n        for current.next != nil {\n            current = current.next\n        }\n        current.next = ele\n    }\n    s.len++\n    return\n}\n\nfunc (s *singleList) RemoveFront() error {\n    if s.head == nil {\n        return fmt.Errorf(\"List is empty\")\n    }\n    s.head = s.head.next\n    s.len--\n    return nil\n}\n\nfunc (s *singleList) RemoveBack() error {\n    if s.head == nil {\n        return fmt.Errorf(\"removeBack: List is empty\")\n    }\n    var prev *ele\n    current := s.head\n    for current.next != nil {\n        prev = current\n        current = current.next\n    }\n    if prev != nil {\n        prev.next = nil\n    } else {\n        s.head = nil\n    }\n    s.len--\n    return nil\n}\n\nfunc (s *singleList) Front() (string, error) {\n    if s.head == nil {\n        return \"\", fmt.Errorf(\"Single List is empty\")\n    }\n    return s.head.name, nil\n}\n\nfunc (s *singleList) Size() int {\n    return s.len\n}\n\nfunc (s *singleList) Traverse() error {\n    if s.head == nil {\n        return fmt.Errorf(\"TranverseError: List is empty\")\n    }\n    current := s.head\n    for current != nil {\n        fmt.Println(current.name)\n        current = current.next\n    }\n    return nil\n}\n\nfunc main() {\n     singleList := initList()\n    fmt.Printf(\"AddFront: A\\n\")\n    singleList.AddFront(\"A\")\n    fmt.Printf(\"AddFront: B\\n\")\n    singleList.AddFront(\"B\")\n    fmt.Printf(\"AddBack: C\\n\")\n    singleList.AddBack(\"C\")\n\n    fmt.Printf(\"Size: %d\\n\", singleList.Size())\n   \n    err := singleList.Traverse()\n    if err != nil {\n        fmt.Println(err.Error())\n    }\n    \n    fmt.Printf(\"RemoveFront\\n\")\n    err = singleList.RemoveFront()\n    if err != nil {\n        fmt.Printf(\"RemoveFront Error: %s\\n\", err.Error())\n    }\n    \n    fmt.Printf(\"RemoveBack\\n\")\n    err = singleList.RemoveBack()\n    if err != nil {\n        fmt.Printf(\"RemoveBack Error: %s\\n\", err.Error())\n    }\n    \n    fmt.Printf(\"RemoveBack\\n\")\n    err = singleList.RemoveBack()\n    if err != nil {\n        fmt.Printf(\"RemoveBack Error: %s\\n\", err.Error())\n    }\n    \n    fmt.Printf(\"RemoveBack\\n\")\n    err = singleList.RemoveBack()\n    if err != nil {\n        fmt.Printf(\"RemoveBack Error: %s\\n\", err.Error())\n    }\n    \n    err = singleList.Traverse()\n    if err != nil {\n        fmt.Println(err.Error())\n    }\n    \n   fmt.Printf(\"Size: %d\\n\", singleList.Size())\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">AddFront: A\nAddFront: B\nAddBack: C\nSize: 3\nB\nA\nC\nRemoveFront\nRemoveBack\nRemoveBack\nRemoveBack\nRemoveBack Error: removeBack: List is empty\nTranverseError: List is empty\nSize: 0<\/code><\/pre>\n\n\n\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Singly-linked list is a simple kind of linked list that allows traversal in one direction i.e forward. Each node in the linked list contains the data part and the pointer to the&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[105,3,103,212,211,106],"class_list":["post-832","post","type-post","status-publish","format-standard","hentry","category-tech","tag-data","tag-go","tag-linked","tag-single-linked-list","tag-singly","tag-structure"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Linked List in Golang - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Linked List in Golang - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Singly-linked list is a simple kind of linked list that allows traversal in one direction i.e forward. Each node in the linked list contains the data part and the pointer to the...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-12-12T17:32:27+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-03-09T23:45:09+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/\",\"name\":\"Linked List in Golang - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2019-12-12T17:32:27+00:00\",\"dateModified\":\"2020-03-09T23:45:09+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Linked List in Golang\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Linked List in Golang - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/","og_locale":"en_US","og_type":"article","og_title":"Linked List in Golang - Welcome To Golang By Example","og_description":"Singly-linked list is a simple kind of linked list that allows traversal in one direction i.e forward. Each node in the linked list contains the data part and the pointer to the...","og_url":"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-12-12T17:32:27+00:00","article_modified_time":"2020-03-09T23:45:09+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/","url":"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/","name":"Linked List in Golang - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2019-12-12T17:32:27+00:00","dateModified":"2020-03-09T23:45:09+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/singly-linked-list-in-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Linked List in Golang"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-dq","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/832","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=832"}],"version-history":[{"count":2,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/832\/revisions"}],"predecessor-version":[{"id":1637,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/832\/revisions\/1637"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=832"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=832"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=832"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}