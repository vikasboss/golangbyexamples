{"id":3887,"date":"2020-08-14T22:16:09","date_gmt":"2020-08-14T16:46:09","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=3887"},"modified":"2020-08-14T22:19:12","modified_gmt":"2020-08-14T16:49:12","slug":"close-operation-on-a-channel-in-go-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/","title":{"rendered":"Close operation on a channel in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Close is an inbuilt function that can be used to close a channel. Closing of a channel means that no more data can we send to the channel.\u00a0 Channel is generally closed when all the data has been sent and there&#8217;s no more data to be send.\u00a0Let&#8217;s see a program<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    ch := make(chan int)\n    go sum(ch, 3)\n    ch <- 2\n    ch <- 2\n    ch <- 2\n    close(ch)\n    time.Sleep(time.Second * 1)\n}\n\nfunc sum(ch chan int, len int) {\n    sum := 0\n    for i := 0; i < len; i++ {\n        sum += <-ch\n    }\n    fmt.Printf(\"Sum: %d\\n\", sum)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Sum: 6<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">\u00a0In the above program, we created a channel.\u00a0 Then we called the <strong>sum<\/strong> function in a goroutine. In the main function, we send 3 values to the channel and after that, we closed the channel indicating that no more values can be sent to the channel. The <strong>sum<\/strong> function iterates over the channel using the for loop and calculates the sum value.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Sending on a close channel will\u00a0cause a panic.\u00a0 See the program below<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nfunc main() {\n    ch := make(chan int)\n    close(ch)\n    ch <- 2\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">panic: send on closed channel<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Also closing a already closed channel will cause a panic<\/p>\n\n\n\n<p class=\"has-medium-font-size\">While receiving from a\u00a0 channel we can also use an additional variable to determine if the channel has been closed.\u00a0 Below is the syntax for the same<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">val,ok <- ch<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The value of ok will be<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>True if the channel is not closed<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>False if the channel is closed<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nimport (\n    \"fmt\"\n)\nfunc main() {\n    ch := make(chan int, 1)\n    ch <- 2\n    val, ok := <-ch\n    fmt.Printf(\"Val: %d OK: %t\\n\", val, ok)\n\n    close(ch)\n    val, ok = <-ch\n    fmt.Printf(\"Val: %d OK: %t\\n\", val, ok)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Val: 2 OK: true\nVal: 0 OK: false<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program created a channel of capacity one.\u00a0 Then we send one value to the channel.\u00a0 The <strong>ok<\/strong> variable in the first receive is true since the channel is not closed. The ok variable in the second\u00a0 receive is\u00a0 false because the channel is closed.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>For range loop on a channel<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">For range loop can be used to receive data from the channel until it is closed.\u00a0<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\tch := make(chan int)\n\tch <- 2\n\tch <- 2\n\tch <- 2\n\tclose(ch)\n\tsum(ch)\n\ttime.Sleep(time.Second * 1)\n}\n\nfunc sum(ch chan int) {\n\tsum := 0\n\tfor val := range ch {\n\t\tsum += val\n\t}\n\tfmt.Printf(\"Sum: %d\\n\", sum)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Sum: 6<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">\u00a0In the above program,\u00a0 we created a channel.\u00a0\u00a0 In the main function the send three values to the channel and after that, we closed the channel. Then we called the sum function and we passed the channel to that function. In the sum function, we did a for range loop over the channel.\u00a0\u00a0 \u00a0After iterating over all the values in the channel the for range loop will exit\u00a0 since the channel is closed<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now the question which comes to the mind is that what happens if you don't close a channel in the main function.\u00a0 Try commenting the line in which they are closing the channel. Now run the program.\u00a0 It will also\u00a0 output\u00a0 deadlock because\u00a0 for range loop will never finish in the sum function<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fatal error: all goroutines are asleep - deadlock!<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Let's\u00a0see summary table\u00a0which shows the result of close operation on the different types of channel<\/p>\n\n\n\n<figure class=\"wp-block-table is-style-regular\"><table class=\"has-subtle-pale-blue-background-color has-background\"><tbody><tr><td><strong>Command<\/strong><\/td><td><strong>Unbuffered Channel<\/strong><strong>(Not Closed and not nil)<\/strong><\/td><td><strong>Buffered Channel<\/strong><strong>(Not Closed and not nil)<\/strong><\/td><td><strong>Closed Channel<\/strong><\/td><td><strong>Nil Channel<\/strong><\/td><\/tr><tr><td>Close<\/td><td>Success<\/td><td>Success<\/td><td>Panic<\/td><td>Panic<\/td><\/tr><\/tbody><\/table><\/figure>\n","protected":false},"excerpt":{"rendered":"<p>Close is an inbuilt function that can be used to close a channel. Closing of a channel means that no more data can we send to the channel.\u00a0 Channel is generally closed&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-3887","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Close operation on a channel in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Close operation on a channel in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Close is an inbuilt function that can be used to close a channel. Closing of a channel means that no more data can we send to the channel.\u00a0 Channel is generally closed...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-08-14T16:46:09+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-08-14T16:49:12+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/\",\"name\":\"Close operation on a channel in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-08-14T16:46:09+00:00\",\"dateModified\":\"2020-08-14T16:49:12+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Close operation on a channel in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Close operation on a channel in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/","og_locale":"en_US","og_type":"article","og_title":"Close operation on a channel in Go (Golang) - Welcome To Golang By Example","og_description":"Close is an inbuilt function that can be used to close a channel. Closing of a channel means that no more data can we send to the channel.\u00a0 Channel is generally closed...","og_url":"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-08-14T16:46:09+00:00","article_modified_time":"2020-08-14T16:49:12+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/","url":"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/","name":"Close operation on a channel in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-08-14T16:46:09+00:00","dateModified":"2020-08-14T16:49:12+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/close-operation-on-a-channel-in-go-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Close operation on a channel in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-10H","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3887","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=3887"}],"version-history":[{"count":3,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3887\/revisions"}],"predecessor-version":[{"id":3893,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3887\/revisions\/3893"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=3887"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=3887"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=3887"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}