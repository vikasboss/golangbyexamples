{"id":2593,"date":"2020-07-18T20:42:30","date_gmt":"2020-07-18T15:12:30","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=2593"},"modified":"2020-07-18T20:44:27","modified_gmt":"2020-07-18T15:14:27","slug":"pointer-vs-value-receiver-method-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/","title":{"rendered":"Pointer vs Value Receiver in methods while implementing an interface in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">A method of a type can either have a pointer receiver or a value receiver. There is a caveat while pointer vs value receiver for methods of a type when that type implements an interface<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>If a type implements all methods of an interface using value receiver, then both value and pointer of that type can be used while assigning to that interface variable or while passing to a function which accept an argument as that interface.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>If a type implements all methods of an interface using pointer receiver, then the only pointer of that type can be used while assigning to that interface variable or while passing to a function that accepts an argument as that interface.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Example to demonstrate the first point above<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Assume we have an interface <strong>animal<\/strong> as below<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type animal interface {\n    breathe()\n    walk()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We also have a <strong>lion<\/strong> struct implementing this <strong>animal<\/strong> interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type lion struct {\n    age int\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Code<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype animal interface {\n    breathe()\n    walk()\n}\n\ntype lion struct {\n    age int\n}\n\nfunc (l lion) breathe() {\n    fmt.Println(\"Lion breathes\")\n}\n\nfunc (l lion) walk() {\n    fmt.Println(\"Lion walk\")\n}\n\nfunc main() {\n    var a animal\n\n    a = lion{age: 10}\n    a.breathe()\n    a.walk()\n\n    a = &lion{age: 5}\n    a.breathe()\n    a.walk()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Lion breathes\nLion walk\nLion breathes\nLion walk<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The <strong>lion <\/strong>structs implement the <strong>animal<\/strong> interface using value receiver. Hence it works for both variables of type <strong>lion<\/strong> as well as a pointer to variable of type <strong>lion<\/strong>.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">This works<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\"> a = lion{age: 10}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">as well as this<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a = &lion{age: 5}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Example to demonstrate the second point above. The <strong>lion <\/strong>structs implements the <strong>animal <\/strong>interface using a pointer receiver. Hence it works only for the pointer to a variable of type <strong>lion<\/strong>.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">So this works<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a = &lion{age: 5}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">but this raises compilation error<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a = lion{age: 10}<\/code><\/pre>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">cannot use lion literal (type lion) as type animal in assignment:\n        lion does not implement animal (breathe method has pointer receiver)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">See full working code<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype animal interface {\n\tbreathe()\n\twalk()\n}\n\ntype lion struct {\n\tage int\n}\n\nfunc (l *lion) breathe() {\n\tfmt.Println(\"Lion breathes\")\n}\n\nfunc (l *lion) walk() {\n\tfmt.Println(\"Lion walk\")\n}\n\nfunc main() {\n\tvar a animal\n\n\t\/\/a = lion{age: 10}\n\ta.breathe()\n\ta.walk()\n\n\ta = &lion{age: 5}\n\ta.breathe()\n\ta.walk()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Uncomment the line<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a = lion{age: 10}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">and it will raise compilation error<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">cannot use lion literal (type lion) as type animal in assignment:\n        lion does not implement animal (breathe method has pointer receiver)<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>A method of a type can either have a pointer receiver or a value receiver. There is a caveat while pointer vs value receiver for methods of a type when that type&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3],"class_list":["post-2593","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Pointer vs Value Receiver in methods while implementing an interface in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Pointer vs Value Receiver in methods while implementing an interface in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"A method of a type can either have a pointer receiver or a value receiver. There is a caveat while pointer vs value receiver for methods of a type when that type...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-07-18T15:12:30+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-07-18T15:14:27+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/\",\"name\":\"Pointer vs Value Receiver in methods while implementing an interface in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-07-18T15:12:30+00:00\",\"dateModified\":\"2020-07-18T15:14:27+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Pointer vs Value Receiver in methods while implementing an interface in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Pointer vs Value Receiver in methods while implementing an interface in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/","og_locale":"en_US","og_type":"article","og_title":"Pointer vs Value Receiver in methods while implementing an interface in Go (Golang) - Welcome To Golang By Example","og_description":"A method of a type can either have a pointer receiver or a value receiver. There is a caveat while pointer vs value receiver for methods of a type when that type...","og_url":"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-07-18T15:12:30+00:00","article_modified_time":"2020-07-18T15:14:27+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/","url":"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/","name":"Pointer vs Value Receiver in methods while implementing an interface in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-07-18T15:12:30+00:00","dateModified":"2020-07-18T15:14:27+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/pointer-vs-value-receiver-method-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Pointer vs Value Receiver in methods while implementing an interface in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-FP","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2593","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=2593"}],"version-history":[{"count":4,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2593\/revisions"}],"predecessor-version":[{"id":2606,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2593\/revisions\/2606"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=2593"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=2593"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=2593"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}