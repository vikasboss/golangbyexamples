{"id":4320,"date":"2020-11-06T00:48:46","date_gmt":"2020-11-05T19:18:46","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=4320"},"modified":"2021-01-10T23:25:39","modified_gmt":"2021-01-10T17:55:39","slug":"package-vs-module-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/package-vs-module-golang\/","title":{"rendered":"Package vs Module in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#Before_Modules_World\" title=\"Before Modules World\">Before Modules World<\/a><ul class=\"ez-toc-list-level-2\"><li class=\"ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#Pre_Go_version_111\" title=\"Pre Go version 1.11\">Pre Go version 1.11<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#In_Go_version_111\" title=\"In Go version 1.11\">In Go version 1.11<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#After_Go_Version_113\" title=\"After Go Version 1.13\">After Go Version 1.13<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#Creating_Modules\" title=\"Creating Modules\">Creating Modules<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">As per module definition, it is a directory containing a collection of nested and related go packages <strong>go.mod<\/strong> at its root.&nbsp; The <strong>go.mod<\/strong> file defines the<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Module import path.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Dependency requirements of the module for a successful build. It defines both project&#8217;s dependencies requirement and also locks them to their correct version<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Modules provides<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Dependency Management<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>With modules go project doesn&#8217;t necessarily have to lie the <strong>$GOPATH\/sr<\/strong>c folder.&nbsp;<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Also in addition to <strong>go.mod<\/strong> file go also keeps a <strong>go.sum<\/strong> file which contains the cryptographic hash of bits of all project&#8217;s dependent modules. This to make validate that your project&#8217;s dependent modules are not changed.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">The behaviour of packages inside a module is same as earlier. So whatever applied for a package also applies now. There is no change in that. However a collection of packages can be called as module when there is a requirement to version them separately. Also when it is common piece of code and you want to share that code across multiple projects.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Before_Modules_World\"><\/span><strong>Before Modules World<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see version wise changes to fully understand what was the limitations earlier and what has changed since modules<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Pre Go version 1.11 &#8211; Modules did not exist at all<\/li><li>Go Version 1.11 &#8211; Modules was introduced but not finalized<\/li><li>Go Version 1.13 &#8211; Modules was introduced<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Pre_Go_version_111\"><\/span><strong>Pre Go version 1.11<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Before modules go only had packages. $GOPATH location would have three directories<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>src<\/li><li>pkg<\/li><li>bin<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">These were the problems which existed before the modules era<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>All Go project in $GOPATH\/src directory<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>No native dependency management support<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>All the dependency will be downloaded in the $GOPATH\/src\u00a0 directory without versioning<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s look at each problem one by one<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Any GO project has to be inside the $GOPATH\/src directory<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">This was a big limitation in terms of that it restricted where you can keep your project.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>No native dependency management support<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Also, one issue before modules was that there was no way to specify a dependency in a project. Alternate solutions such as dep, glide were available but a native solution was missing.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>All the dependency will be downloaded in the $GOPATH\/src\u00a0 directory without versioning<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">When we do a go get it will download the required package in the $GOPATH\/src directory.\u00a0 Run the below go get command.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go get github.com\/pborman\/uuid<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It will download the package at location<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">$GOPATH\/src\/github.com\/pborman\/uuid<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice one thing about the go get command above that no version was specified. Hence it downloads the latest version present. Also notice the downloaded package. Even it doesn&#8217;t list down any versioning info. Now this is a problem. What if there is an update in the&nbsp; <strong><a href=\"http:\/\/github.com\">github.com<\/a>\/pborman\/uuid<\/strong> package and you want to get that update. Since there is no versioning the updated package will get downloaded at the same location replacing the older one.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"In_Go_version_111\"><\/span><strong>In Go version 1.11<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">In Go 1.11. modules was introduced but not finalized. So if you still using it then better to switch to the latest version<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"After_Go_Version_113\"><\/span><strong>After Go Version 1.13<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">We already discussed all the problems which existed before the pre-modules era. Now let&#8217;s see how each of these problems got resolved with the introduction of modules. <\/p>\n\n\n\n<p class=\"has-medium-font-size\">The first problem was<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>All Go project in $GOPATH\/src directory<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">With modules this is no longer a requirement.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>No native dependency management support<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Modules introduced native dependency management within go. With modules it provides two new files that will lie<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li>go.mod<\/li><li>go.sum<\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">With <strong>go.mod<\/strong> and <strong>go.sum<\/strong> files we are able to install precise version of a dependency without breaking anything. We already gave a brief introduction of these files in the beginning of this tutorial. Later in the tutorial we will look at it in detail<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>All the dependency will be downloaded in the <strong>$GOPATH\/pkg\/mod<\/strong>\u00a0 directory with versioning<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">So if you download a different version of the same library then both will be downloaded in a different directory inside <strong>$GOPATH\/pkg\/mod <\/strong>without overriding each other.\u00a0 . <strong>$GOPATH\/pkg\/mod<\/strong>\u00a0 will have two things inside it<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li>cache &#8211; This is the folder where all dependencies will get downloaded along with the zipped code<\/li><li>Zipped code of all downloaded dependencies will get copied over from the cache directory.<\/li><\/ol>\n\n\n\n<p>Let&#8217;s now create a module. What ever we discussed will be more clear then<br><\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Creating_Modules\"><\/span><strong>Creating Modules<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Below command can be used to create a module. <\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go mod init {module_import_path}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s create a module<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go mod init learn<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">This command will create a <strong>go.mod<\/strong> file in the same directory. Now what is <strong>go.mod<\/strong> file<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s examine the contents of this file. Do a cat<strong> go.mod <\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module learn\n\ngo 1.14<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It contains the module import path and version of the go with which module was created.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Since it is an empty module it doesn&#8217;t have any direct dependency specified yet. Let&#8217;s create a file named <strong>uuid.go <\/strong>in the same directory with below contents<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>uuid.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/pborman\/uuid\"\n)\n\nfunc main() {\n\tuuidWithHyphen := uuid.NewRandom()\n\tuuid := strings.Replace(uuidWithHyphen.String(), \"-\", \"\", -1)\n\tfmt.Println(uuid)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice that we have imported the dependency in the uuid.go as well<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">\"github.com\/pborman\/uuid\"<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s run the below command<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go mod tidy<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">This command will download all the dependencies that are required in your source files and update <strong>go.mod<\/strong> file with that dependency. After running this command let&#8217;s now let&#8217;s again examine the contents of <strong>go.mod<\/strong> file. Do a cat<strong> go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module learn\n\ngo 1.14\n\nrequire github.com\/pborman\/uuid v1.2.1<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It lists direct dependency which was specified in the uuid file along with exact version of the dependency as well. Now let&#8217;s check the <strong>go.sum<\/strong> file as well.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Do a <strong>cat go.sum<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">github.com\/google\/uuid v1.0.0 h1:b4Gk+7WdP\/d3HZH8EJsZpvV7EtDOgaZLtnaNGIu1adA=\ngithub.com\/google\/uuid v1.0.0\/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw\/LqOeaOT+nhxU+yHo=\ngithub.com\/pborman\/uuid v1.2.1 h1:+ZZIw58t\/ozdjRaXh\/3awHfmWRbzYxJoAdNJxe\/3pvw=\ngithub.com\/pborman\/uuid v1.2.1\/go.mod h1:X\/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI\/k=<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.sum<\/strong> file lists down the checksum of direct and indirect dependency required by the module.&nbsp; <a href=\"http:\/\/github.com\">github.com<\/a>\/google\/uuid is internally used by the <a href=\"http:\/\/github.com\">github.com<\/a>\/pborman\/uuid . It is an indirect dependency of the module and hence it is recorded in the <strong>go.sum<\/strong> file.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewBefore Modules WorldPre Go version 1.11In Go version 1.11After Go Version 1.13Creating Modules Overview As per module definition, it is a directory containing a collection of nested and related&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-4320","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Package vs Module in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Package vs Module in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewBefore Modules WorldPre Go version 1.11In Go version 1.11After Go Version 1.13Creating Modules Overview As per module definition, it is a directory containing a collection of nested and related...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-11-05T19:18:46+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-01-10T17:55:39+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"5 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/\",\"name\":\"Package vs Module in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-11-05T19:18:46+00:00\",\"dateModified\":\"2021-01-10T17:55:39+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Package vs Module in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Package vs Module in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/package-vs-module-golang\/","og_locale":"en_US","og_type":"article","og_title":"Package vs Module in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewBefore Modules WorldPre Go version 1.11In Go version 1.11After Go Version 1.13Creating Modules Overview As per module definition, it is a directory containing a collection of nested and related...","og_url":"https:\/\/golangbyexamples.com\/package-vs-module-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-11-05T19:18:46+00:00","article_modified_time":"2021-01-10T17:55:39+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"5 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/package-vs-module-golang\/","url":"https:\/\/golangbyexamples.com\/package-vs-module-golang\/","name":"Package vs Module in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-11-05T19:18:46+00:00","dateModified":"2021-01-10T17:55:39+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/package-vs-module-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/package-vs-module-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Package vs Module in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-17G","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4320","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=4320"}],"version-history":[{"count":4,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4320\/revisions"}],"predecessor-version":[{"id":4926,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4320\/revisions\/4926"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=4320"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=4320"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=4320"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}