{"id":4195,"date":"2020-10-10T23:59:16","date_gmt":"2020-10-10T18:29:16","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=4195"},"modified":"2021-09-16T18:06:32","modified_gmt":"2021-09-16T12:36:32","slug":"pointer-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/pointer-golang\/","title":{"rendered":"Pointer in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">This is the&nbsp; chapter 15 of the golang comprehensive tutorial series. Refer to this link for other chapters of the series \u2013&nbsp;<a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Comprehensive Tutorial Series<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Next Tutorial<\/strong>&nbsp;\u2013&nbsp;<a href=\"https:\/\/golangbyexamples.com\/struct-in-golang-complete-guide\/\">Struct<\/a><br><strong>Previous Tutorial<\/strong>&nbsp;\u2013 <a href=\"https:\/\/golangbyexamples.com\/defer-golang\">Defer keyword<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now let\u2019s check out the current tutorial. Below is the table of contents for current tutorial.<\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Declaration_of_a_Pointer\" title=\"Declaration of a Pointer\">Declaration of a Pointer<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Initialization_of_a_Pointer\" title=\"Initialization of a Pointer\">Initialization of a Pointer<\/a><ul class=\"ez-toc-list-level-2\"><li class=\"ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Using_the_new_operator\" title=\"Using the new operator\">Using the new operator<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Using_the_ambersand_operator\" title=\"Using the ambersand &#8216;&amp;&#8217; operator\">Using the ambersand &#8216;&amp;&#8217; operator<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#About_or_dereferencing_pointer\" title=\"About * or dereferencing pointer\">About * or dereferencing pointer<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Pointer_to_a_Pointer\" title=\"Pointer to a Pointer\">Pointer to a Pointer<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-8\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Pointer_Arithmetic\" title=\"Pointer Arithmetic\">Pointer Arithmetic<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-9\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Default_Zero_Value_of_Pointer\" title=\"Default Zero Value of Pointer\">Default Zero Value of Pointer<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-10\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/#Conclusion\" title=\"Conclusion\">Conclusion<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Pointer is a variable that holds a memory address of another variable.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Declaration_of_a_Pointer\"><\/span><strong>Declaration of a Pointer<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">In the below example, <strong>ex<\/strong> is the pointer of <strong>T<\/strong> type.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">var ex *T<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In declaration the pointer value is set to its default zero value which is nil.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Initialization_of_a_Pointer\"><\/span><strong>Initialization of a Pointer<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">There are two ways to initialize a pointer<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using the <strong>new<\/strong> operator<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using the ambersand <strong>&#8216;&amp;&#8217;<\/strong> operator<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Using_the_new_operator\"><\/span><strong>Using the new operator<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Pointers can&nbsp; be initialized using <strong>new <\/strong>operator<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a := new(int)\n*a = 10\nfmt.Println(*a) \/\/Output will be 10<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>*<\/strong> operator can be used to dereference a pointer which means getting the value at address stored in the pointer<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">fmt.Println(*a) \/\/Print the value stored at address a<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Using_the_ambersand_operator\"><\/span>Using the ambersand <strong>&#8216;&amp;&#8217;<\/strong> operator<span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>&amp;&nbsp; <\/strong>used to get the address of a variable<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">a := 2\nb := &a\nfmt.Println(*b) \/\/Output will be 2<\/code><\/pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"381\" height=\"241\" src=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg?resize=381%2C241&#038;ssl=1\" alt=\"\" class=\"wp-image-4196\" srcset=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg?w=381&amp;ssl=1 381w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg?resize=300%2C190&amp;ssl=1 300w\" sizes=\"auto, (max-width: 381px) 100vw, 381px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see a working code covering all above points<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    \/\/Declare\n    var b *int\n    a := 2\n    b = &a\n    \n    \/\/Will print a address. Output will be different everytime.\n    fmt.Println(b)\n    fmt.Println(*b)\n    b = new(int)\n    *b = 10\n    fmt.Println(*b) \n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">2\n10\n0xc0000b0018<\/code><\/pre>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"About_or_dereferencing_pointer\"><\/span><strong>About * or dereferencing pointer<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\"><strong>*<\/strong> operator can be used to:<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Dereference a pointer which means getting the value at address stored in the pointer.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Change the value at that pointer location as well<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n\ta := 2\n\tb := &a\n\tfmt.Println(a)\n\tfmt.Println(*b)\n\n\t*b = 3\n\tfmt.Println(a)\n\tfmt.Println(*b)\n\n\ta = 4\n\tfmt.Println(a)\n\tfmt.Println(*b)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">2\n2\n3\n3\n4\n4<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Both <strong>a<\/strong> and <strong>*b<\/strong> refer to same variable internally.&nbsp; Hence changing value of one reflects in another . Also <strong>*<\/strong> and <strong>&amp;<\/strong> can be used together as well. But they will&nbsp; cancel out each other.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Hence below two are equivalent and will print 2<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>a<\/li><li>*&amp;a<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Also below three are equivalent and will print the address of variable a which is stored in b variable<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>b<\/li><li>*&amp;b<\/li><li>&amp;*b<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Note:&nbsp; *a is not a valid operation as a is not a pointer<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Pointer_to_a_Pointer\"><\/span><strong>Pointer to a Pointer<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">It is also possible to create a pointer to a pointer in go<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a := 2\nb := &a\nc := &b<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>c<\/strong> is a pointer to a pointer here. It stores the address of<strong> b<\/strong> which in turn stores the address of <strong>a<\/strong>. Double dereferencing using the <strong>*<\/strong> operator the can be used to print the value at pointer to pointer. Hence<strong>**c<\/strong> will print the value at which 2<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below diagram depicits pointer to pointer.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>b<\/strong> contains the address of <strong>a<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>c<\/strong> contains the address of <strong>b<\/strong><\/li><\/ul>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"571\" height=\"241\" src=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/pointersInGo.jpg?resize=571%2C241&#038;ssl=1\" alt=\"\" class=\"wp-image-4197\" srcset=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/pointersInGo.jpg?w=571&amp;ssl=1 571w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/pointersInGo.jpg?resize=300%2C127&amp;ssl=1 300w\" sizes=\"auto, (max-width: 571px) 100vw, 571px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see. a program depicting pointer to pointer<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n\ta := 2\n\tb := &a\n\tc := &b\n\n\tfmt.Printf(\"a: %d\\n\", a)\n\tfmt.Printf(\"b: %x\\n\", b)\n\tfmt.Printf(\"c: %x\\n\", c)\n\n\tfmt.Println()\n\tfmt.Printf(\"a: %d\\n\", a)\n\tfmt.Printf(\"*&a: %d\\n\", *&a)\n\tfmt.Printf(\"*b: %d\\n\", *b)\n\tfmt.Printf(\"**c: %d\\n\", **c)\n\n\tfmt.Println()\n\tfmt.Printf(\"&a: %d\\n\", &a)\n\tfmt.Printf(\"b: %d\\n\", b)\n\tfmt.Printf(\"&*b: %d\\n\", &*b)\n\tfmt.Printf(\"*&b: %d\\n\", *&b)\n\tfmt.Printf(\"*c: %d\\n\", *c)\n\n\tfmt.Println()\n\tfmt.Printf(\"b: %d\\n\", &b)\n\tfmt.Printf(\"*c: %d\\n\", c)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a: 2\nb: c000018078\nc: c00000e028\n\na: 2\n*&a: 2\n*b: 2\n**c: 2\n\n&a: 824633819256\nb: 824633819256\n&*b: 824633819256\n*&b: 824633819256\n*c: 824633819256\n\nb: 824633778216\n*c: 824633778216<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">From output is clear that<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below are equivalent and equal to value of variable a which is 2<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>a<\/li><li>*&amp;a<\/li><li>*b<\/li><li>**c<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong><\/strong>Below are equivalent and equal to value of variable b which is address of a<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>&amp;a<\/li><li>b<\/li><li>&amp;*b<\/li><li>*&amp;b<\/li><li>*c<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong><\/strong><strong><\/strong>Below are equivalent and equal to value of variable c which is address of b<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>b<\/li><li>*c<\/li><\/ul>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Pointer_Arithmetic\"><\/span><strong>Pointer Arithmetic<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Pointer arithmetic is not possible in golang unlike C language. It raises compilation error.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nfunc main() {\n    a := 1\n    b := &a\n    b = b + 1\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Above program raises compilation error<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">invalid operation: b + 1 (mismatched types *int and int)<\/code><\/pre>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Default_Zero_Value_of_Pointer\"><\/span><strong>Default Zero Value of Pointer<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Default zero value of a pointer is nil.. Let&#8217;s see a program for it<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    var a *int\n    fmt.Print(\"Default Zero Value of a pointer: \")\n    fmt.Println(a)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Default value of pointer: <nil><\/code><\/pre>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Conclusion\"><\/span><strong>Conclusion<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">This is all about pointers in golang. Hope you have liked this article. Please share feedback\/improvements\/mistakes in comments<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Next Tutorial<\/strong>&nbsp;\u2013&nbsp;<a href=\"https:\/\/golangbyexamples.com\/struct-in-golang-complete-guide\/\">Struct<\/a><br><strong>Previous Tutorial<\/strong>&nbsp;\u2013 <a href=\"https:\/\/golangbyexamples.com\/defer-golang\">Defer keyword<\/a><\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><br><\/h1>\n","protected":false},"excerpt":{"rendered":"<p>This is the&nbsp; chapter 15 of the golang comprehensive tutorial series. Refer to this link for other chapters of the series \u2013&nbsp;Golang Comprehensive Tutorial Series Next Tutorial&nbsp;\u2013&nbsp;StructPrevious Tutorial&nbsp;\u2013 Defer keyword Now let\u2019s&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-4195","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Pointer in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/pointer-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Pointer in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"This is the&nbsp; chapter 15 of the golang comprehensive tutorial series. Refer to this link for other chapters of the series \u2013&nbsp;Golang Comprehensive Tutorial Series Next Tutorial&nbsp;\u2013&nbsp;StructPrevious Tutorial&nbsp;\u2013 Defer keyword Now let\u2019s...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/pointer-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-10-10T18:29:16+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-09-16T12:36:32+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/pointer-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/pointer-golang\/\",\"name\":\"Pointer in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/pointer-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/pointer-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg\",\"datePublished\":\"2020-10-10T18:29:16+00:00\",\"dateModified\":\"2021-09-16T12:36:32+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/pointer-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/pointer-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/pointer-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/pointer-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Pointer in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Pointer in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/pointer-golang\/","og_locale":"en_US","og_type":"article","og_title":"Pointer in Go (Golang) - Welcome To Golang By Example","og_description":"This is the&nbsp; chapter 15 of the golang comprehensive tutorial series. Refer to this link for other chapters of the series \u2013&nbsp;Golang Comprehensive Tutorial Series Next Tutorial&nbsp;\u2013&nbsp;StructPrevious Tutorial&nbsp;\u2013 Defer keyword Now let\u2019s...","og_url":"https:\/\/golangbyexamples.com\/pointer-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-10-10T18:29:16+00:00","article_modified_time":"2021-09-16T12:36:32+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/pointer-golang\/","url":"https:\/\/golangbyexamples.com\/pointer-golang\/","name":"Pointer in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/pointer-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/pointer-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg","datePublished":"2020-10-10T18:29:16+00:00","dateModified":"2021-09-16T12:36:32+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/pointer-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/pointer-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/pointer-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2020\/10\/GoPointer1-2.jpg"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/pointer-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Pointer in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-15F","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4195","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=4195"}],"version-history":[{"count":5,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4195\/revisions"}],"predecessor-version":[{"id":6329,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/4195\/revisions\/6329"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=4195"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=4195"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=4195"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}