{"id":5858,"date":"2021-07-03T15:47:37","date_gmt":"2021-07-03T10:17:37","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5858"},"modified":"2021-07-03T15:47:45","modified_gmt":"2021-07-03T10:17:45","slug":"golang-regex-match-number","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/golang-regex-match-number\/","title":{"rendered":"Golang Regex: Match number or numeric digits in Regular Expression"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/#Match_a_single_digit\" title=\"Match a single digit\">Match a single digit<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/#Match_Repetition_of_digit\" title=\"Match Repetition of digit\">Match Repetition of digit<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>\\d<\/strong> can be used to match digits in golang. In fact, <strong>\\d<\/strong> can be used to match the entire range.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">0-9<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The regular expression for matching any digit will be<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">\\d<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In case you want to match only a particular digit, let&#8217;s say 5 then the regular expression will be that digit.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">5<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">If you want to match two digits then below will be the regex<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">\\d\\d<\/code><\/pre>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Match_a_single_digit\"><\/span><strong>Match a single digit<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see an example<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`\\d`)\n\n\tfmt.Println(\"For regex \\\\d\")\n\tmatch := sampleRegexp.MatchString(\"1\")\n\tfmt.Printf(\"For 1: %t\\n\", match)\n\n\tmatch = sampleRegexp.MatchString(\"4\")\n\tfmt.Printf(\"For 4: %t\\n\", match)\n\n\tmatch = sampleRegexp.MatchString(\"9\")\n\tfmt.Printf(\"For 9: %t\\n\", match)\n\n\tmatch = sampleRegexp.MatchString(\"a\")\n\tfmt.Printf(\"For a: %t\\n\", match)\n\n\tsampleRegexp = regexp.MustCompile(`5`)\n\tfmt.Println(\"\\nFor regex 5\")\n\tmatch = sampleRegexp.MatchString(\"5\")\n\tfmt.Printf(\"For 5: %t\\n\", match)\n\n\tmatch = sampleRegexp.MatchString(\"6\")\n\tfmt.Printf(\"For 6: %t\\n\", match)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">For regex \\d\nFor 1: true\nFor 4: true\nFor 9: true\nFor a: false\n\nFor regex 5\nFor 5: true\nFor 6: false<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, we have examples of&nbsp; two regexes<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>\\d<\/strong> &#8211; Match any digit<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>5<\/strong>\u00a0 &#8211; Match only five<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">The first matches any single digit. That is why it matches<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">1\n4\n9<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">And it doesn&#8217;t match<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The same is also evident from the output<\/p>\n\n\n\n<p class=\"has-medium-font-size\">The second regex matches only <strong>&#8220;5&#8221;<\/strong> and it doesn&#8217;t match <strong>&#8220;6&#8221;<\/strong> as is evident from the output<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">For regex 5\nFor 5: true\nFor 6: false<\/code><\/pre>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Match_Repetition_of_digit\"><\/span><strong>Match Repetition of digit<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Quantifiers can be used to match the repetition of digits. Example<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>\\d+ <\/strong>&#8211; Match one or more digits<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>\\d*<\/strong> &#8211; Match zero or more digits<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>\\d{N}<\/strong> &#8211; Match N number of digits<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegexp := regexp.MustCompile(`\\d+`)\n\n\tfmt.Println(`For regex \\d+`)\n\tmatch := sampleRegexp.MatchString(\"12345\")\n\tfmt.Printf(\"For 12345: %t\\n\", match)\n\n\tmatch = sampleRegexp.MatchString(\"\")\n\tfmt.Printf(\"For empty string: %t\\n\", match)\n\n\tsampleRegexp = regexp.MustCompile(`\\d*`)\n\n\tfmt.Println()\n\tfmt.Println(`For regex \\d*`)\n\tmatch = sampleRegexp.MatchString(\"12345\")\n\tfmt.Printf(\"For 12345: %t\\n\", match)\n\n\tmatch = sampleRegexp.MatchString(\"\")\n\tfmt.Printf(\"For empty string: %t\\n\", match)\n\n\tsampleRegexp = regexp.MustCompile(`\\d{2}`)\n\n\tfmt.Println()\n\tfmt.Println(`For regex \\d{2}`)\n\tmatch = sampleRegexp.MatchString(\"12\")\n\tfmt.Printf(\"For 12: %t\\n\", match)\n\n\tmatch = sampleRegexp.MatchString(\"1\")\n\tfmt.Printf(\"For 1: %t\\n\", match)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">For regex \\d+\nFor 12345: true\nFor empty string: false\n\nFor regex \\d*\nFor 12345: true\nFor empty string: true\n\nFor regex \\d{2}\nFor 12: true\nFor 1: false<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, we have examples of&nbsp; three regexes<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>\\d+<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>\\d*<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>\\d{N}<\/strong><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong>\\d+ <\/strong>regex gives a match for <strong>&#8220;12345&#8221;<\/strong> but fails for an empty string<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>\\d*<\/strong>\u00a0 gives a match for <strong>&#8220;12345&#8221;<\/strong> as well as an empty string<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>\\d{2}<\/strong> matches a sequence of two digits. That is why it matches for <strong>&#8220;12&#8221;<\/strong> for fails for <strong>&#8220;1&#8221;<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Also, check out our Golang advance tutorial Series \u2013\u00a0<a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\"><u>Golang Advance Tutorial<\/u><\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewMatch a single digitMatch Repetition of digit Overview \\d can be used to match digits in golang. In fact, \\d can be used to match the entire range. The&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-5858","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Golang Regex: Match number or numeric digits in Regular Expression - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Golang Regex: Match number or numeric digits in Regular Expression - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewMatch a single digitMatch Repetition of digit Overview d can be used to match digits in golang. In fact, d can be used to match the entire range. The...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-07-03T10:17:37+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-07-03T10:17:45+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/\",\"url\":\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/\",\"name\":\"Golang Regex: Match number or numeric digits in Regular Expression - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-07-03T10:17:37+00:00\",\"dateModified\":\"2021-07-03T10:17:45+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/golang-regex-match-number\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Golang Regex: Match number or numeric digits in Regular Expression\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Golang Regex: Match number or numeric digits in Regular Expression - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/golang-regex-match-number\/","og_locale":"en_US","og_type":"article","og_title":"Golang Regex: Match number or numeric digits in Regular Expression - Welcome To Golang By Example","og_description":"Table of Contents OverviewMatch a single digitMatch Repetition of digit Overview d can be used to match digits in golang. In fact, d can be used to match the entire range. The...","og_url":"https:\/\/golangbyexamples.com\/golang-regex-match-number\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-07-03T10:17:37+00:00","article_modified_time":"2021-07-03T10:17:45+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/golang-regex-match-number\/","url":"https:\/\/golangbyexamples.com\/golang-regex-match-number\/","name":"Golang Regex: Match number or numeric digits in Regular Expression - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-07-03T10:17:37+00:00","dateModified":"2021-07-03T10:17:45+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/golang-regex-match-number\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/golang-regex-match-number\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/golang-regex-match-number\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Golang Regex: Match number or numeric digits in Regular Expression"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1wu","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5858","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5858"}],"version-history":[{"count":2,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5858\/revisions"}],"predecessor-version":[{"id":5860,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5858\/revisions\/5860"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5858"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5858"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5858"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}