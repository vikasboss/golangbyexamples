{"id":281,"date":"2019-10-15T02:39:46","date_gmt":"2019-10-15T02:39:46","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=281"},"modified":"2021-01-20T10:54:10","modified_gmt":"2021-01-20T05:24:10","slug":"runtime-polymorphism-go","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/","title":{"rendered":"Runtime Polymorphism in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">RunTime Polymorphism means that a call is resolved at runtime. It is achieved in GO using interfaces.&nbsp;<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s understand it with an example. Different countries have different ways of calculating the tax. This can be represented by means of an interface.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type taxCalculator interface{\n    calculateTax()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Now different countries can have their own struct and can implement the <strong>calculateTax() <\/strong>method. For eg for&nbsp;<strong>indianTax<\/strong> struct can be represented as below. It can also define a method&nbsp;calculateTax() which can do the actual calculation based on percentage.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Similarly,&nbsp;other country&#8217;s tax systems can also be represented by a struct and they can also implement their own&nbsp;calculateTax() method to give their own value of tax.&nbsp;<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now let&#8217;s see how we can use this <b>taxCalcuator <strong>in<\/strong><\/b>terface to calculate tax of a person who is settled in different countries in different parts of the year. See the below full program for reference.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nimport \"fmt\"\ntype taxSystem interface {\n    calculateTax() int\n}\ntype indianTax struct {\n    taxPercentage int\n    income        int\n}\nfunc (i *indianTax) calculateTax() int {\n    tax := i.income * i.taxPercentage \/ 100\n    return tax\n}\ntype singaporeTax struct {\n    taxPercentage int\n    income        int\n}\nfunc (i *singaporeTax) calculateTax() int {\n    tax := i.income * i.taxPercentage \/ 100\n    return tax\n}\ntype usaTax struct {\n    taxPercentage int\n    income        int\n}\nfunc (i *usaTax) calculateTax() int {\n    tax := i.income * i.taxPercentage \/ 100\n    return tax\n}\nfunc main() {\n    indianTax := &indianTax{\n        taxPercentage: 30,\n        income:        1000,\n    }\n    singaporeTax := &singaporeTax{\n        taxPercentage: 10,\n        income:        2000,\n    }\n\n\n    taxSystems := []taxSystem{indianTax, singaporeTax}\n    totalTax := calculateTotalTax(taxSystems)\n\n\n    fmt.Printf(\"Total Tax is %d\\n\", totalTax)\n}\nfunc calculateTotalTax(taxSystems []taxSystem) int {\n    totalTax := 0\n    for _, t := range taxSystems {\n        totalTax += t.calculateTax() \/\/This is where runtime polymorphism happens\n    }\n    return totalTax\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Total Tax is 300<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Now below is the line where run time polymorphism happens.&nbsp;<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\"> totalTax += t.calculateTax() \/\/This is where runtime polymorphism happens<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The same&nbsp;<strong>calculateTax <\/strong>is used in different contexts to calculate tax. When the compiler sees this call it delays which exact method to be called at run time. This magic happens behind the scene. If you are interested in knowing how this magic happens then refer to this link.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Extension to add more tax systems:<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now let&#8217;s extend the above program to also include the tax system for USA countries<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type usaTax struct {\n    taxPercentage int\n    income        int\n}\n\nfunc (i *usaTax) calculateTax() int {\n    tax := i.income * i.taxPercentage \/ 100\n    return tax\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We just have to change our main function to add USA tax system.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func main() {\n    indianTax := &indianTax{\n        taxPercentage: 30,\n        income:        1000,\n    }\n    singaporeTax := &singaporeTax{\n        taxPercentage: 10,\n        income:        2000,\n    }\n    usaTax := &usaTax{\n        taxPercentage: 40,\n        income:        500,\n    }\n\n    taxSystems := []taxSystem{indianTax, singaporeTax, usaTax}\n    totalTax := calculateTotalTax(taxSystems)\n    fmt.Printf(\"Total Tax is %d\\n\", totalTax)\n}\nfunc calculateTotalTax(taxSystems []taxSystem) int {\n    totalTax := 0\n    for _, t := range taxSystems {\n        totalTax += t.calculateTax()\n    }\n    return totalTax\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Total Tax is 700<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">If you notice in the above program&nbsp;<strong>calculateTotalTax <\/strong>function doesn&#8217;t need to be changed to accommodate the USA tax system. That is the benefit of interfaces and polymorphism.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>RunTime Polymorphism means that a call is resolved at runtime. It is achieved in GO using interfaces.&nbsp; Let&#8217;s understand it with an example. Different countries have different ways of calculating the tax&#8230;.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-281","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Runtime Polymorphism in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Runtime Polymorphism in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"RunTime Polymorphism means that a call is resolved at runtime. It is achieved in GO using interfaces.&nbsp; Let&#8217;s understand it with an example. Different countries have different ways of calculating the tax....\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-10-15T02:39:46+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-01-20T05:24:10+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/\",\"url\":\"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/\",\"name\":\"Runtime Polymorphism in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2019-10-15T02:39:46+00:00\",\"dateModified\":\"2021-01-20T05:24:10+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Runtime Polymorphism in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Runtime Polymorphism in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/","og_locale":"en_US","og_type":"article","og_title":"Runtime Polymorphism in Go (Golang) - Welcome To Golang By Example","og_description":"RunTime Polymorphism means that a call is resolved at runtime. It is achieved in GO using interfaces.&nbsp; Let&#8217;s understand it with an example. Different countries have different ways of calculating the tax....","og_url":"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-10-15T02:39:46+00:00","article_modified_time":"2021-01-20T05:24:10+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/","url":"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/","name":"Runtime Polymorphism in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2019-10-15T02:39:46+00:00","dateModified":"2021-01-20T05:24:10+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/runtime-polymorphism-go\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Runtime Polymorphism in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-4x","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/281","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=281"}],"version-history":[{"count":4,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/281\/revisions"}],"predecessor-version":[{"id":5005,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/281\/revisions\/5005"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=281"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=281"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=281"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}