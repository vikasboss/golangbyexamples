{"id":3920,"date":"2020-09-03T00:32:35","date_gmt":"2020-09-02T19:02:35","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=3920"},"modified":"2020-09-03T00:32:47","modified_gmt":"2020-09-02T19:02:47","slug":"comparing-error-go","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/comparing-error-go\/","title":{"rendered":"Comparing error or error equality in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/comparing-error-go\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/comparing-error-go\/#Code\" title=\"Code\">Code<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">First of all, what is meant by equality of the error?\u00a0 As you already know that error is represented by the error interface in go. In go, two interfaces are equal if<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Both refer to the same underlying type<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The underlying value is equal (or both nil)<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">So the above two points apply for comparing the error as well. There are two ways of checking if given errors are equal<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using the equality operator (==)<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using the Is function of errors package &#8211; <a href=\"https:\/\/golang.org\/pkg\/errors\/\">https:\/\/golang.org\/pkg\/errors\/<\/a> .\u00a0 Using Is function is preferable to using the equality operator because it checks for equality by unwrapping the first error sequentially and matches it with the target error at each step of unwrap. We will see an example, later on, to fully understand why it is preferable. Below is the syntax of Is function.<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func Is(err, target error) bool<\/code><\/pre>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Code\"><\/span><strong>Code<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see an example<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nimport (\n    \"errors\"\n    \"fmt\"\n)\ntype errorOne struct{}\nfunc (e errorOne) Error() string {\n    return \"Error One happended\"\n}\nfunc main() {\n    var err1 errorOne\n    err2 := do()\n    if err1 == err2 {\n        fmt.Println(\"Equality Operator: Both errors are equal\")\n    }\n    if errors.Is(err1, err2) {\n        fmt.Println(\"Is function: Both errors are equal\")\n    }\n}\nfunc do() error {\n    return errorOne{}\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Equality Operator: Both errors are equal\nIs function: Both errors are equal<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, we created <strong>errorOne<\/strong> struct which defines the <strong>Error<\/strong> method hence implement the <strong>error<\/strong> interface.\u00a0 We created <strong>err1<\/strong>\u00a0 variable which is an instance of <strong>errorOne<\/strong> struct. We also created a <strong>do()<\/strong> function which raises an error of type <strong>errorOne <\/strong>and that is captured in <strong>err2<\/strong> variable in the main function<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Then we are comparing two errors using<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using equality operator<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">err1 == err2<\/code><\/pre>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using the <strong>Is<\/strong> function of errors package<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">errors.Is(err1, err2)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Both the method correctly output that the error is equal as both <strong>err1<\/strong> and <strong>err2<\/strong><\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Refer to same underlying type which is <strong>errorOne<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Have the same underlying value<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">We mentioned above that using the <strong>Is<\/strong> function preferable to using the equality operator because it checks for equality by unwrapping the first error sequentially and matches it with the target error at each step of unwrap. Let&#8217;s see an example of that<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n)\n\ntype errorOne struct{}\n\nfunc (e errorOne) Error() string {\n\treturn \"Error One happended\"\n}\n\nfunc main() {\n\terr1 := errorOne{}\n\n\terr2 := do()\n\n\tif err1 == err2 {\n\t\tfmt.Println(\"Equality Operator: Both errors are equal\")\n\t} else {\n\t\tfmt.Println(\"Equality Operator: Both errors are not equal\")\n\t}\n\n\tif errors.Is(err2, err1) {\n\t\tfmt.Println(\"Is function: Both errors are equal\")\n\t}\n}\n\nfunc do() error {\n\treturn fmt.Errorf(\"E2: %w\", errorOne{})\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Equality Operator: Both errors are not equal\nIs function: Both errors are equal<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The above program is almost same as the previous program just the difference being that in the <strong>do() <\/strong>function we are wrapping the error as well<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">return fmt.Errorf(\"E2: %w\", errorOne{})<\/code><\/pre>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The equality operator outputs<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Equality Operator: Both errors are not equal<\/code><\/pre>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>While <strong>Is<\/strong> function outputs<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Is function: Both errors are equal<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">This is because the <strong>err2<\/strong> returned wraps an instance of\u00a0 <strong>errorOne<\/strong> which is not catched by the equality operator but is catched by <strong>Is<\/strong> function<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewCode Overview First of all, what is meant by equality of the error?\u00a0 As you already know that error is represented by the error interface in go. In go,&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-3920","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Comparing error or error equality in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/comparing-error-go\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Comparing error or error equality in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewCode Overview First of all, what is meant by equality of the error?\u00a0 As you already know that error is represented by the error interface in go. In go,...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/comparing-error-go\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-09-02T19:02:35+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-09-02T19:02:47+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/comparing-error-go\/\",\"url\":\"https:\/\/golangbyexamples.com\/comparing-error-go\/\",\"name\":\"Comparing error or error equality in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-09-02T19:02:35+00:00\",\"dateModified\":\"2020-09-02T19:02:47+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/comparing-error-go\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/comparing-error-go\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/comparing-error-go\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Comparing error or error equality in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Comparing error or error equality in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/comparing-error-go\/","og_locale":"en_US","og_type":"article","og_title":"Comparing error or error equality in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewCode Overview First of all, what is meant by equality of the error?\u00a0 As you already know that error is represented by the error interface in go. In go,...","og_url":"https:\/\/golangbyexamples.com\/comparing-error-go\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-09-02T19:02:35+00:00","article_modified_time":"2020-09-02T19:02:47+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/comparing-error-go\/","url":"https:\/\/golangbyexamples.com\/comparing-error-go\/","name":"Comparing error or error equality in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-09-02T19:02:35+00:00","dateModified":"2020-09-02T19:02:47+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/comparing-error-go\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/comparing-error-go\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/comparing-error-go\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Comparing error or error equality in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-11e","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3920","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=3920"}],"version-history":[{"count":1,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3920\/revisions"}],"predecessor-version":[{"id":3921,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3920\/revisions\/3921"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=3920"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=3920"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=3920"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}