{"id":2224,"date":"2020-06-12T02:19:40","date_gmt":"2020-06-11T20:49:40","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=2224"},"modified":"2020-06-12T02:19:56","modified_gmt":"2020-06-11T20:49:56","slug":"pointer-to-struct-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/","title":{"rendered":"Pointer to a struct in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">In golang struct is named collection of data fields. These fields can be of different types. Struct acts as a container that has different heterogeneous data types which together represents an entity. For example, different attributes are used to represent an employee in an organization. Employee can have:<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Name of string type<\/li><li>Age of int type<\/li><li>DOB of time.Time type<\/li><li>Salary of int type<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">A pointer in golang is a variable that holds a memory address of another variable.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now we have understood what struct and pointer is, let&#8217;s move unto how we can define a pointer to the struct.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s say we have an employee struct<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type employee struct {\n    name   string\n    age    int\n    salary int\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">There<strong>&nbsp;<\/strong>are two ways of creating a pointer to the struct<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using the &amp; operator<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using the new keyword<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s looks at each of above method one by one.<\/p>\n\n\n\n<p class=\"has-large-font-size\"><strong>Using the &amp; operator<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">The <strong>&amp;<\/strong> operator can be used to get the pointer to a struct variable.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">emp := employee{name: \"Sam\", age: 31, salary: 2000}\nempP := &emp<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">struct pointer can also be directly created as well<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">empP := &employee{name: \"Sam\", age: 31, salary: 2000}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s look at a program<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">package main\n\nimport \"fmt\"\n\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n\nfunc main() {\n    emp := employee{name: \"Sam\", age: 31, salary: 2000}\n    empP := &emp\n    fmt.Printf(\"Emp: %+v\\n\", empP)\n    empP = &employee{name: \"John\", age: 30, salary: 3000}\n    fmt.Printf(\"Emp: %+v\\n\", empP)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Emp: &{name:Sam age:31 salary:2000}\nEmp: &{name:John age:30 salary:3000}<\/code><\/pre>\n\n\n\n<p class=\"has-large-font-size\"><strong>Using the new keyword<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Using the&nbsp; new() keyword will:<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Create the struct<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Initialize all the field to the zero default value of their type<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Return the pointer to the newly created struct<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">This will return a pointer<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">empP := new(employee)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Pointer address can be print using the <strong>%p<\/strong> format modifier<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Emp Pointer: %p\\n\", empP)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Also to note that * operator can be used to dereference a pointer which means getting the value at address stored in the pointer.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Emp Value: %+v\\n\", *empP)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It will print<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Emp Value: {name: age:0 salary:0}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">When not using the dereference pointer but using the format identifier<strong>\u00a0 %+v, <\/strong>then ampersand will be appended before the struct indicating that is a pointer.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Emp Value: %+v\\n\", empP)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It will print<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Emp Value: &{name: age:0 salary:0}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see full program denoting above points<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype employee struct {\n    name   string\n    age    int\n    salary int\n}\n\nfunc main() {\n    empP := new(employee)\n    fmt.Printf(\"Emp Pointer Address: %p\\n\", empP)\n    fmt.Printf(\"Emp Pointer: %+v\\n\", empP)\n    fmt.Printf(\"Emp Value: %+v\\n\", *empP)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Emp Pointer: 0xc0000a6020\nEmp Value: &{name: age:0 salary:0}\nEmp Value: {name: age:0 salary:0}<\/code><\/pre>\n\n\n\n<p>The pointer address printed will be different on your machine.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>In golang struct is named collection of data fields. These fields can be of different types. Struct acts as a container that has different heterogeneous data types which together represents an entity&#8230;.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-2224","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Pointer to a struct in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Pointer to a struct in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"In golang struct is named collection of data fields. These fields can be of different types. Struct acts as a container that has different heterogeneous data types which together represents an entity....\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-06-11T20:49:40+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-06-11T20:49:56+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/\",\"name\":\"Pointer to a struct in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-06-11T20:49:40+00:00\",\"dateModified\":\"2020-06-11T20:49:56+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Pointer to a struct in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Pointer to a struct in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/","og_locale":"en_US","og_type":"article","og_title":"Pointer to a struct in Go (Golang) - Welcome To Golang By Example","og_description":"In golang struct is named collection of data fields. These fields can be of different types. Struct acts as a container that has different heterogeneous data types which together represents an entity....","og_url":"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-06-11T20:49:40+00:00","article_modified_time":"2020-06-11T20:49:56+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/","url":"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/","name":"Pointer to a struct in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-06-11T20:49:40+00:00","dateModified":"2020-06-11T20:49:56+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/pointer-to-struct-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Pointer to a struct in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-zS","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2224","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=2224"}],"version-history":[{"count":2,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2224\/revisions"}],"predecessor-version":[{"id":2226,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2224\/revisions\/2226"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=2224"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=2224"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=2224"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}