{"id":1556,"date":"2020-03-07T04:24:52","date_gmt":"2020-03-07T04:24:52","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=1556"},"modified":"2020-03-07T04:30:55","modified_gmt":"2020-03-07T04:30:55","slug":"go-variadic-function","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/go-variadic-function\/","title":{"rendered":"Pass Variable Number of Arguments to a function in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/go-variadic-function\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/go-variadic-function\/#Different_number_of_parameters_but_of_the_same_type\" title=\"Different number of parameters but of the same type\">Different number of parameters but of the same type<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/go-variadic-function\/#Different_number_of_parameters_and_of_different_types\" title=\"Different number of parameters and of different types\">Different number of parameters and of different types<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span>Overview<span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">In Go, a function that can accept a dynamic number of arguments is called a Variadic function. Below is the syntax for variadic function. Three dots are used as a prefix before type. <\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func add(numbers ...int)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The above function can be called with zero or more arguments<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">add()\nadd(1,2)\nadd(1,2,3,4)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The variadic param which is <strong>numbers, <\/strong>in this case, gets converted into a slice inside the function which can be iterated using <strong>range<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">func add(numbers ...int) int {\n    sum := 0\n    for _, num := range numbers {\n        sum += num\n    }\n    return sum\n}<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<p class=\"has-medium-font-size\">If you already have a slice and you need to pass it as a variadic param then that can be done by adding three dots (&#8230;) after the argument while calling the function<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">var numbers := []int{2,3,5}\nadd(numbers...)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In case there is a need to pass variadic as well as non-variadic arguments to a function, then the non-variadic needs to be passed as initial arguments and variadic argument need to be the last.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func add(val string, numbers ...int)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The best example of a variadic function used in GO library is the <strong>fmt.Println()<\/strong> function. This is the signature of the function<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func Println(a ...interface{}) (n int, err error) <\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">While using variadic functions there can be a couple of cases related to the variadic argument.<\/p>\n\n\n\n<p><\/p>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Different_number_of_parameters_but_of_the_same_type\"><\/span><strong>Different number of parameters but of the same type<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">The above case can easily be handled using variadic functions. Notice in below code the parameter is of one type i.e. <strong>int.<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(add(1, 2))\n    fmt.Println(add(1, 2, 3))\n    fmt.Println(add(1, 2, 3, 4))\n}\n\nfunc add(numbers ...int) int {\n    sum := 0\n    for _, num := range numbers {\n        sum += num\n    }\n    return sum\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">3\n6\n10<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<h1 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Different_number_of_parameters_and_of_different_types\"><\/span><strong>Different number of parameters and of different types<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">This case can be handled using both variadic function and empty interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    handle(1, \"abc\")\n    handle(\"abc\", \"xyz\", 3)\n    handle(1, 2, 3, 4)\n}\n\nfunc handle(params ...interface{}) {\n    fmt.Println(\"Handle func called with parameters:\")\n    for _, param := range params {\n        fmt.Printf(\"%v\\n\", param)\n    }\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">Handle func called with parameters:\n1\nabc\nHandle func called with parameters:\nabc\nxyz\n3\nHandle func called with parameters:\n1\n2\n3\n4<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We can also use a switch case to get the exact parameters and use them accordingly. See the below example.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype person struct {\n    name   string\n    gender string\n    age    int\n}\n\nfunc main() {\n    err := addPerson(\"Tina\", \"Female\", 20)\n    if err != nil {\n        fmt.Println(\"PersonAdd Error: \" + err.Error())\n    }\n    \n    err = addPerson(\"John\", \"Male\")\n    if err != nil {\n        fmt.Println(\"PersonAdd Error: \" + err.Error())\n    }\n     \n    err = addPerson(\"Wick\", 2, 3)\n    if err != nil {\n        fmt.Println(\"PersonAdd Error: \" + err.Error())\n    }\n}\n\nfunc addPerson(args ...interface{}) error {\n    if len(args) > 3 {\n        return fmt.Errorf(\"Wront number of arguments passed\")\n    }\n    p := &person{}\n    \/\/0 is name\n    \/\/1 is gender\n    \/\/2 is age\n    for i, arg := range args {\n        switch i {\n        case 0: \/\/ name\n            name, ok := arg.(string)\n            if !ok {\n                return fmt.Errorf(\"Name is not passed as string\")\n            }\n            p.name = name\n        case 1:\n            gender, ok := arg.(string)\n            if !ok {\n                return fmt.Errorf(\"Gender is not passed as string\")\n            }\n            p.gender = gender\n        case 2:\n            age, ok := arg.(int)\n            if !ok {\n                return fmt.Errorf(\"Age is not passed as int\")\n            }\n            p.age = age\n        default:\n            return fmt.Errorf(\"Wrong parametes passed\")\n        }\n    }\n    fmt.Printf(\"Person struct is %+v\\n\", p)\n    return nil\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Note:<\/strong> Wherever the arg is not passed it is substituted as default. <\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">Person struct is &{name:Tina gender:Female age:20}\nPerson struct is &{name:John gender:Male age:0}\nPersonAdd Error: Gender is not passed as string<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewDifferent number of parameters but of the same typeDifferent number of parameters and of different types Overview In Go, a function that can accept a dynamic number of arguments&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-1556","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Pass Variable Number of Arguments to a function in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/go-variadic-function\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Pass Variable Number of Arguments to a function in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewDifferent number of parameters but of the same typeDifferent number of parameters and of different types Overview In Go, a function that can accept a dynamic number of arguments...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/go-variadic-function\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-03-07T04:24:52+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-03-07T04:30:55+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/go-variadic-function\/\",\"url\":\"https:\/\/golangbyexamples.com\/go-variadic-function\/\",\"name\":\"Pass Variable Number of Arguments to a function in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-03-07T04:24:52+00:00\",\"dateModified\":\"2020-03-07T04:30:55+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/go-variadic-function\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/go-variadic-function\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/go-variadic-function\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Pass Variable Number of Arguments to a function in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Pass Variable Number of Arguments to a function in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/go-variadic-function\/","og_locale":"en_US","og_type":"article","og_title":"Pass Variable Number of Arguments to a function in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewDifferent number of parameters but of the same typeDifferent number of parameters and of different types Overview In Go, a function that can accept a dynamic number of arguments...","og_url":"https:\/\/golangbyexamples.com\/go-variadic-function\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-03-07T04:24:52+00:00","article_modified_time":"2020-03-07T04:30:55+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/go-variadic-function\/","url":"https:\/\/golangbyexamples.com\/go-variadic-function\/","name":"Pass Variable Number of Arguments to a function in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-03-07T04:24:52+00:00","dateModified":"2020-03-07T04:30:55+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/go-variadic-function\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/go-variadic-function\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/go-variadic-function\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Pass Variable Number of Arguments to a function in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-p6","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1556","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=1556"}],"version-history":[{"count":4,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1556\/revisions"}],"predecessor-version":[{"id":1562,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1556\/revisions\/1562"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=1556"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=1556"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=1556"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}