{"id":5508,"date":"2021-04-26T21:08:43","date_gmt":"2021-04-26T15:38:43","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5508"},"modified":"2021-04-26T21:12:41","modified_gmt":"2021-04-26T15:42:41","slug":"cookiejar-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/cookiejar-golang\/","title":{"rendered":"CookieJar in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#First_example\" title=\"First example\">First example<\/a><ul class=\"ez-toc-list-level-3\"><li class=\"ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#Server\" title=\"Server\">Server<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#Client\" title=\"Client\">Client<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#Second_Example\" title=\"Second Example\">Second Example<\/a><ul class=\"ez-toc-list-level-3\"><li class=\"ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-6\" href=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#Server-2\" title=\"Server\">Server<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-7\" href=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#Client-2\" title=\"Client\">Client<\/a><\/li><\/ul><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">HTTP client in golang lets you specify a <strong>CookieJar<\/strong> that manages storing and sending of the cookies while making external HTTP requests. As the name suggests, think of it as a jar that contains cookies.  <\/p>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golang.org\/pkg\/net\/http\/#Client\">https:\/\/golang.org\/pkg\/net\/http\/#Client<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below is the structure of the net\/http <strong>Client<\/strong> struct. It contains an instance variable named <strong>Jar<\/strong> of type <strong>CookieJar <\/strong>which is an interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type Client struct {\n    Transport RoundTripper\n\n    CheckRedirect func(req *Request, via []*Request) error\n\n    Jar CookieJar\n\n    Timeout time.Duration\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Below is the <strong>CookieJar<\/strong> interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type CookieJar interface {\n    SetCookies(u *url.URL, cookies []*Cookie)\n    Cookies(u *url.URL) []*Cookie\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">net\/http provides a default cookie jar implementation which implements the above <strong>CookieJar <\/strong>interface. We will use it while initializing our net\/http Client<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golang.org\/pkg\/net\/http\/cookiejar\/#Jar\">https:\/\/golang.org\/pkg\/net\/http\/cookiejar\/#Jar<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">You can also provide your custom cookie jar during the initialization of net\/http Client struct which implements the above <strong>CookieJar<\/strong> interface.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">HTTP client uses this jar in two ways<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Adding cookies in this Jar. You can explicitly add cookies to this jar.  The cookies will also be\u00a0added to the jar if the server sends the Set-Cookies header in the response headers. All the cookies specified in the Set-Cookie header will be added\u00a0<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>For consulting this jar while making any external HTTP requests. It checks this jar to know what all\u00a0cookies it needs to send\u00a0for a particular domain<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s illustrate the cookie jar with a couple of examples.&nbsp;<\/p>\n\n\n\n<p class=\"has-medium-font-size\">In the first example, the client will add a cookie while making HTTP requests. This cookie will be sent in all subsequent\u00a0requests to the same domain.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">In the second example, we will see that the server sends the <strong>Set-Cookie<\/strong> header and that cookie will be set at the client end.<\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"First_example\"><\/span><strong>First example<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">In this example, we will see how the client can set the cookie in the cookie jar. For that let&#8217;s first create a server Here is the program for the same<\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Server\"><\/span><strong>Server<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\">The server listens to port 8080 and has two APIs<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>localhost:8080\/doc<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>localhost:8080\/doc\/id<\/strong><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">In both the APIs we are printing the cookies which it receives in the incoming header<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module sample.com\/server\n\ngo 1.16<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>server.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"net\/http\"\n)\n\nfunc main() {\n\tdocHandler := http.HandlerFunc(docHandler)\n\thttp.Handle(\"\/doc\", docHandler)\n\n\tdocGetID := http.HandlerFunc(docGetID)\n\thttp.Handle(\"\/doc\/id\", docGetID)\n\n\thttp.ListenAndServe(\":8080\", nil)\n}\n\nfunc docHandler(w http.ResponseWriter, r *http.Request) {\n\tfmt.Println(\"Cookie in First API Call\")\n\tfor _, c := range r.Cookies() {\n\t\tfmt.Println(c)\n\t}\n\tfmt.Println()\n\tw.WriteHeader(200)\n\tw.Write([]byte(\"Doc Get Successful\"))\n\treturn\n}\n\nfunc docGetID(w http.ResponseWriter, r *http.Request) {\n\tfmt.Println(\"Cookie in Second API Call\")\n\tfor _, c := range r.Cookies() {\n\t\tfmt.Println(c)\n\t}\n\tw.WriteHeader(200)\n\tw.Write([]byte(\"Doc Get ID Successful\"))\n\treturn\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Here is the client code<\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Client\"><\/span><strong>Client<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module sample.com\/client\ngo 1.16<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>client.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net\/http\"\n\t\"net\/http\/cookiejar\"\n\t\"net\/url\"\n)\n\nvar client http.Client\n\nfunc init() {\n\tjar, err := cookiejar.New(nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error while creating cookie jar %s\", err.Error())\n\t}\n\n\tclient = http.Client{\n\t\tJar: jar,\n\t}\n}\n\nfunc main() {\n\treq, err := http.NewRequest(\"GET\", \"http:\/\/localhost:8080\/doc\", nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error %s\", err.Error())\n\t}\n\tcookie := &http.Cookie{\n\t\tName:   \"token\",\n\t\tValue:  \"some_token\",\n\t\tMaxAge: 300,\n\t}\n\turlObj, _ := url.Parse(\"http:\/\/localhost:8080\/\")\n\tclient.Jar.SetCookies(urlObj, []*http.Cookie{cookie})\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured. Error is: %s\", err.Error())\n\t}\n\tdefer resp.Body.Close()\n\n\tfmt.Printf(\"StatusCode: %d\\n\", resp.StatusCode)\n\n\treq, err = http.NewRequest(\"GET\", \"http:\/\/localhost:8080\/doc\/id\", nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error %s\", err.Error())\n\t}\n\n\tresp, err = client.Do(req)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured. Error is: %s\", err.Error())\n\t}\n\tdefer resp.Body.Close()\n\n\tfmt.Printf(\"StatusCode: %d\\n\", resp.StatusCode)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above client program, we are creating an HTTP client with a cookie Jar<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">jar, err := cookiejar.New(nil)\nif err != nil {\n\t\tlog.Fatalf(\"Got error while creating cookie jar %s\", err.Error())\n}\n\nclient = http.Client{\n\t\tJar: jar,\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">we are adding a cookie to the Cookie Jar<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">cookie := &http.Cookie{\n\t\tName:   \"token\",\n\t\tValue:  \"some_token\",\n\t\tMaxAge: 300,\n}\nurlObj, _ := url.Parse(\"http:\/\/localhost:8080\/\")\nclient.Jar.SetCookies(urlObj, []*http.Cookie{cookie})<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Now run the server<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run server.go<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">and client<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run client.go<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice the output at the server end<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Cookie in First API Call\ntoken=some_token\n\nCookie in Second API Call\ntoken=some_token<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The same cookie is being sent automatically\u00a0in both the first and second call which the client will make to the server. How does it work out\u00a0of the box? This is because <strong>CookieJar<\/strong> comes into the picture. The golang HTTP client checks the Cookie Jar before making the HTTP call. It then sends this cookie.<\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Second_Example\"><\/span><strong>Second Example<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">In the second example, we will see how cookie sent by the server in the Set-Cookie header is saved in the <strong>CookieJar<\/strong>. And then it will be sent in the subsequent calls.\u00a0 To illustrate that let&#8217;s also create a server that will send the Set-Cookie header. Here is the server code<\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Server-2\"><\/span><strong>Server<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\">We will create a server Create two APIs<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>localhost:8080\/doc<\/strong> &#8211; In this API the server will set the <strong>Set-Cookie<\/strong> header in the response. We are going to make this call from the golang program. The golang http client is going to save this cookie at its end. The client will then send the same cookie back to the server for any other request to localhost:8080<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>localhost:8080\/doc\/id<\/strong> &#8211; This is the example API to demonstrate that golang http client will actually use the <strong>CookieJar<\/strong> to send the same cookie in the request that is received in response in the Set-Cookie header. Notice in the code for the second API that we are all the cookies that it receives<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module sample.com\/server\n\ngo 1.16<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>server.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"net\/http\"\n)\n\nfunc main() {\n\tdocHandler := http.HandlerFunc(docHandler)\n\thttp.Handle(\"\/doc\", docHandler)\n\n\tdocGetID := http.HandlerFunc(docGetID)\n\thttp.Handle(\"\/doc\/id\", docGetID)\n\n\thttp.ListenAndServe(\":8080\", nil)\n}\n\nfunc docHandler(w http.ResponseWriter, r *http.Request) {\n\tcookie := &http.Cookie{\n\t\tName:   \"id\",\n\t\tValue:  \"abcd\",\n\t\tMaxAge: 300,\n\t}\n\thttp.SetCookie(w, cookie)\n\tw.WriteHeader(200)\n\tw.Write([]byte(\"Doc Get Successful\"))\n\treturn\n}\n\nfunc docGetID(w http.ResponseWriter, r *http.Request) {\n\tfor _, c := range r.Cookies() {\n\t\tfmt.Println(c)\n\t}\n\tw.WriteHeader(200)\n\tw.Write([]byte(\"Doc Get ID Successful\"))\n\treturn\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We are setting the below cookie in <strong>Set-Cookie<\/strong> in response headers<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">cookie := &http.Cookie{\n\tName:   \"id\",\n\tValue:  \"abcd\",\n\tMaxAge: 300,\n}\nhttp.SetCookie(w, cookie)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Here is the client code<\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Client-2\"><\/span>Client<span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module sample.com\/client\ngo 1.16<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>client.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net\/http\"\n\t\"net\/http\/cookiejar\"\n)\n\nvar client http.Client\n\nfunc init() {\n\tjar, err := cookiejar.New(nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error while creating cookie jar %s\", err.Error())\n\t}\n\n\tclient = http.Client{\n\t\tJar: jar,\n\t}\n}\n\nfunc main() {\n\treq, err := http.NewRequest(\"GET\", \"http:\/\/localhost:8080\/doc\", nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error %s\", err.Error())\n\t}\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured. Error is: %s\", err.Error())\n\t}\n\tdefer resp.Body.Close()\n\n\tfmt.Printf(\"StatusCode: %d\\n\", resp.StatusCode)\n\n\treq, err = http.NewRequest(\"GET\", \"http:\/\/localhost:8080\/doc\/id\", nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error %s\", err.Error())\n\t}\n\n\tresp, err = client.Do(req)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured. Error is: %s\", err.Error())\n\t}\n\tdefer resp.Body.Close()\n\n\tfmt.Printf(\"StatusCode: %d\\n\", resp.StatusCode)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">At the client end, we just created an HTTP client with a CookieJar specified. Other than that we are just making two API calls.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>First <a href=\"http:\/\/localhost:8080\/doc\">http:\/\/localhost:8080\/doc<\/a><\/li><li>Second <a href=\"http:\/\/localhost:8080\/doc\/id\">http:\/\/localhost:8080\/doc\/id<\/a><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Now run server first. It will start a local server listening on port 8080<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run server.go<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Now run the client<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run client.go<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice the output at the server end for the second API. See that it is the same cookie that was returned in the <strong>Set-Cookie<\/strong> response headers.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Printing the cookies in the Second API\nid=abcd<\/code><\/pre>\n\n\n\n<p>This is how it works out of the box<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>In the first API call, the golang http client saves all the cookie present in <strong>Set-Cookie<\/strong> response header in the <strong>CookieJar<\/strong><\/li><li>Before making the second API call it checks the <strong>CookieJar <\/strong>to figure out what all cookies need to be sent to the server. It then sends those cookies.<\/li><\/ul>\n\n\n\n<p>This is all about cookie jar in golang. Hope you have liked this tutorial. Also, check out our Golang advance tutorial Series &#8211; <a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Advance Tutorial<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewFirst exampleServerClientSecond ExampleServerClient Overview HTTP client in golang lets you specify a CookieJar that manages storing and sending of the cookies while making external HTTP requests. As the name&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-5508","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>CookieJar in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"description\" content=\"This tutorial will give you a detailed about using cookie jar while making http requests in golang.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"CookieJar in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"This tutorial will give you a detailed about using cookie jar while making http requests in golang.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/cookiejar-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-04-26T15:38:43+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-04-26T15:42:41+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/cookiejar-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/cookiejar-golang\/\",\"name\":\"CookieJar in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-04-26T15:38:43+00:00\",\"dateModified\":\"2021-04-26T15:42:41+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"description\":\"This tutorial will give you a detailed about using cookie jar while making http requests in golang.\",\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/cookiejar-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/cookiejar-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"CookieJar in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"CookieJar in Go (Golang) - Welcome To Golang By Example","description":"This tutorial will give you a detailed about using cookie jar while making http requests in golang.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/cookiejar-golang\/","og_locale":"en_US","og_type":"article","og_title":"CookieJar in Go (Golang) - Welcome To Golang By Example","og_description":"This tutorial will give you a detailed about using cookie jar while making http requests in golang.","og_url":"https:\/\/golangbyexamples.com\/cookiejar-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-04-26T15:38:43+00:00","article_modified_time":"2021-04-26T15:42:41+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/cookiejar-golang\/","url":"https:\/\/golangbyexamples.com\/cookiejar-golang\/","name":"CookieJar in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-04-26T15:38:43+00:00","dateModified":"2021-04-26T15:42:41+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"description":"This tutorial will give you a detailed about using cookie jar while making http requests in golang.","breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/cookiejar-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/cookiejar-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/cookiejar-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"CookieJar in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1qQ","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5508","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5508"}],"version-history":[{"count":4,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5508\/revisions"}],"predecessor-version":[{"id":5514,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5508\/revisions\/5514"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5508"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5508"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5508"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}