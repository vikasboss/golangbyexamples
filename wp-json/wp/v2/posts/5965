{"id":5965,"date":"2021-07-12T10:24:24","date_gmt":"2021-07-12T04:54:24","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5965"},"modified":"2021-07-12T10:24:52","modified_gmt":"2021-07-12T04:54:52","slug":"append-slice-array-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/append-slice-array-golang\/","title":{"rendered":"Append or Add to a Slice or Array in Go (Golang)"},"content":{"rendered":"\n<p>  <\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#append_Function\" title=\"append() Function\">append() Function<\/a><ul class=\"ez-toc-list-level-3\"><li class=\"ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#When_slice_length_is_less_than_capacity\" title=\"When slice length is less than capacity\">When slice length is less than capacity<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#When_slice_length_is_equal_to_the_capacity\" title=\"When slice length is equal to the capacity\">When slice length is equal to the capacity<\/a><\/li><\/ul><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#append_Function_for_string\" title=\"append() Function for string\">append() Function for string<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">In golang, the size of the <strong>array<\/strong> is part of its type. That is why the length of the array is fixed during creation and cannot be changed later. \u00a0This is where the <strong>slice<\/strong> comes into the picture. Slice is more powerful and convenient to use than an array.\u00a0 Slice, in fact, is more analogous to arrays in another programming language. In this tutorial, we will look at how we can add or append to a slice.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Internally a slice is represented by three things.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Pointer to the underlying array<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The current length of the underlying array<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Total Capacity which is the maximum capacity to which the underlying array can expand.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Read more about slice here &#8211; <a href=\"https:\/\/golangbyexamples.com\/slice-in-golang\/\">https:\/\/golangbyexamples.com\/slice-in-golang\/<\/a><\/p>\n\n\n\n<p>   <\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"append_Function\"><\/span><strong>append() Function<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">go\u00a0<strong>builtin<\/strong>\u00a0package provides an\u00a0<strong>append<\/strong>\u00a0function that can be used to append or add to a slice at the end. Below is the signature of this function<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func append(slice []Type, elems ...Type) []Type<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The first argument is the slice itself. The second is the variable number of arguments which is<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">elems ...Type<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>\u2018\u2026\u2019<\/strong>\u00a0operator is the variadic syntax. So basically\u00a0<strong>\u2026Type<\/strong>\u00a0means that the append function can accept a variable number of arguments of type\u00a0<strong>Type<\/strong>. Below is the way for using this function. In the below code, we are appending 4 to a slice that has two elements. It appends at the end and returns the original slice. That is why we are collecting results again in\u00a0the <strong>numbers<\/strong>\u00a0variable. It is also ok to assign the result to some other variable.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">numbers := []int{1,2}\nnumbers := append(numbers, 4) \/\/Slice will become [1, 2, 3, 4]<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It is also ok to append any number of elements because the second argument is the variadic argument.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">numbers := []int{1,2}\nnumbers := append(numbers, 3, 4, 5) \/\/Slice will become [1, 2, 3, 4, 5]<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">This function in the background increases the length and capacity of the slice. There are two cases<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>When slice length is less than capacity<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>When slice length is equal to capacity<\/li><\/ul>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"When_slice_length_is_less_than_capacity\"><\/span><strong>When slice length is less than capacity<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\">In this case, by using the append function,\u00a0 the length of the slice will be increased by one without any change in its capacity. Let\u2019s see an example<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    numbers := make([]int, 3, 5)\n    numbers[0] = 1\n    numbers[1] = 2\n    numbers[2] = 3\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n\n    \/\/Append number 4\n    numbers = append(numbers, 4)\n    fmt.Println(\"\\nAppend Number 4\")\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n\n    \/\/Append number 5\n    numbers = append(numbers, 4)\n    fmt.Println(\"\\nAppend Number 5\")\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">numbers=[1 2 3]\nlength=3\ncapacity=5\n\nAppend Number 4\nnumbers=[1 2 3 4]\nlength=4\ncapacity=5\n\nAppend Number 5\nnumbers=[1 2 3 4 4]\nlength=5\ncapacity=5<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Capacity in all cases doesn\u2019t change and it is 5 while length increases by 1.<\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"When_slice_length_is_equal_to_the_capacity\"><\/span><strong>When slice length is equal to the capacity<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\">In this case, since there is no more capacity, so no new elements can be accommodated.\u00a0 So in this case under the hood, an array of double the capacity will be allocated. The current array pointed by the slice will be copied to that new array. Now the slice will start pointing to this new array. Hence the capacity will be doubled and length will be increased by 1. Let\u2019s see an example<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    numbers := make([]int, 3, 3)\n    numbers[0] = 1\n    numbers[1] = 2\n    numbers[2] = 3\n\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n\n    \/\/Append number 4\n    numbers = append(numbers, 4)\n    fmt.Println(\"\\nAppend Number 4\")\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">numbers=[1 2 3]\nlength=3\ncapacity=3\n\nAppend Number 4\nnumbers=[1 2 3 4]\nlength=4\ncapacity=6<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice in the above example that the capacity is doubled.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">It is also possible to append one slice to another slice. Below is the format for that.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">res := append(slice1, slice2...)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice\u00a0<strong>\u2018\u2026\u2019<\/strong>\u00a0after the second slice.<strong>\u00a0\u2018\u2026\u2019\u00a0<\/strong>is the operator which means that the argument is a variadic parameter. Meaning that during run time slice2\u00a0will be expanded to its individual elements which are passed as multiple arguments to the append function.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    numbers1 := []int{1, 2}\n    numbers2 := []int{3, 4}\n    numbers := append(numbers1, numbers2...)\n    fmt.Printf(\"numbers=%v\\n\", numbers)\n    fmt.Printf(\"length=%d\\n\", len(numbers))\n    fmt.Printf(\"capacity=%d\\n\", cap(numbers))\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">numbers=[1 2 3 4]\nlength=4\ncapacity=4<\/code><\/pre>\n\n\n\n<p> <\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"append_Function_for_string\"><\/span><strong>append() Function for string<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">A string in go is nothing but a sequence of bytes. Hence it is legal to append a string to a slice of bytes. Below is the program for that. Notice the\u00a0<strong>\u2018\u2026\u2019<\/strong>\u00a0at the end of the string<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    sample := \"Hello\"\n    suffix := \"World\"\n\n    result := append([]byte(sample), suffix...)\n    fmt.Printf(\"sample: %s\\n\", string(result))\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">sample: HelloWorld<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Also, check out our Golang advance tutorial Series &#8211; <a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Advance Tutorial<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents Overviewappend() FunctionWhen slice length is less than capacityWhen slice length is equal to the capacityappend() Function for string Overview In golang, the size of the array is part of&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-5965","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Append or Add to a Slice or Array in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Append or Add to a Slice or Array in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents Overviewappend() FunctionWhen slice length is less than capacityWhen slice length is equal to the capacityappend() Function for string Overview In golang, the size of the array is part of...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-07-12T04:54:24+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-07-12T04:54:52+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/\",\"name\":\"Append or Add to a Slice or Array in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-07-12T04:54:24+00:00\",\"dateModified\":\"2021-07-12T04:54:52+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Append or Add to a Slice or Array in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Append or Add to a Slice or Array in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/append-slice-array-golang\/","og_locale":"en_US","og_type":"article","og_title":"Append or Add to a Slice or Array in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents Overviewappend() FunctionWhen slice length is less than capacityWhen slice length is equal to the capacityappend() Function for string Overview In golang, the size of the array is part of...","og_url":"https:\/\/golangbyexamples.com\/append-slice-array-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-07-12T04:54:24+00:00","article_modified_time":"2021-07-12T04:54:52+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/append-slice-array-golang\/","url":"https:\/\/golangbyexamples.com\/append-slice-array-golang\/","name":"Append or Add to a Slice or Array in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-07-12T04:54:24+00:00","dateModified":"2021-07-12T04:54:52+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/append-slice-array-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/append-slice-array-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Append or Add to a Slice or Array in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1yd","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5965","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5965"}],"version-history":[{"count":5,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5965\/revisions"}],"predecessor-version":[{"id":5972,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5965\/revisions\/5972"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5965"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5965"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5965"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}