{"id":680,"date":"2019-11-28T20:01:50","date_gmt":"2019-11-28T20:01:50","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=680"},"modified":"2019-12-27T16:38:23","modified_gmt":"2019-12-27T16:38:23","slug":"mediator-design-pattern-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/","title":{"rendered":"Mediator Design Pattern in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference  &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns in Go (Golang)<\/a><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/#Introduction\" title=\"Introduction:\">Introduction:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/#Practical_Example\" title=\"Practical Example\">Practical Example<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/#Full_Working_Code\" title=\"Full Working Code:\">Full Working Code:<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Introduction\"><\/span><strong>Introduction:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Mediator design pattern is a behavioral design pattern. This pattern suggests creating a mediator object to prevent direct communication among objects so that direct dependencies between them is avoided.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">One very good example of a mediator patter is the railway system platform.&nbsp; Two trains never communicate between themselves for the availability of the platform. The <strong>stationManager<\/strong> acts as a mediator and makes the platform available to only one of the trains. The train connects with <strong>stationManager<\/strong> and acts accordingly. It maintains a queue of waiting trains. In case of any train leaving a platform, it notifies one of the train to arrive on the platform next.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Notice how <strong>stationManger<\/strong> acts as a mediator between the <strong>trains<\/strong> and the <strong>platform<\/strong> in the code below.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>passengerTrain and goodsTrain implement the train interface.<\/li><li>stationManger implements the mediator interface.<\/li><\/ul>\n\n\n\n<p><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Practical_Example\"><\/span><strong>Practical Example<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>train.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype train interface {\n    requestArrival()\n    departure()\n    permitArrival()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>passengerTrain.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype passengerTrain struct {\n    mediator mediator\n}\n\nfunc (g *passengerTrain) requestArrival() {\n    if g.mediator.canLand(g) {\n        fmt.Println(\"PassengerTrain: Landing\")\n    } else {\n        fmt.Println(\"PassengerTrain: Waiting\")\n    }\n}\n\nfunc (g *passengerTrain) departure() {\n    fmt.Println(\"PassengerTrain: Leaving\")\n    g.mediator.notifyFree()\n}\n\nfunc (g *passengerTrain) permitArrival() {\n    fmt.Println(\"PassengerTrain: Arrival Permitted. Landing\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>goodsTrain.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype goodsTrain struct {\n    mediator mediator\n}\n\nfunc (g *goodsTrain) requestArrival() {\n    if g.mediator.canLand(g) {\n        fmt.Println(\"GoodsTrain: Landing\")\n    } else {\n        fmt.Println(\"GoodsTrain: Waiting\")\n    }\n}\n\nfunc (g *goodsTrain) departure() {\n    g.mediator.notifyFree()\n    fmt.Println(\"GoodsTrain: Leaving\")\n}\n\nfunc (g *goodsTrain) permitArrival() {\n    fmt.Println(\"GoodsTrain: Arrival Permitted. Landing\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>mediator.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype mediator interface {\n    canLand(train) bool\n    notifyFree()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>stationManager.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"sync\"\n\ntype stationManager struct {\n    isPlatformFree bool\n    lock           *sync.Mutex\n    trainQueue     []train\n}\n\nfunc newStationManger() *stationManager {\n    return &stationManager{\n        isPlatformFree: true,\n        lock:           &sync.Mutex{},\n    }\n}\n\nfunc (s *stationManager) canLand(t train) bool {\n    s.lock.Lock()\n    defer s.lock.Unlock()\n    if s.isPlatformFree {\n        s.isPlatformFree = false\n        return true\n    }\n    s.trainQueue = append(s.trainQueue, t)\n    return false\n}\n\nfunc (s *stationManager) notifyFree() {\n    s.lock.Lock()\n    defer s.lock.Unlock()\n    if !s.isPlatformFree {\n        s.isPlatformFree = true\n    }\n    if len(s.trainQueue) > 0 {\n        firstTrainInQueue := s.trainQueue[0]\n        s.trainQueue = s.trainQueue[1:]\n        firstTrainInQueue.permitArrival()\n    }\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nfunc main() {\n    stationManager := newStationManger()\n    passengerTrain := &passengerTrain{\n        mediator: stationManager,\n    }\n    goodsTrain := &goodsTrain{\n        mediator: stationManager,\n    }\n    passengerTrain.requestArrival()\n    goodsTrain.requestArrival()\n    passengerTrain.departure()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">PassengerTrain: Landing\nGoodsTrain: Waiting\nPassengerTrain: Leaving\nGoodsTrain: Arrival Permitted. Landing<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Full_Working_Code\"><\/span><strong>Full Working Code:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n)\n\ntype train interface {\n    requestArrival()\n    departure()\n    permitArrival()\n}\n\ntype passengerTrain struct {\n    mediator mediator\n}\n\nfunc (g *passengerTrain) requestArrival() {\n    if g.mediator.canLand(g) {\n        fmt.Println(\"PassengerTrain: Landing\")\n    } else {\n        fmt.Println(\"PassengerTrain: Waiting\")\n    }\n}\n\nfunc (g *passengerTrain) departure() {\n    fmt.Println(\"PassengerTrain: Leaving\")\n    g.mediator.notifyFree()\n}\n\nfunc (g *passengerTrain) permitArrival() {\n    fmt.Println(\"PassengerTrain: Arrival Permitted. Landing\")\n}\n\ntype goodsTrain struct {\n    mediator mediator\n}\n\nfunc (g *goodsTrain) requestArrival() {\n    if g.mediator.canLand(g) {\n        fmt.Println(\"GoodsTrain: Landing\")\n    } else {\n        fmt.Println(\"GoodsTrain: Waiting\")\n    }\n}\n\nfunc (g *goodsTrain) departure() {\n    g.mediator.notifyFree()\n    fmt.Println(\"GoodsTrain: Leaving\")\n}\n\nfunc (g *goodsTrain) permitArrival() {\n    fmt.Println(\"GoodsTrain: Arrival Permitted. Landing\")\n}\n\ntype mediator interface {\n    canLand(train) bool\n    notifyFree()\n}\n\ntype stationManager struct {\n    isPlatformFree bool\n    lock           *sync.Mutex\n    trainQueue     []train\n}\n\nfunc newStationManger() *stationManager {\n    return &stationManager{\n        isPlatformFree: true,\n        lock:           &sync.Mutex{},\n    }\n}\n\nfunc (s *stationManager) canLand(t train) bool {\n    s.lock.Lock()\n    defer s.lock.Unlock()\n    if s.isPlatformFree {\n        s.isPlatformFree = false\n        return true\n    }\n    s.trainQueue = append(s.trainQueue, t)\n    return false\n}\n\nfunc (s *stationManager) notifyFree() {\n    s.lock.Lock()\n    defer s.lock.Unlock()\n    if !s.isPlatformFree {\n        s.isPlatformFree = true\n    }\n    if len(s.trainQueue) > 0 {\n        firstTrainInQueue := s.trainQueue[0]\n        s.trainQueue = s.trainQueue[1:]\n        firstTrainInQueue.permitArrival()\n    }\n}\n\nfunc main() {\n    stationManager := newStationManger()\n    passengerTrain := &passengerTrain{\n        mediator: stationManager,\n    }\n    goodsTrain := &goodsTrain{\n        mediator: stationManager,\n    }\n    passengerTrain.requestArrival()\n    goodsTrain.requestArrival()\n    passengerTrain.departure()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">PassengerTrain: Landing\nGoodsTrain: Waiting\nPassengerTrain: Leaving\nGoodsTrain: Arrival Permitted. Landing<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:Practical ExampleFull Working&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[25,3,85],"class_list":["post-680","post","type-post","status-publish","format-standard","hentry","category-tech","tag-design-pattern","tag-go","tag-mediator"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Mediator Design Pattern in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Mediator Design Pattern in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:Practical ExampleFull Working...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-11-28T20:01:50+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-12-27T16:38:23+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/\",\"name\":\"Mediator Design Pattern in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2019-11-28T20:01:50+00:00\",\"dateModified\":\"2019-12-27T16:38:23+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Mediator Design Pattern in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Mediator Design Pattern in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/","og_locale":"en_US","og_type":"article","og_title":"Mediator Design Pattern in Go (Golang) - Welcome To Golang By Example","og_description":"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:Practical ExampleFull Working...","og_url":"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-11-28T20:01:50+00:00","article_modified_time":"2019-12-27T16:38:23+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/","url":"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/","name":"Mediator Design Pattern in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2019-11-28T20:01:50+00:00","dateModified":"2019-12-27T16:38:23+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/mediator-design-pattern-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Mediator Design Pattern in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-aY","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/680","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=680"}],"version-history":[{"count":6,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/680\/revisions"}],"predecessor-version":[{"id":1029,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/680\/revisions\/1029"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=680"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=680"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=680"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}