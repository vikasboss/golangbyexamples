{"id":6325,"date":"2021-09-16T12:46:11","date_gmt":"2021-09-16T07:16:11","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=6325"},"modified":"2021-09-16T12:47:22","modified_gmt":"2021-09-16T07:17:22","slug":"sort-array-one-zero-two-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/","title":{"rendered":"Sort an array of 0, 1, and 2 in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/#First_Approach_-_Using_count\" title=\"First Approach &#8211; Using count\">First Approach &#8211; Using count<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/#Second_Approach_-_Using_switch_and_shuffling\" title=\"Second Approach - Using switch and shuffling\">Second Approach - Using switch and shuffling<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color has-large-font-size wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">The objective is to sort an array of 0,1 and 2 with all 0&#8217;s at the start, all 1&#8217;s in the middle, and all 2&#8217;s in the end. The Space Complexity of the solution should be O(1) which means that you should not allocate any extra space in terms of the input size of the given array<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Eg<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Input: [0, 1, 2, 0, 1]\nOutput: [0, 0, 1, 1, 2]\n\nInput: [1, 0]\nOutput: [0, 1]<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">There are two ways of solving this problem<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>First Approach:<\/strong> We can iterate over the array and can keep the count of 0&#8217;s, 1&#8217;s, and 2&#8217;s. Once we have the count, iterate again over the array and assign that number of 0&#8217;s at first then the number of 1&#8217;s, and then the number of 2&#8217;s.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Second approach: <\/strong>In the second approach we can have three indexes<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>low initialized to 0<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>mid initialized to 0<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>high initialized to length of input array minus one<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Now iterate over the array for the mid position<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>If we encounter a 0 we move it to the left at position <strong>low<\/strong>. Increment <strong>low<\/strong> and <strong>mid<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>If we encounter a 1 we simply do <strong>mid++<\/strong><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>If we encounter a 2 we simply move it to right at position <strong>high<\/strong>. Decrement <strong>high<\/strong><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Here are the programs for the same<\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color has-large-font-size wp-block-heading\"><span class=\"ez-toc-section\" id=\"First_Approach_-_Using_count\"><\/span><strong>First Approach &#8211; Using count<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n\tsortNums([]int{2, 0, 2, 1, 1, 0})\n}\n\nfunc sortNums(nums []int) {\n\tzeroCount := 0\n\toneCount := 0\n\ttwoCount := 0\n\n\tfor i := 0; i < len(nums); i++ {\n\t\tswitch nums[i] {\n\t\tcase 0:\n\t\t\tzeroCount++\n\t\tcase 1:\n\t\t\toneCount++\n\t\tcase 2:\n\t\t\ttwoCount++\n\t\t}\n\t}\n\tcounter := 0\n\tfor i := 0; i < zeroCount; i++ {\n\t\tnums[counter] = 0\n\t\tcounter++\n\t}\n\tfor i := 0; i < oneCount; i++ {\n\t\tnums[counter] = 1\n\t\tcounter++\n\t}\n\tfor i := 0; i < twoCount; i++ {\n\t\tnums[counter] = 2\n\t\tcounter++\n\t}\n\tfmt.Println(nums)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">[0 0 1 1 2 2]<\/code><\/pre>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color has-large-font-size wp-block-heading\"><span class=\"ez-toc-section\" id=\"Second_Approach_-_Using_switch_and_shuffling\"><\/span><strong>Second Approach - Using switch and shuffling<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n\tsortNums([]int{2, 0, 2, 1, 1, 0})\n}\n\nfunc sortNums(nums []int) {\n\tlow := 0\n\tmid := 0\n\thigh := len(nums) - 1\n\n\tfor mid <= high {\n\n\t\tswitch nums[mid] {\n\t\tcase 0:\n\t\t\tnums[low], nums[mid] = nums[mid], nums[low]\n\t\t\tlow++\n\t\t\tmid++\n\t\tcase 1:\n\t\t\tmid++\n\t\tcase 2:\n\t\t\tnums[mid], nums[high] = nums[high], nums[mid]\n\t\t\thigh--\n\t\t}\n\t}\n\tfmt.Println(nums)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">[0 0 1 1 2 2]<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Note: <\/strong>Check out our Golang Advanced Tutorial. The tutorials in this series are elaborative and we have tried to cover all concepts with examples. This tutorial is for those who are looking to gain expertise and a solid understanding of golang - <a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Advance Tutorial<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Also if you are interested in understanding how all design patterns can be implemented in Golang. If yes, then this post is for you -<a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns Golang<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewFirst Approach &#8211; Using countSecond Approach &#8211; Using switch and shuffling Overview The objective is to sort an array of 0,1 and 2 with all 0&#8217;s at the start,&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-6325","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Sort an array of 0, 1, and 2 in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Sort an array of 0, 1, and 2 in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewFirst Approach &#8211; Using countSecond Approach - Using switch and shuffling Overview The objective is to sort an array of 0,1 and 2 with all 0&#8217;s at the start,...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-09-16T07:16:11+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-09-16T07:17:22+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/\",\"name\":\"Sort an array of 0, 1, and 2 in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-09-16T07:16:11+00:00\",\"dateModified\":\"2021-09-16T07:17:22+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Sort an array of 0, 1, and 2 in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Sort an array of 0, 1, and 2 in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/","og_locale":"en_US","og_type":"article","og_title":"Sort an array of 0, 1, and 2 in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewFirst Approach &#8211; Using countSecond Approach - Using switch and shuffling Overview The objective is to sort an array of 0,1 and 2 with all 0&#8217;s at the start,...","og_url":"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-09-16T07:16:11+00:00","article_modified_time":"2021-09-16T07:17:22+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/","url":"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/","name":"Sort an array of 0, 1, and 2 in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-09-16T07:16:11+00:00","dateModified":"2021-09-16T07:17:22+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/sort-array-one-zero-two-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Sort an array of 0, 1, and 2 in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1E1","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/6325","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=6325"}],"version-history":[{"count":1,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/6325\/revisions"}],"predecessor-version":[{"id":6326,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/6325\/revisions\/6326"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=6325"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=6325"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=6325"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}