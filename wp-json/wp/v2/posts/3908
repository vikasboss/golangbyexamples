{"id":3908,"date":"2020-08-15T22:56:04","date_gmt":"2020-08-15T17:26:04","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=3908"},"modified":"2020-08-15T22:56:15","modified_gmt":"2020-08-15T17:26:15","slug":"receive-all-values-channel-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/","title":{"rendered":"Read\/receive all values from a channel in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/#Code\" title=\"Code\">Code<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">For range loop can be used to receive data from the channel until it is closed.\u00a0Do note that for- range loop will keep receiving from the channel the only way for range look to exit is to close the channel.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see a program to understand it.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Code\"><\/span><strong>Code<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\tch := make(chan int)\n\tch <- 2\n\tch <- 2\n\tch <- 2\n\tclose(ch)\n\tsum(ch)\n\ttime.Sleep(time.Second * 1)\n}\n\nfunc sum(ch chan int) {\n\tsum := 0\n\tfor val := range ch {\n\t\tsum += val\n\t}\n\tfmt.Printf(\"Sum: %d\\n\", sum)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Sum: 6<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">\u00a0In the above program,\u00a0 we created a channel.\u00a0\u00a0In the main function the send three values to the channel and after that, we closed the channel. Then we called the sum function and we passed the channel to that function. In the sum function, we did a for range loop over the channel.\u00a0\u00a0 \u00a0After iterating over all the values in the channel the for range loop will exit\u00a0 since the channel is closed<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Now the question which comes to the mind is that what happens if you don't close a channel in the main function.\u00a0 Try commenting the line in which they are closing the channel. Now run the program.\u00a0 It will also\u00a0output\u00a0 deadlock because\u00a0 for range loop will never finish in the sum function<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fatal error: all goroutines are asleep - deadlock!<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In case we need to receive fixed number of vales from a channel before the channel is closed then we can also use a for loop. Let's see an example for it<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    ch := make(chan int, 3)\n    ch <- 2\n    ch <- 2\n    ch <- 2\n    close(ch)\n    sum(ch)\n    time.Sleep(time.Second * 1)\n}\n\nfunc sum(ch chan int) {\n    sum := 0\n    for i := 0; i < 2; i++ {\n        val := <-ch\n        sum += val\n    }\n    fmt.Printf(\"Sum: %d\\n\", sum)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Sum: 4<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, we have a\u00a0 buffered channel of capacity 3. We are sending 3 values to the channel in the main function. In the sum function, we have a for loop in which we are iterating two times and receiving only two values from the channel and adding it up. For loop is only useful in case we want to receive a fixed number of values from the channel<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewCode Overview For range loop can be used to receive data from the channel until it is closed.\u00a0Do note that for- range loop will keep receiving from the channel&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-3908","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Read\/receive all values from a channel in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Read\/receive all values from a channel in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewCode Overview For range loop can be used to receive data from the channel until it is closed.\u00a0Do note that for- range loop will keep receiving from the channel...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-08-15T17:26:04+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-08-15T17:26:15+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/\",\"name\":\"Read\/receive all values from a channel in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-08-15T17:26:04+00:00\",\"dateModified\":\"2020-08-15T17:26:15+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Read\/receive all values from a channel in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Read\/receive all values from a channel in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/","og_locale":"en_US","og_type":"article","og_title":"Read\/receive all values from a channel in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewCode Overview For range loop can be used to receive data from the channel until it is closed.\u00a0Do note that for- range loop will keep receiving from the channel...","og_url":"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-08-15T17:26:04+00:00","article_modified_time":"2020-08-15T17:26:15+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/","url":"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/","name":"Read\/receive all values from a channel in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-08-15T17:26:04+00:00","dateModified":"2020-08-15T17:26:15+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/receive-all-values-channel-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Read\/receive all values from a channel in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-112","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3908","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=3908"}],"version-history":[{"count":1,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3908\/revisions"}],"predecessor-version":[{"id":3909,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3908\/revisions\/3909"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=3908"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=3908"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=3908"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}