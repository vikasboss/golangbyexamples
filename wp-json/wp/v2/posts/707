{"id":707,"date":"2019-11-30T09:33:49","date_gmt":"2019-11-30T09:33:49","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=707"},"modified":"2019-12-27T16:38:49","modified_gmt":"2019-12-27T16:38:49","slug":"golang-factory-design-pattern","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/","title":{"rendered":"Factory Design Pattern in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference  &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns in Go (Golang)<\/a><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#Introduction\" title=\"Introduction:&nbsp; \">Introduction:&nbsp; <\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#UML_Diagram\" title=\"UML Diagram:\">UML Diagram:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#Mapping\" title=\"Mapping:\">Mapping:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#Example\" title=\"Example:&nbsp; \">Example:&nbsp; <\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#Full_Working_Code\" title=\"Full Working Code:\">Full Working Code:<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Introduction\"><\/span><strong>Introduction:&nbsp; <\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Factory design pattern is a creational design pattern and it is also one of the most commonly used pattern. This pattern provides a way to hide the creation logic of the instances being created.<br>The client only interacts with a factory struct and tells the kind of instances that needs to be created. The factory class interacts with the corresponding concrete structs and returns the correct instance back.<br>In below example <\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>We have <strong>iGun<\/strong> interface which defines all methods a gun should have<\/li><li>There is <strong>gun<\/strong> struct that implements the <strong>iGun<\/strong> interface.<\/li><li>Two concrete guns <strong>ak47<\/strong> and <strong>maverick<\/strong>. Both embed <strong>gun<\/strong> struct and hence also indirectly implement all methods of <strong>iGun<\/strong> and hence are of <strong>iGun<\/strong> type<\/li><li> We have a <strong>gunFactory<\/strong> struct which creates the gun of type <strong>ak47<\/strong> or <strong>maverick<\/strong>. <\/li><li>The <strong>main.go<\/strong> acts as a client and instead of directly interacting with <strong>ak47<\/strong> or <strong>maverick<\/strong>, it relies on <strong>gunFactory<\/strong> to create instances of <strong>ak47<\/strong> and <strong>maverick<\/strong><\/li><\/ul>\n\n\n\n<p><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"UML_Diagram\"><\/span><strong>UML Diagram:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"320\" src=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg?resize=640%2C320&#038;ssl=1\" alt=\"\" class=\"wp-image-708\" srcset=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg?w=807&amp;ssl=1 807w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg?resize=300%2C150&amp;ssl=1 300w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg?resize=768%2C384&amp;ssl=1 768w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p class=\"has-medium-font-size\">Below is the corresponding mapping UML diagram with the example given above<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"640\" height=\"415\" src=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-2.jpg?resize=640%2C415&#038;ssl=1\" alt=\"\" class=\"wp-image-709\" srcset=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-2.jpg?w=809&amp;ssl=1 809w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-2.jpg?resize=300%2C195&amp;ssl=1 300w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-2.jpg?resize=768%2C498&amp;ssl=1 768w\" sizes=\"auto, (max-width: 640px) 100vw, 640px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Mapping\"><\/span><strong>Mapping:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">The below table represents the mapping from the UML diagram actors to actual implementation actors in <strong>&#8220;Example&#8221;<\/strong> below<\/p>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table class=\"has-subtle-pale-blue-background-color has-background\"><tbody><tr><td>ProductFactory<\/td><td>gunFactory.go<\/td><\/tr><tr><td>iProduct<\/td><td>iGun.go<\/td><\/tr><tr><td>Product<\/td><td>gun.go<\/td><\/tr><tr><td>Concrete iProduct 1<\/td><td>ak47go<\/td><\/tr><tr><td>Concrete iProduct 1<\/td><td>maverick.go<\/td><\/tr><tr><td>Client<\/td><td>main.go<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Example\"><\/span><strong>Example:&nbsp; <\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>iGun.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype iGun interface {\n    setName(name string)\n    setPower(power int)\n    getName() string\n    getPower() int\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>gun.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype gun struct {\n    name  string\n    power int\n}\n\nfunc (g *gun) setName(name string) {\n    g.name = name\n}\n\nfunc (g *gun) getName() string {\n    return g.name\n}\n\nfunc (g *gun) setPower(power int) {\n    g.power = power\n}\n\nfunc (g *gun) getPower() int {\n    return g.power\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>ak47.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype ak47 struct {\n    gun\n}\n\nfunc newAk47() iGun {\n    return &ak47{\n        gun: gun{\n            name:  \"AK47 gun\",\n            power: 4,\n        },\n    }\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>maverick.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype maverick struct {\n    gun\n}\n\nfunc newMaverick() iGun {\n    return &maverick{\n        gun: gun{\n            name:  \"Maverick gun\",\n            power: 5,\n        },\n    }\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>gunFactory.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc getGun(gunType string) (iGun, error) {\n    if gunType == \"ak47\" {\n        return newAk47(), nil\n    }\n    if gunType == \"maverick\" {\n        return newMaverick(), nil\n    }\n    return nil, fmt.Errorf(\"Wrong gun type passed\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    ak47, _ := getGun(\"ak47\")\n    maverick, _ := getGun(\"maverick\")\n    printDetails(ak47)\n    printDetails(maverick)\n}\n\nfunc printDetails(g iGun) {\n    fmt.Printf(\"Gun: %s\", g.getName())\n    fmt.Println()\n    fmt.Printf(\"Power: %d\", g.getPower())\n    fmt.Println()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Gun: AK47 gun\nPower: 4\nGun: Maverick gun\nPower: 5<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Full_Working_Code\"><\/span><strong>Full Working Code:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype iGun interface {\n    setName(name string)\n    setPower(power int)\n    getName() string\n    getPower() int\n}\n\ntype gun struct {\n    name  string\n    power int\n}\n\nfunc (g *gun) setName(name string) {\n    g.name = name\n}\n\nfunc (g *gun) getName() string {\n    return g.name\n}\n\nfunc (g *gun) setPower(power int) {\n    g.power = power\n}\n\nfunc (g *gun) getPower() int {\n    return g.power\n}\n\ntype ak47 struct {\n    gun\n}\n\nfunc newAk47() iGun {\n    return &ak47{\n        gun: gun{\n            name:  \"AK47 gun\",\n            power: 4,\n        },\n    }\n}\n\ntype maverick struct {\n    gun\n}\n\nfunc newMaverick() iGun {\n    return &maverick{\n        gun: gun{\n            name:  \"Maverick gun\",\n            power: 5,\n        },\n    }\n}\n\nfunc getGun(gunType string) (iGun, error) {\n    if gunType == \"ak47\" {\n        return newAk47(), nil\n    }\n    if gunType == \"maverick\" {\n        return newMaverick(), nil\n    }\n    return nil, fmt.Errorf(\"Wrong gun type passed\")\n}\n\nfunc main() {\n    ak47, _ := getGun(\"ak47\")\n    maverick, _ := getGun(\"maverick\")\n    printDetails(ak47)\n    printDetails(maverick)\n}\n\nfunc printDetails(g iGun) {\n    fmt.Printf(\"Gun: %s\", g.getName())\n    fmt.Println()\n    fmt.Printf(\"Power: %d\", g.getPower())\n    fmt.Println()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Gun: AK47 gun\nPower: 4\nGun: Maverick gun\nPower: 5<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:&nbsp; UML Diagram:Mapping:Example:&nbsp;&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[89,3,27],"class_list":["post-707","post","type-post","status-publish","format-standard","hentry","category-tech","tag-factory","tag-go","tag-pattern"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Factory Design Pattern in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Factory Design Pattern in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:&nbsp; UML Diagram:Mapping:Example:&nbsp;...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-11-30T09:33:49+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-12-27T16:38:49+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/\",\"url\":\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/\",\"name\":\"Factory Design Pattern in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg\",\"datePublished\":\"2019-11-30T09:33:49+00:00\",\"dateModified\":\"2019-12-27T16:38:49+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Factory Design Pattern in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Factory Design Pattern in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/","og_locale":"en_US","og_type":"article","og_title":"Factory Design Pattern in Go (Golang) - Welcome To Golang By Example","og_description":"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:&nbsp; UML Diagram:Mapping:Example:&nbsp;...","og_url":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-11-30T09:33:49+00:00","article_modified_time":"2019-12-27T16:38:49+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/","url":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/","name":"Factory Design Pattern in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg","datePublished":"2019-11-30T09:33:49+00:00","dateModified":"2019-12-27T16:38:49+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Factory-Design-Pattern-1.jpg"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/golang-factory-design-pattern\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Factory Design Pattern in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-bp","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/707","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=707"}],"version-history":[{"count":6,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/707\/revisions"}],"predecessor-version":[{"id":1033,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/707\/revisions\/1033"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=707"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=707"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=707"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}