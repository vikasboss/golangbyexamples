{"id":344,"date":"2019-11-04T06:11:45","date_gmt":"2019-11-04T06:11:45","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=344"},"modified":"2019-12-27T16:37:41","modified_gmt":"2019-12-27T16:37:41","slug":"composite-design-pattern-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/","title":{"rendered":"Composite Design Pattern in Go (GoLang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference  &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns in Go (Golang)<\/a><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#Definition\" title=\"Definition:&nbsp; \">Definition:&nbsp; <\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#When_to_Use\" title=\" When to Use\"> When to Use<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#UML_Diagram\" title=\"UML Diagram\">UML Diagram<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#Mapping\" title=\"Mapping&nbsp;\">Mapping&nbsp;<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#Practical_Example\" title=\"Practical Example \">Practical Example <\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Definition\"><\/span><strong>Definition:&nbsp; <\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">This is a structural design pattern. Composition design pattern is used when we want a Group of objects called &#8216;composite&#8217; is treated in a similar way as a single object. It comes under structural design pattern as it allows you to compose objects into a tree structure. Each of the individual objects in the tree structure can be treated in the same way irrespective of whether they are Complex or Primitive. <br> Let&#8217;s try to understand it with an example of a file system of OS. In the file system, there are two types of objects <strong>File<\/strong> and <strong>Folder. <\/strong>There are cases when File and Folder are treated to be the same way. It will be more clear as we go along.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"When_to_Use\"><\/span><br><strong>When to Use<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Composite Design pattern makes sense to use in cases when the composite and individual object needs to be treated in the same way from a client perspective. <\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#8211; In our example above of the file system, let&#8217;s say search operation of a particular keyword needs to be executed. Now, this search operation applies to both <strong>File <\/strong>and <strong>Folder. <\/strong>For a <strong>File,<\/strong> it will just look into the contents of the file and for a <strong>Folder,<\/strong> it will go through all files in the hierarchy in that folder to find that keyword<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Use this pattern when the composite and individual object form a tree-like structure<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#8211;&nbsp; In our example, <strong>File <\/strong>and <strong>Folder <\/strong>do form a tree structure<br><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"UML_Diagram\"><\/span><strong>UML Diagram<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>Component<\/strong> &#8211; It is the interface which defines the common operations for both the <strong>Composite<\/strong> and <strong>Leaf<\/strong> objects<\/li><li><strong>Composite &#8211; <\/strong>It implements <strong>Component<\/strong> interface and embeds an array of child <strong>Components<\/strong><\/li><li><strong>Leaf &#8211; <\/strong>it is the primitive object in the tree. It also implements the <strong>Component<\/strong> Interface<\/li><\/ul>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" decoding=\"async\" width=\"537\" height=\"401\" src=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg?resize=537%2C401&#038;ssl=1\" alt=\"\" class=\"wp-image-346\" srcset=\"https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg?w=537&amp;ssl=1 537w, https:\/\/i2.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg?resize=300%2C224&amp;ssl=1 300w\" sizes=\"auto, (max-width: 537px) 100vw, 537px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<p class=\"has-medium-font-size\">Below is the corresponding mapping UML diagram with the example given above<\/p>\n\n\n\n<figure class=\"wp-block-image\"><img loading=\"lazy\" decoding=\"async\" width=\"537\" height=\"401\" src=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-2.jpg?resize=537%2C401&#038;ssl=1\" alt=\"\" class=\"wp-image-348\" srcset=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-2.jpg?w=537&amp;ssl=1 537w, https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-2.jpg?resize=300%2C224&amp;ssl=1 300w\" sizes=\"auto, (max-width: 537px) 100vw, 537px\" data-recalc-dims=\"1\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Mapping\"><\/span><strong>Mapping&nbsp;<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">The below table represents the mapping from the UML diagram actors to actual implementation actors in code.<\/p>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table class=\"has-subtle-pale-blue-background-color has-background\"><tbody><tr><td>Component interface<\/td><td>component.go<\/td><\/tr><tr><td>Composite<\/td><td>folder.go<\/td><\/tr><tr><td>Leaf<\/td><td>file.go<\/td><\/tr><tr><td>client<\/td><td>main.go<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Practical_Example\"><\/span><strong>Practical Example <\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">In the<strong> <\/strong>example below <strong>component<\/strong> is the&nbsp;interface and <strong>file<\/strong> and <strong>folder<\/strong> implement this interface<strong>.<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>component.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype component interface {\n    search(string)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>folder.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype folder struct {\n    components []component\n    name       string\n}\n\nfunc (f *folder) search(keyword string) {\n    fmt.Printf(\"Serching recursively for keyword %s in folder %s\\n\", keyword, f.name)\n    for _, composite := range f.components {\n        composite.search(keyword)\n    }\n}\n\nfunc (f *folder) add(c component) {\n    f.components = append(f.components, c)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>file.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype file struct {\n    name string\n}\n\nfunc (f *file) search(keyword string) {\n    fmt.Printf(\"Searching for keyword %s in file %s\\n\", keyword, f.name)\n}\n\nfunc (f *file) getName() string {\n    return f.name\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nfunc main() {\n    file1 := &file{name: \"File1\"}\n    file2 := &file{name: \"File2\"}\n    file3 := &file{name: \"File3\"}\n    folder1 := &folder{\n        name: \"Folder1\",\n    }\n    folder1.add(file1)\n    folder2 := &folder{\n        name: \"Folder2\",\n    }\n    folder2.add(file2)\n    folder2.add(file3)\n    folder2.add(folder1)\n    folder2.search(\"rose\")\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Serching recursively for keyword rose in folder Folder2\nSearching for keyword rose in file File2\nSearching for keyword rose in file File3\nSerching recursively for keyword rose in folder Folder1\nSearching for keyword rose in file File1<\/code><\/pre>\n\n\n\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[52,53,54,25,3,4],"class_list":["post-344","post","type-post","status-publish","format-standard","hentry","category-tech","tag-composite-design-pattern","tag-composite-design-pattern-in-go","tag-composite-design-pattern-in-golang","tag-design-pattern","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Composite Design Pattern in Go (GoLang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Composite Design Pattern in Go (GoLang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-11-04T06:11:45+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-12-27T16:37:41+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/\",\"name\":\"Composite Design Pattern in Go (GoLang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg\",\"datePublished\":\"2019-11-04T06:11:45+00:00\",\"dateModified\":\"2019-12-27T16:37:41+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Composite Design Pattern in Go (GoLang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Composite Design Pattern in Go (GoLang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/","og_locale":"en_US","og_type":"article","og_title":"Composite Design Pattern in Go (GoLang) - Welcome To Golang By Example","og_description":"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Definition:&nbsp; When to...","og_url":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-11-04T06:11:45+00:00","article_modified_time":"2019-12-27T16:37:41+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/","url":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/","name":"Composite Design Pattern in Go (GoLang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg","datePublished":"2019-11-04T06:11:45+00:00","dateModified":"2019-12-27T16:37:41+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Composite-Design-Pattern-1.jpg"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/composite-design-pattern-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Composite Design Pattern in Go (GoLang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-5y","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/344","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=344"}],"version-history":[{"count":9,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/344\/revisions"}],"predecessor-version":[{"id":1019,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/344\/revisions\/1019"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=344"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=344"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=344"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}