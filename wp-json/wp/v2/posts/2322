{"id":2322,"date":"2020-06-20T21:12:35","date_gmt":"2020-06-20T15:42:35","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=2322"},"modified":"2020-06-20T21:12:54","modified_gmt":"2020-06-20T15:42:54","slug":"iterate-over-a-string-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/","title":{"rendered":"Iterate over a string in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">In Golang string is a sequence of bytes. A string literal actually represents a UTF-8 sequence of bytes. In UTF-8, ASCII characters are single-byte corresponding to the first 128 Unicode characters.\u00a0All other characters are between 1 -4 bytes. To understand it more consider the below string<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">sameple := \"a\u00a3c\"<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In above string<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>&#8216;a&#8217; takes one byte as per UTF-8<\/li><li>&#8216;\u00a3&#8217; takes two bytes as per UTF-8<\/li><li>&#8216;b&#8217; takes one byte as per UTF-8<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">The above string has 1+2+1 = 4 bytes altogether. Therefore when we try to print the length of the string using the standard <strong>len()<\/strong> function it will output 4 and not 3 as <strong>len()<\/strong> function returns the number of bytes in the string.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">fmt.Printf(\"Length is %d\\n\", len(sample))<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Hence standalone for loop cannot be used to iterate over all characters of a string as it will iterate over bytes and not character. So below <strong>for<\/strong> loop will instead iterate four times and the print value corresponding to a byte at that index.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\"> for i := 0; i < len(sample); i++ {\n    fmt.Printf(\"%c\\n\", sample[i])\n }<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">It will output below string which is not same as <strong>sample <\/strong>string<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">a\u00c2\u00a3b<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Not we have mentioned the above limitation of using len() function and for loop, let's see two ways of calculating the length of the string.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Using for-range loop<\/li><li>By converting string to a rune array.<\/li><\/ul>\n\n\n\n<p class=\"has-large-font-size\"><strong>Using for-range loop<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">for-rage iterates over the Unicode points( also referred to as rune in golang) in a string and will correctly output\u00a0 a, \u00a3, b. Hence it can also be used to calculate the length of the string. Here is the format when using for-range with string<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">for index, character := range string {\n    \/\/Do something with index and character\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Sample code<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    sample := \"a\u00a3b\"\n  \n    for i, letter := range sample {\n        fmt.Printf(\"Start Index: %d Value:%s\\n\", i, string(letter))\n    }\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Start Index: 0 Value:a\nStart Index: 1 Value:\u00a3\nStart Index: 3 Value:b<\/code><\/pre>\n\n\n\n<p class=\"has-large-font-size\"><strong>By converting string to rune array<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">A rune represents a Unicode Point. By converting a string to rune array basically it is same as creating an array of Unicode Points of that string. Therefore once the string is converted into the rune array, it can be used to iterate over all characters of the string.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    sample := \"a\u00a3b\"\n    runeSample := []rune(sample)\n    fmt.Printf(\"Length of given string is %d\\n\", len(runeSample))\n    \/\/Iterate\n    for i := 0; i < len(runeSample); i++ {\n        fmt.Println(string(runeSample[i]))\n    }\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Length of given string is 3\na\n\u00a3\nb<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>In Golang string is a sequence of bytes. A string literal actually represents a UTF-8 sequence of bytes. In UTF-8, ASCII characters are single-byte corresponding to the first 128 Unicode characters.\u00a0All other&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,300,149],"class_list":["post-2322","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-iterate","tag-string"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Iterate over a string in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Iterate over a string in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"In Golang string is a sequence of bytes. A string literal actually represents a UTF-8 sequence of bytes. In UTF-8, ASCII characters are single-byte corresponding to the first 128 Unicode characters.\u00a0All other...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-06-20T15:42:35+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-06-20T15:42:54+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/\",\"name\":\"Iterate over a string in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-06-20T15:42:35+00:00\",\"dateModified\":\"2020-06-20T15:42:54+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Iterate over a string in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Iterate over a string in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/","og_locale":"en_US","og_type":"article","og_title":"Iterate over a string in Go (Golang) - Welcome To Golang By Example","og_description":"In Golang string is a sequence of bytes. A string literal actually represents a UTF-8 sequence of bytes. In UTF-8, ASCII characters are single-byte corresponding to the first 128 Unicode characters.\u00a0All other...","og_url":"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-06-20T15:42:35+00:00","article_modified_time":"2020-06-20T15:42:54+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/","url":"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/","name":"Iterate over a string in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-06-20T15:42:35+00:00","dateModified":"2020-06-20T15:42:54+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/iterate-over-a-string-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Iterate over a string in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-Bs","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2322","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=2322"}],"version-history":[{"count":2,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2322\/revisions"}],"predecessor-version":[{"id":2324,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2322\/revisions\/2324"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=2322"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=2322"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=2322"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}