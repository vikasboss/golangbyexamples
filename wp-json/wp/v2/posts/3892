{"id":3892,"date":"2020-08-14T22:31:33","date_gmt":"2020-08-14T17:01:33","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=3892"},"modified":"2020-08-14T22:33:07","modified_gmt":"2020-08-14T17:03:07","slug":"channel-direction-go","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/channel-direction-go\/","title":{"rendered":"Channel Direction in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/channel-direction-go\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/channel-direction-go\/#Only_Send_to_Channel\" title=\"Only Send to Channel\">Only Send to Channel<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/channel-direction-go\/#Only_Receive_from_Channel\" title=\"Only Receive from Channel\">Only Receive from Channel<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">It is possible to create\u00a0bidirectional as well as uni-directional channels in golang. A channel can be created to which we can only send data, as well as a channel, can be created from which we can only receive data. This is determined by the direction of the arrow of the channel. The direction of the arrow for a channel specifies the direction of flow of data<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>chan<\/strong>\u00a0 :bidirectional channel (Both read and write)<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>chan &lt;-<\/strong>\u00a0 :only writing to channel<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>&lt;- chan<\/strong>\u00a0 :only reading from channel (input channel)\u00a0 \u00a0\u00a0<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong>\u00a0A channel to which we can only send data.\u00a0<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">This is the syntax for\u00a0 such a channel<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">chan<- int<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>A channel from which we can only send data<\/strong><\/p>\n\n\n\n<p class=\"has-medium-font-size\">This is the syntax for\u00a0such a channel<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\"><-chan int<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Now the question is, why would you want to create a channel through to which you can only send data or from which we can only receive data.&nbsp; This comes in handy while passing the channel to a function where we want to restrict the&nbsp; function too either&nbsp; send the data or receiver rate<\/p>\n\n\n\n<p class=\"has-medium-font-size\">There are many ways in which a channel can be passed as a function argument.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>chan<\/strong>&nbsp; :bidirectional channel (Both read and write)<\/li><li><strong>chan &lt;-<\/strong>&nbsp; :only writing to channel<\/li><li><strong>&lt;- chan<\/strong>&nbsp; :only reading from channel (input channel)&nbsp; &nbsp;&nbsp;<\/li><\/ul>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Only_Send_to_Channel\"><\/span><strong>Only Send to Channel<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<ul class=\"wp-block-list\"><li>Signature of the such a\u00a0 channel to which only you can send,\u00a0 will be like below when passed to a function as an argument.<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func process(ch chan<- int){ \/\/doSomething }<\/code><\/pre>\n\n\n\n<ul class=\"wp-block-list\"><li>When trying to receive data from such a channel will give below error.<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">invalid operation: <-ch (receive from send-only type chan<- int)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Try uncommenting below line in the code to see the above error<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">s := <-ch<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Code:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nimport \"fmt\"\nfunc main() {\n    ch := make(chan int, 3)\n    process(ch)\n    fmt.Println(<-ch)\n}\nfunc process(ch chan<- int) {\n    ch <- 2\n    \/\/s := <-ch\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"> <strong>Output: <\/strong>2<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Only_Receive_from_Channel\"><\/span><strong>Only Receive from Channel<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<ul class=\"wp-block-list\"><li>Signature of the such a\u00a0 channel from which you can only receive data, will be like below\u00a0 when passed to a function as an argument<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func process(ch <-chan int){ \/\/doSomething }<\/code><\/pre>\n\n\n\n<ul class=\"wp-block-list\"><li>When trying to send data to such a channel will give below error.<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">invalid operation: ch <- 2 (send to receive-only type <-chan int)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Try uncommenting below line in the code to see the above error<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">ch <- 2<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Code:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    ch := make(chan int, 3)\n    ch <- 2\n    process(ch)\n    fmt.Println()\n}\n\nfunc process(ch <-chan int) {\n    s := <-ch\n    fmt.Println(s)\n    \/\/ch <- 2\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output: <\/strong>2<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewOnly Send to ChannelOnly Receive from Channel Overview It is possible to create\u00a0bidirectional as well as uni-directional channels in golang. A channel can be created to which we can&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3,4],"class_list":["post-3892","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go","tag-golang"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Channel Direction in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/channel-direction-go\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Channel Direction in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewOnly Send to ChannelOnly Receive from Channel Overview It is possible to create\u00a0bidirectional as well as uni-directional channels in golang. A channel can be created to which we can...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/channel-direction-go\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-08-14T17:01:33+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-08-14T17:03:07+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/channel-direction-go\/\",\"url\":\"https:\/\/golangbyexamples.com\/channel-direction-go\/\",\"name\":\"Channel Direction in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-08-14T17:01:33+00:00\",\"dateModified\":\"2020-08-14T17:03:07+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/channel-direction-go\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/channel-direction-go\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/channel-direction-go\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Channel Direction in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Channel Direction in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/channel-direction-go\/","og_locale":"en_US","og_type":"article","og_title":"Channel Direction in Go (Golang) - Welcome To Golang By Example","og_description":"Table of Contents OverviewOnly Send to ChannelOnly Receive from Channel Overview It is possible to create\u00a0bidirectional as well as uni-directional channels in golang. A channel can be created to which we can...","og_url":"https:\/\/golangbyexamples.com\/channel-direction-go\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-08-14T17:01:33+00:00","article_modified_time":"2020-08-14T17:03:07+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/channel-direction-go\/","url":"https:\/\/golangbyexamples.com\/channel-direction-go\/","name":"Channel Direction in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-08-14T17:01:33+00:00","dateModified":"2020-08-14T17:03:07+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/channel-direction-go\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/channel-direction-go\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/channel-direction-go\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Channel Direction in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-10M","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3892","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=3892"}],"version-history":[{"count":3,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3892\/revisions"}],"predecessor-version":[{"id":3899,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/3892\/revisions\/3899"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=3892"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=3892"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=3892"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}