{"id":2557,"date":"2020-07-18T16:51:53","date_gmt":"2020-07-18T11:21:53","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=2557"},"modified":"2020-07-18T16:52:04","modified_gmt":"2020-07-18T11:22:04","slug":"embedding-interfaces-go","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/","title":{"rendered":"Embedding Interfaces in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">An interface can be embedded in another interface as well as it can be embedded in a struct. Let&#8217;s look at each one by one<\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/#Embedding_interface_in_another_interface\" title=\"Embedding interface in another interface\">Embedding interface in another interface<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/#Embedding_interface_in_a_struct\" title=\"Embedding interface in a struct\">Embedding interface in a struct<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Embedding_interface_in_another_interface\"><\/span><strong>Embedding interface in another interfa<\/strong>ce<span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">An interface can embed any number of interfaces in it as well as it can be embedded in any interface. All the methods of the embedded interface become part of the embedding interface. It is a way of creating a new interface by merging some small interfaces. Let&#8217;s understand it with an example<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Assume we have an interface <strong>animal<\/strong> as below<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type animal interface {\n    breathe()\n    walk()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s say there is another interface named <strong>human <\/strong>which embeds the <strong>animal<\/strong> interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type human interface {\n    animal\n    speak()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">So if any type needs to implement the <strong>human<\/strong> interface, then it has to define<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>breathe()<\/strong> and <strong>walk()<\/strong> method of animal interfaces animal is\u00a0 embedded in human<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>speak()<\/strong> method of human interface<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype animal interface {\n\tbreathe()\n\twalk()\n}\n\ntype human interface {\n\tanimal\n\tspeak()\n}\n\ntype employee struct {\n\tname string\n}\n\nfunc (e employee) breathe() {\n\tfmt.Println(\"Employee breathes\")\n}\n\nfunc (e employee) walk() {\n\tfmt.Println(\"Employee walk\")\n}\n\nfunc (e employee) speak() {\n\tfmt.Println(\"Employee speaks\")\n}\n\nfunc main() {\n\tvar h human\n\n\th = employee{name: \"John\"}\n\th.breathe()\n\th.walk()\n\th.speak()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Employee breathes\nEmployee walk\nEmployee speaks<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">As another example, the ReaderWriter interface of the <strong>io<\/strong> package of golang (<a href=\"https:\/\/golang.org\/pkg\/io\/#ReadWriter\">https:\/\/golang.org\/pkg\/io\/#ReadWriter<\/a>) embeds two other interfaces<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The reader interface\u00a0 &#8211; <a href=\"https:\/\/golang.org\/pkg\/io\/#Reader\">https:\/\/golang.org\/pkg\/io\/#Reader<\/a><\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>The writer interface\u00a0\u00a0 &#8211; <a href=\"https:\/\/golang.org\/pkg\/io\/#Writer\">https:\/\/golang.org\/pkg\/io\/#Writer<\/a><\/li><\/ul>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type ReadWriter interface {\n    Reader\n    Writer\n}<\/code><\/pre>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Embedding_interface_in_a_struct\"><\/span><strong>Embedding interface in a struct<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">An interface can be embedded in a struct as well.\u00a0 All the methods of the embedded interface can be called via that struct. How these methods will be called will depend upon whether the embedded interface is a named field or an unnamed\/anonymous field.\u00a0<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>If the embedded interface is a named field, then interface methods have to be called via the named interface name<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>If the embedded interface is unnamed\/anonymous field then interface methods can be referred directly or via the interface name<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see a program illustrating above points<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype animal interface {\n    breathe()\n    walk()\n}\n\ntype dog struct {\n    age int\n}\n\nfunc (d dog) breathe() {\n    fmt.Println(\"Dog breathes\")\n}\n\nfunc (d dog) walk() {\n    fmt.Println(\"Dog walk\")\n}\n\ntype pet1 struct {\n    a    animal\n    name string\n}\n\ntype pet2 struct {\n    animal\n    name string\n}\n\nfunc main() {\n    d := dog{age: 5}\n    p1 := pet1{name: \"Milo\", a: d}\n\n    fmt.Println(p1.name)\n    \/\/ p1.breathe()\n    \/\/ p1.walk()\n    p1.a.breathe()\n    p1.a.walk()\n\n    p2 := pet2{name: \"Oscar\", animal: d}\n    fmt.Println(p1.name)\n    p2.breathe()\n    p2.walk()\n    p1.a.breathe()\n    p1.a.walk()\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Milo\nDog breathes\nDod walk\n\nOscar\nDog breathes\nDog walk\nDog breathes\nDog walk<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We declared two struct <strong>pet1<\/strong> and <strong>pet2<\/strong>.\u00a0 <strong>pet1<\/strong> struct has named <strong>animal<\/strong> interface in it<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type pet1 struct {\n    a    animal\n    name string\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>pet2<\/strong> has unnamed\/anonymous <strong>animal<\/strong> interface embedded<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type pet2 struct {\n    animal\n    name string\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">For an instance of <strong>pet1<\/strong> struct we call the <strong>breathe()<\/strong> and <strong>walk()<\/strong> method like this<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">p1.a.breathe()\np1.a.walk()<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Directly calling these methods with raise compilation error<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">\/\/p1.breathe()\n\/\/p1.walk()<\/code><\/pre>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">p1.breathe undefined (type pet1 has no field or method breathe)\np1.walk undefined (type pet1 has no field or method walk)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">For an instance of <strong>pet2<\/strong> struct we can call the <strong>breathe()<\/strong> and <strong>walk()<\/strong> method like directly<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">p2.breathe()\np2.walk()<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We can directly access the methods of embedded interface if the embedded interface is anonymous or unnamed.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below is also valid and another way fo called methods of unnamed\/anonymous embedded interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">p2.animal.breathe()\np2.animal.walk()<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Also note that while creating the instance of either the <strong>pet1<\/strong> or <strong>pet2<\/strong> struct, the embedded interface i.e <strong>animal<\/strong> is initialised with a type implementing\u00a0 it i.e <strong>dog<\/strong> .<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">p1 := pet1{name: \"Milo\", a: d}\np2 := pet2{name: \"Oscar\", animal: d}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">If we don&#8217;t initialise the embedded interface <strong>animal<\/strong>, then it will be intialised with the zero value of the interface which is nil. Calling <strong>breathe() <\/strong>and <strong>walk()<\/strong> method\u00a0 on such an instance of pet1 or pet2 struct will create a panic.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>An interface can be embedded in another interface as well as it can be embedded in a struct. Let&#8217;s look at each one by one Table of Contents Embedding interface in another&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[3],"class_list":["post-2557","post","type-post","status-publish","format-standard","hentry","category-tech","tag-go"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Embedding Interfaces in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Embedding Interfaces in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"An interface can be embedded in another interface as well as it can be embedded in a struct. Let&#8217;s look at each one by one Table of Contents Embedding interface in another...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-07-18T11:21:53+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-07-18T11:22:04+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/\",\"url\":\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/\",\"name\":\"Embedding Interfaces in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-07-18T11:21:53+00:00\",\"dateModified\":\"2020-07-18T11:22:04+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Embedding Interfaces in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Embedding Interfaces in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/","og_locale":"en_US","og_type":"article","og_title":"Embedding Interfaces in Go (Golang) - Welcome To Golang By Example","og_description":"An interface can be embedded in another interface as well as it can be embedded in a struct. Let&#8217;s look at each one by one Table of Contents Embedding interface in another...","og_url":"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-07-18T11:21:53+00:00","article_modified_time":"2020-07-18T11:22:04+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"3 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/","url":"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/","name":"Embedding Interfaces in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-07-18T11:21:53+00:00","dateModified":"2020-07-18T11:22:04+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/embedding-interfaces-go\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/embedding-interfaces-go\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Embedding Interfaces in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-Ff","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2557","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=2557"}],"version-history":[{"count":2,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2557\/revisions"}],"predecessor-version":[{"id":2565,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/2557\/revisions\/2565"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=2557"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=2557"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=2557"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}