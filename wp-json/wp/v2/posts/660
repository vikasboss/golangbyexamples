{"id":660,"date":"2019-11-28T17:50:20","date_gmt":"2019-11-28T17:50:20","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=660"},"modified":"2019-12-27T16:38:09","modified_gmt":"2019-12-27T16:38:09","slug":"null-object-design-pattern-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/","title":{"rendered":"Null Object Design Pattern in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference  &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns in Go (Golang)<\/a><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/#Introduction\" title=\"Introduction:\">Introduction:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/#Full_Working_Code\" title=\"Full Working Code:\">Full Working Code:<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Introduction\"><\/span><strong>Introduction:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Null Object Design Pattern is a behavioral design pattern. It is useful when the client code relies upon some dependency which can be null. Using this design pattern prevents clients from having to put null checks on the result of these dependencies. With that said, it should also be noted that client behavior is also fine with such null dependencies.&nbsp;<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Main components of the Null Object Design Pattern are:<\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li><strong>Entity<\/strong> &#8211; it is the interface which defines primitive operations that child structs have to implement<\/li><li><strong>ConcreteEntity<\/strong> &#8211; it implements the entity interface<\/li><li><strong>NullEntity<\/strong> &#8211; it represents the null object. It also implements the entity interface but has null properties<\/li><li><strong>Client<\/strong> &#8211; the client gets the implementation of the entity interface and uses it. It doesn&#8217;t really care if the implementation is of ConcreteEntity or NullEntity. It treats both of them as same.<\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s consider an example. Assume we have a college with many departments with each department having some number of professors.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>department<\/strong> is represented by an interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type department interface {\n    getNumberOfProfessors() int\n    getName() string\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">where as <strong>college<\/strong> is represented as <\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type college struct {\n    departments []department\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Now let&#8217;s say that there is an agency that wants to calculate the total number of professors for a particular college for specific departments only.&nbsp; We will use the Null Object Design Pattern for this use case where a college will return a nullDepartment object (see <strong>nullDepartment.go<\/strong>) if a department doesn&#8217;t exists in college.<br>Notice the code in agency.go<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>agency.go<\/strong> doesn&#8217;t even care whether a particular department exists in college or not. <strong>college<\/strong> returns a null department object if that department doesn&#8217;t exist in the college. <\/li><li>It treats nullDepartment and real Department as same so null checks are avoided. It calls <strong>getNumberOfProfessors()<\/strong> on both the objects.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Above are two advantages that we get by using nullObject design pattern for this case. See the below code<\/p>\n\n\n\n<p><\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>agency.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    college1 := createCollege1()\n    college2 := createCollege2()\n    totalProfessors := 0\n    departmentArray := []string{\"computerscience\", \"mechanical\", \"civil\", \"electronics\"}\n    \n    for _, deparmentName := range departmentArray {\n        d := college1.getDepartment(deparmentName)\n        totalProfessors += d.getNumberOfProfessors()\n    }\n    \n    fmt.Printf(\"Total number of professors in college1 is %d\\n\", totalProfessors)\n\n    \/\/Reset the professor count\n    totalProfessors := 0\n    for _, deparmentName := range departmentArray {\n        d := college2.getDepartment(deparmentName)\n        totalProfessors += d.getNumberOfProfessors()\n    }\n    fmt.Printf(\"Total number of professors in college2 is %d\\n\", totalProfessors)\n}\n\nfunc createCollege1() *college {\n    college := &college{}\n    college.addDepartment(\"computerscience\", 4)\n    college.addDepartment(\"mechanical\", 5)\n    return college\n}\n\nfunc createCollege2() *college {\n    college := &college{}\n    college.addDepartment(\"computerscience\", 2)\n    return college\n}\n<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>college.go &#8211; <\/strong>represents the college<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype college struct {\n    departments []department\n}\n\nfunc (c *college) addDepartment(departmentName string, numOfProfessors int) {\n    if departmentName == \"computerscience\" {\n        computerScienceDepartment := &computerscience{numberOfProfessors: numOfProfessors}\n        c.departments = append(c.departments, computerScienceDepartment)\n    }\n    if departmentName == \"mechanical\" {\n        mechanicalDepartment := &mechanical{numberOfProfessors: numOfProfessors}\n        c.departments = append(c.departments, mechanicalDepartment)\n    }\n    return\n}\n\nfunc (c *college) getDepartment(departmentName string) department {\n    for _, department := range c.departments {\n        if department.getName() == departmentName {\n            return department\n        }\n    }\n    \/\/Return a null department if the department doesn't exits\n    return &nullDepartment{}\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>department.go &#8211; <\/strong>It represents the department interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype department interface {\n    getNumberOfProfessors() int\n    getName() string\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>computerscience.go &#8211; <\/strong>Concrete implementation of department interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype computerscience struct {\n    numberOfProfessors int\n}\n\nfunc (c *computerscience) getNumberOfProfessors() int {\n    return c.numberOfProfessors\n}\n\nfunc (c *computerscience) getName() string {\n    return \"computerscience\"\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>mechanical.go &#8211; <\/strong>Concrete implementation of department interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype mechanical struct {\n    numberOfProfessors int\n}\n\nfunc (c *mechanical) getNumberOfProfessors() int {\n    return c.numberOfProfessors\n}\n\nfunc (c *mechanical) getName() string {\n    return \"mechanical\"\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>nullDepartment.go <\/strong>&#8211; nullObject implementation of the department interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype nullDepartment struct {\n    numberOfProfessors int\n}\n\nfunc (c *nullDepartment) getNumberOfProfessors() int {\n    return 0\n}\n\nfunc (c *nullDepartment) getName() string {\n    return \"nullDepartment\"\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Total number of professors in college1 is 9\nTotal number of professors in college2 is 2<\/code><\/pre>\n\n\n\n<p><\/p>\n\n\n\n<p><\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Full_Working_Code\"><\/span><strong>Full Working Code:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype college struct {\n    departments []department\n}\n\nfunc (c *college) addDepartment(departmentName string, numOfProfessors int) {\n    if departmentName == \"computerscience\" {\n        computerScienceDepartment := &computerscience{numberOfProfessors: numOfProfessors}\n        c.departments = append(c.departments, computerScienceDepartment)\n    }\n    if departmentName == \"mechanical\" {\n        mechanicalDepartment := &mechanical{numberOfProfessors: numOfProfessors}\n        c.departments = append(c.departments, mechanicalDepartment)\n    }\n    return\n}\n\nfunc (c *college) getDepartment(departmentName string) department {\n    for _, department := range c.departments {\n        if department.getName() == departmentName {\n            return department\n        }\n    }\n    \/\/Return a null department if the department doesn't exits\n    return &nullDepartment{}\n}\n\ntype department interface {\n    getNumberOfProfessors() int\n    getName() string\n}\n\ntype computerscience struct {\n    numberOfProfessors int\n}\n\nfunc (c *computerscience) getNumberOfProfessors() int {\n    return c.numberOfProfessors\n}\n\nfunc (c *computerscience) getName() string {\n    return \"computerscience\"\n}\n\ntype mechanical struct {\n    numberOfProfessors int\n}\n\nfunc (c *mechanical) getNumberOfProfessors() int {\n    return c.numberOfProfessors\n}\n\nfunc (c *mechanical) getName() string {\n    return \"mechanical\"\n}\n\ntype nullDepartment struct {\n    numberOfProfessors int\n}\n\nfunc (c *nullDepartment) getNumberOfProfessors() int {\n    return 0\n}\n\nfunc (c *nullDepartment) getName() string {\n    return \"nullDepartment\"\n}\n\nfunc main() {\n    college1 := createCollege1()\n    college2 := createCollege2()\n    totalProfessors := 0\n    departmentArray := []string{\"computerscience\", \"mechanical\", \"civil\", \"electronics\"}\n    for _, deparmentName := range departmentArray {\n        d := college1.getDepartment(deparmentName)\n        totalProfessors += d.getNumberOfProfessors()\n    }\n    fmt.Printf(\"Total number of professors in college1 is %d\\n\", totalProfessors)\n    totalProfessors = 0\n    for _, deparmentName := range departmentArray {\n        d := college2.getDepartment(deparmentName)\n        totalProfessors += d.getNumberOfProfessors()\n    }\n    fmt.Printf(\"Total number of professors in college2 is %d\\n\", totalProfessors)\n}\n\nfunc createCollege1() *college {\n    college := &college{}\n    college.addDepartment(\"computerscience\", 4)\n    college.addDepartment(\"mechanical\", 5)\n    return college\n}\n\nfunc createCollege2() *college {\n    college := &college{}\n    college.addDepartment(\"computerscience\", 2)\n    return college\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Total number of professors in college1 is 9\nTotal number of professors in college2 is 2<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:Full Working Code:&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[4,81],"class_list":["post-660","post","type-post","status-publish","format-standard","hentry","category-tech","tag-golang","tag-null-object-design-pattern-in-go"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Null Object Design Pattern in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Null Object Design Pattern in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:Full Working Code:...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-11-28T17:50:20+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-12-27T16:38:09+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/\",\"name\":\"Null Object Design Pattern in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2019-11-28T17:50:20+00:00\",\"dateModified\":\"2019-12-27T16:38:09+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Null Object Design Pattern in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Null Object Design Pattern in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/","og_locale":"en_US","og_type":"article","og_title":"Null Object Design Pattern in Go (Golang) - Welcome To Golang By Example","og_description":"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:Full Working Code:...","og_url":"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-11-28T17:50:20+00:00","article_modified_time":"2019-12-27T16:38:09+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/","url":"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/","name":"Null Object Design Pattern in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2019-11-28T17:50:20+00:00","dateModified":"2019-12-27T16:38:09+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/null-object-design-pattern-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Null Object Design Pattern in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-aE","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/660","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=660"}],"version-history":[{"count":5,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/660\/revisions"}],"predecessor-version":[{"id":1028,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/660\/revisions\/1028"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=660"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=660"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=660"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}