{"id":599,"date":"2019-11-16T17:29:05","date_gmt":"2019-11-16T17:29:05","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=599"},"modified":"2019-12-27T16:37:56","modified_gmt":"2019-12-27T16:37:56","slug":"proxy-design-pattern-in-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/","title":{"rendered":"Proxy Design Pattern in Go (Golang)"},"content":{"rendered":"\n<p class=\"has-medium-font-size\">Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference  &#8211; <a href=\"https:\/\/golangbyexamples.com\/all-design-patterns-golang\/\">All Design Patterns in Go (Golang)<\/a><\/p>\n\n\n\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#Introduction\" title=\"Introduction:&nbsp;\">Introduction:&nbsp;<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#UML_Diagram\" title=\"UML Diagram:\">UML Diagram:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#Mapping\" title=\"Mapping&nbsp;\">Mapping&nbsp;<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#Practical_Example\" title=\"Practical Example:\">Practical Example:<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#Full_Working_Code\" title=\"Full Working Code:\">Full Working Code:<\/a><\/li><\/ul><\/nav><\/div>\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Introduction\"><\/span><strong>Introduction:&nbsp;<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">Proxy Design Pattern is a structural design pattern. This pattern suggests providing an extra layer of indirection for controlled and intelligent access to the main object.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><br>In this pattern, a new proxy class is created that implements the same interface as the main object. This lets you execute some behavior before the actual logic of the main object. Let&#8217;s understand it more with an example<br><\/p>\n\n\n\n<ol class=\"has-medium-font-size wp-block-list\"><li>A debit card is a proxy for your bank account. It follows the same interface as the bank account, and it is easier to use.<\/li><li>A web server such as Nginx can act as a proxy for your application server. It provides<ul><li>Controlled access to your application server &#8211; For example, it can do rate limiting<\/li><li>Additional behavior &#8211; For example, it can do some caching<\/li><\/ul><\/li><\/ol>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;ss see the UML Diagram<\/p>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"UML_Diagram\"><\/span><strong>UML Diagram:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">In below UML diagram<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>Subject: <\/strong>it represents the interface which proxy and the realSubject should follow<\/li><li><strong>Proxy<\/strong>: The proxy class embeds the realSubject and passes on the request to the realSubject after it has finished its processing <\/li><li><strong>RealSubject<\/strong>: This is the class that holds the main business logic and which is kept behind a proxy<\/li><li><strong>Client: <\/strong>Can interact with both proxy and realSubject as they both follow the same interface.<\/li><\/ul>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-1 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"535\" height=\"253\" src=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg?resize=535%2C253&#038;ssl=1\" alt=\"\" data-id=\"643\" data-full-url=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg?fit=535%2C253&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/proxy-design-pattern-1\/\" class=\"wp-image-643\" srcset=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg?w=535&amp;ssl=1 535w, https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg?resize=300%2C142&amp;ssl=1 300w\" sizes=\"auto, (max-width: 535px) 100vw, 535px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<p class=\"has-medium-font-size\">Below is the corresponding mapping UML diagram with the practical example of nginx and application server which was described above.<\/p>\n\n\n\n<figure class=\"wp-block-gallery columns-1 is-cropped wp-block-gallery-2 is-layout-flex wp-block-gallery-is-layout-flex\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" decoding=\"async\" width=\"535\" height=\"253\" src=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-2.jpg?resize=535%2C253&#038;ssl=1\" alt=\"\" data-id=\"644\" data-full-url=\"https:\/\/i0.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-2.jpg?fit=535%2C253&amp;ssl=1\" data-link=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/proxy-design-pattern-2\/\" class=\"wp-image-644\" srcset=\"https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-2.jpg?w=535&amp;ssl=1 535w, https:\/\/i1.wp.com\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-2.jpg?resize=300%2C142&amp;ssl=1 300w\" sizes=\"auto, (max-width: 535px) 100vw, 535px\" data-recalc-dims=\"1\" \/><\/figure><\/li><\/ul><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Mapping\"><\/span><strong>Mapping&nbsp;<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><br>The below table represents the mapping from the UML diagram actors to actual implementation actors in code<br><\/p>\n\n\n\n<figure class=\"wp-block-table is-style-stripes\"><table class=\"has-subtle-pale-blue-background-color has-background\"><tbody><tr><td>subject<\/td><td>server.go<\/td><\/tr><tr><td>proxy<\/td><td>nginx.go<\/td><\/tr><tr><td>realSubject<\/td><td>application.go<\/td><\/tr><tr><td>client<\/td><td>main.go<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Practical_Example\"><\/span><strong>Practical Example:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\"><strong>server.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype server interface {\n    handleRequest(string, string) (int, string)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>nginx.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype nginx struct {\n    application       *application\n    maxAllowedRequest int\n    rateLimiter       map[string]int\n}\n\nfunc newNginxServer() *nginx {\n    return &nginx{\n        application:       &application{},\n        maxAllowedRequest: 2,\n        rateLimiter:       make(map[string]int),\n    }\n}\n\nfunc (n *nginx) handleRequest(url, method string) (int, string) {\n    allowed := n.checkRateLimiting(url)\n    if !allowed {\n        return 403, \"Not Allowed\"\n    }\n    return n.application.handleRequest(url, method)\n}\n\nfunc (n *nginx) checkRateLimiting(url string) bool {\n    if n.rateLimiter[url] == 0 {\n        n.rateLimiter[url] = 1\n    }\n    if n.rateLimiter[url] > n.maxAllowedRequest {\n        return false\n    }\n    n.rateLimiter[url] = n.rateLimiter[url] + 1\n    return true\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>application.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\ntype application struct {\n}\n\nfunc (a *application) handleRequest(url, method string) (int, string) {\n    if url == \"\/app\/status\" && method == \"GET\" {\n        return 200, \"Ok\"\n    }\n    if url == \"\/create\/user\" && method == \"POST\" {\n        return 201, \"User Created\"\n    }\n    return 404, \"Not Ok\"\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>main.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n    nginxServer := newNginxServer()\n    appStatusURL := \"\/app\/status\"\n    createuserURL := \"\/create\/user\"\n    httpCode, body := nginxServer.handleRequest(appStatusURL, \"GET\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n    httpCode, body = nginxServer.handleRequest(appStatusURL, \"GET\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n    httpCode, body = nginxServer.handleRequest(appStatusURL, \"GET\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n    httpCode, body = nginxServer.handleRequest(createuserURL, \"POST\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n    httpCode, body = nginxServer.handleRequest(createuserURL, \"GET\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Url: \/app\/status\nHttpCode: 200\nBody: Ok\n\nUrl: \/app\/status\nHttpCode: 200\nBody: Ok\n\nUrl: \/app\/status\nHttpCode: 403\nBody: Not Allowed\n\nUrl: \/app\/status\nHttpCode: 201\nBody: User Created\n\nUrl: \/app\/status\nHttpCode: 404\nBody: Not Ok<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Full_Working_Code\"><\/span><strong>Full Working Code:<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport \"fmt\"\n\ntype server interface {\n    handleRequest(string, string) (int, string)\n}\n\ntype nginx struct {\n    application       *application\n    maxAllowedRequest int\n    rateLimiter       map[string]int\n}\n\nfunc newNginxServer() *nginx {\n    return &nginx{\n        application:       &application{},\n        maxAllowedRequest: 2,\n        rateLimiter:       make(map[string]int),\n    }\n}\n\nfunc (n *nginx) handleRequest(url, method string) (int, string) {\n    allowed := n.checkRateLimiting(url)\n    if !allowed {\n        return 403, \"Not Allowed\"\n    }\n    return n.application.handleRequest(url, method)\n}\n\nfunc (n *nginx) checkRateLimiting(url string) bool {\n    if n.rateLimiter[url] == 0 {\n        n.rateLimiter[url] = 1\n    }\n    if n.rateLimiter[url] > n.maxAllowedRequest {\n        return false\n    }\n    n.rateLimiter[url] = n.rateLimiter[url] + 1\n    return true\n}\n\ntype application struct {\n}\n\nfunc (a *application) handleRequest(url, method string) (int, string) {\n    if url == \"\/app\/status\" && method == \"GET\" {\n        return 200, \"Ok\"\n    }\n    if url == \"\/create\/user\" && method == \"POST\" {\n        return 201, \"User Created\"\n    }\n    return 404, \"Not Ok\"\n}\n\nfunc main() {\n    nginxServer := newNginxServer()\n    appStatusURL := \"\/app\/status\"\n    createuserURL := \"\/create\/user\"\n    httpCode, body := nginxServer.handleRequest(appStatusURL, \"GET\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n    httpCode, body = nginxServer.handleRequest(appStatusURL, \"GET\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n    httpCode, body = nginxServer.handleRequest(appStatusURL, \"GET\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n    httpCode, body = nginxServer.handleRequest(createuserURL, \"POST\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n    httpCode, body = nginxServer.handleRequest(createuserURL, \"GET\")\n    fmt.Printf(\"\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n\", appStatusURL, httpCode, body)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Url: \/app\/status\nHttpCode: 200\nBody: Ok\n\nUrl: \/app\/status\nHttpCode: 200\nBody: Ok\n\nUrl: \/app\/status\nHttpCode: 403\nBody: Not Allowed\n\nUrl: \/app\/status\nHttpCode: 201\nBody: User Created\n\nUrl: \/app\/status\nHttpCode: 404\nBody: Not Ok<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:&nbsp;UML Diagram:Mapping&nbsp;Practical Example:Full&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[25,3,4,71],"class_list":["post-599","post","type-post","status-publish","format-standard","hentry","category-tech","tag-design-pattern","tag-go","tag-golang","tag-proxy-design-pattern"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Proxy Design Pattern in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Proxy Design Pattern in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:&nbsp;UML Diagram:Mapping&nbsp;Practical Example:Full...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2019-11-16T17:29:05+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-12-27T16:37:56+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"4 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/\",\"name\":\"Proxy Design Pattern in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#primaryimage\"},\"image\":{\"@id\":\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#primaryimage\"},\"thumbnailUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg\",\"datePublished\":\"2019-11-16T17:29:05+00:00\",\"dateModified\":\"2019-12-27T16:37:56+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/\"]}]},{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#primaryimage\",\"url\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg\",\"contentUrl\":\"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg\"},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Proxy Design Pattern in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Proxy Design Pattern in Go (Golang) - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/","og_locale":"en_US","og_type":"article","og_title":"Proxy Design Pattern in Go (Golang) - Welcome To Golang By Example","og_description":"Note: Interested in understanding how all other design patterns can be implemented in GO. Please see this full reference &#8211; All Design Patterns in Go (Golang) Table of Contents Introduction:&nbsp;UML Diagram:Mapping&nbsp;Practical Example:Full...","og_url":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2019-11-16T17:29:05+00:00","article_modified_time":"2019-12-27T16:37:56+00:00","og_image":[{"url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg"}],"author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"4 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/","url":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/","name":"Proxy Design Pattern in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"primaryImageOfPage":{"@id":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#primaryimage"},"image":{"@id":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#primaryimage"},"thumbnailUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg","datePublished":"2019-11-16T17:29:05+00:00","dateModified":"2019-12-27T16:37:56+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#primaryimage","url":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg","contentUrl":"https:\/\/golangbyexamples.com\/wp-content\/uploads\/2019\/11\/Proxy-Design-Pattern-1.jpg"},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/proxy-design-pattern-in-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Proxy Design Pattern in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-9F","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/599","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=599"}],"version-history":[{"count":4,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/599\/revisions"}],"predecessor-version":[{"id":1025,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/599\/revisions\/1025"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=599"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=599"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=599"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}