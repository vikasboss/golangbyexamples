{"id":1249,"date":"2020-01-31T16:33:25","date_gmt":"2020-01-31T16:33:25","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=1249"},"modified":"2020-01-31T17:08:37","modified_gmt":"2020-01-31T17:08:37","slug":"parse-time-in-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/parse-time-in-golang\/","title":{"rendered":"Parse Time in Golang"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-1\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/#Code\" title=\"Code\">Code<\/a><\/li><\/ul><\/nav><\/div>\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Parse<\/strong> function of <strong>time<\/strong> package in golang can be used to parse the string representation of time into <strong>time.Time <\/strong>object <\/p>\n\n\n\n<p class=\"has-medium-font-size\">Package link &#8211; <a href=\"https:\/\/golang.org\/pkg\/time\/#Parse\">https:\/\/golang.org\/pkg\/time\/#Parse<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">If you have worked with time\/date formatting\/parsing in other languages you might have noticed that the other languages use special placeholders for time\/date formatting. For eg ruby language uses<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>%d for day<\/li><li>%Y for year<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">etc. Golang, instead of using codes such as above, uses date and time format placeholders that look like date and time only. Go uses standard time, which is:<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Mon Jan 2 15:04:05 MST 2006  (MST is GMT-0700)\nor \n01\/02 03:04:05PM '06 -0700<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">So if you notice Go uses <\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>01 for the day of the month, <\/li><li>02 for the month <\/li><li>03 for hours, <\/li><li>04 for minutes <\/li><li>05 for second <\/li><li>and so on <\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Below placeholder table describes the exact mapping. Go takes a more pragmatic approach where you don&#8217;t need to remember or lookup for the traditional formatting codes as in other languages<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table class=\"has-subtle-pale-blue-background-color has-background\"><tbody><tr><td><strong>Type<\/strong><\/td><td><strong>Placeholder<\/strong><\/td><\/tr><tr><td>Day<\/td><td><strong>2<\/strong> or <strong>02<\/strong> or <strong>_2<\/strong><\/td><\/tr><tr><td>Day of Week<\/td><td><strong>Monday<\/strong> or <strong>Mon<\/strong><\/td><\/tr><tr><td>Month<\/td><td><strong>01<\/strong> or <strong>1<\/strong> or <strong>Jan<\/strong> or <strong>January<\/strong><\/td><\/tr><tr><td>Year<\/td><td><strong>2006<\/strong> or <strong>06<\/strong><\/td><\/tr><tr><td>Hour<\/td><td><strong>03<\/strong> or <strong>3 <\/strong>or <strong>15<\/strong><\/td><\/tr><tr><td>Minutes<\/td><td><strong>04<\/strong> or <strong>4<\/strong><\/td><\/tr><tr><td>Seconds<\/td><td><strong>05<\/strong> or <strong>5<\/strong><\/td><\/tr><tr><td>Milli Seconds&nbsp; (ms)<\/td><td><strong>.000&nbsp; &nbsp; &nbsp; &nbsp; <\/strong>\/\/Trailing zero will be includedor<strong> .999 <\/strong>&nbsp; \/\/Trailing zero will be omitted<\/td><\/tr><tr><td>Micro Seconds (\u03bcs)<\/td><td><strong>.000000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <\/strong>\/\/Trailing zero will be includedor <strong>.999999<\/strong>&nbsp; &nbsp; &nbsp; &nbsp; \/\/Trailing zero will be omitted<\/td><\/tr><tr><td>Nano Seconds (ns)<\/td><td><strong>.000000000&nbsp; &nbsp; &nbsp; &nbsp; <\/strong>\/\/Trailing zero will be includedor <strong>.999999999 <\/strong> \/\/Trailing zero will be omitted<\/td><\/tr><tr><td>am\/pm<\/td><td><strong>PM<\/strong> or <strong>pm<\/strong><\/td><\/tr><tr><td>Timezone<\/td><td><strong>MST<\/strong><\/td><\/tr><tr><td>Timezone offset<\/td><td><strong> Z0700 <\/strong>or<strong> Z070000<\/strong> or <strong>Z07<\/strong> or <strong>Z07:00<\/strong> or <strong>Z07:00:00<\/strong>&nbsp; or <strong>-0700<\/strong> or&nbsp; <strong>-070000<\/strong> or <strong>-07<\/strong> or <strong>-07:00<\/strong> or <strong>-07:00:00<\/strong><\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<p class=\"has-medium-font-size\">Now coming back to time.Parse<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>time.Parse<\/strong> function takes in two arguments<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>First argument is the layout consisting of time format placeholder<\/li><li>Second argument is the actual formatted string representing time.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">The way you have to go about this is to make sure that the layout string (first argument ) matches the string representation (second argument) of the time you want to parse into time.Time. <\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>For parsing <strong>2020-01-29<\/strong>, layout string should be <strong>06-01-02 <\/strong>or<strong> 2006-01-02<\/strong> or something which maps correctly based on the above placeholder table.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Similarly for parsing <strong>&#8220;2020-Jan-29 Wednesday 12:19:25&#8221;<\/strong> the layout string can be <strong>&#8220;2006-Jan-02 Monday 03:04:05&#8221;<\/strong><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\"><strong>time.Parse<\/strong> will raise an error if it encounters an error while parsing time.<\/p>\n\n\n\n<h1 class=\"wp-block-heading\"><span class=\"ez-toc-section\" id=\"Code\"><\/span><strong>Code<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h1>\n\n\n\n<p class=\"has-medium-font-size\">Below are the working Code Examples of <strong>time.Parse(). <\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    \/\/Parse YYYY-MM-DD\n    timeT, _ := time.Parse(\"2006-01-02\", \"2020-01-29\")\n    fmt.Println(timeT)\n\n    \/\/Parse YY-MM-DD\n    timeT, _ = time.Parse(\"06-01-02\", \"20-01-29\")\n    fmt.Println(timeT)\n\n    \/\/Parse YYYY-#{MonthName}-DD\n    timeT, _ = time.Parse(\"2006-Jan-02\", \"2020-Jan-29\")\n    fmt.Println(timeT)\n\n    \/\/Parse YYYY-#{MonthName}-DD WeekDay HH:MM:SS\n    timeT, _ = time.Parse(\"2006-Jan-02 Monday 03:04:05\", \"2020-Jan-29 Wednesday 12:19:25\")\n    fmt.Println(timeT)\n\n    \/\/Parse YYYY-#{MonthName}-DD WeekDay HH:MM:SS PM Timezone TimezoneOffset\n    timeT, _ = time.Parse(\"2006-Jan-02 Monday 03:04:05 PM MST -07:00\", \"2020-Jan-29 Wednesday 12:19:25 AM IST +05:30\")\n    fmt.Println(timeT)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output:<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">2020-01-29 00:00:00 +0000 UTC\n2020-01-29 00:00:00 +0000 UTC\n2020-01-29 00:00:00 +0000 UTC\n2020-01-29 12:19:25 +0000 UTC\n2020-01-29 00:19:25 +0530 IST<\/code><\/pre>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewCode Overview Parse function of time package in golang can be used to parse the string representation of time into time.Time object Package link &#8211; https:\/\/golang.org\/pkg\/time\/#Parse If you have&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-1249","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Parse Time in Golang - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Parse Time in Golang - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewCode Overview Parse function of time package in golang can be used to parse the string representation of time into time.Time object Package link &#8211; https:\/\/golang.org\/pkg\/time\/#Parse If you have...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2020-01-31T16:33:25+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-01-31T17:08:37+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/\",\"name\":\"Parse Time in Golang - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2020-01-31T16:33:25+00:00\",\"dateModified\":\"2020-01-31T17:08:37+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/parse-time-in-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Parse Time in Golang\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Parse Time in Golang - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/parse-time-in-golang\/","og_locale":"en_US","og_type":"article","og_title":"Parse Time in Golang - Welcome To Golang By Example","og_description":"Table of Contents OverviewCode Overview Parse function of time package in golang can be used to parse the string representation of time into time.Time object Package link &#8211; https:\/\/golang.org\/pkg\/time\/#Parse If you have...","og_url":"https:\/\/golangbyexamples.com\/parse-time-in-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2020-01-31T16:33:25+00:00","article_modified_time":"2020-01-31T17:08:37+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/parse-time-in-golang\/","url":"https:\/\/golangbyexamples.com\/parse-time-in-golang\/","name":"Parse Time in Golang - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2020-01-31T16:33:25+00:00","dateModified":"2020-01-31T17:08:37+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/parse-time-in-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/parse-time-in-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/parse-time-in-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Parse Time in Golang"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-k9","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1249","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=1249"}],"version-history":[{"count":5,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1249\/revisions"}],"predecessor-version":[{"id":1256,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/1249\/revisions\/1256"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=1249"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=1249"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=1249"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}