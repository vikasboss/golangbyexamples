{"id":5532,"date":"2021-04-28T11:35:11","date_gmt":"2021-04-28T06:05:11","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5532"},"modified":"2021-04-28T11:35:19","modified_gmt":"2021-04-28T06:05:19","slug":"set-cookie-http-golang","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/","title":{"rendered":"Set cookie http in Go (Golang)"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#Overview\" title=\"Overview\">Overview<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#Set_cookie_for_one_of_the_request\" title=\"Set cookie for one of the request\">Set cookie for one of the request<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#Set_cookie_and_send_that_cookie_for_all_requests_to_that_domain\" title=\"Set cookie and send that cookie for all requests to that domain\">Set cookie and send that cookie for all requests to that domain<\/a><ul class=\"ez-toc-list-level-3\"><li class=\"ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-4\" href=\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#Client\" title=\"Client\">Client<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-5\" href=\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#Server\" title=\"Server\">Server<\/a><\/li><\/ul><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color has-large-font-size wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">A cookie in golang is represented as below in golang<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golang.org\/src\/net\/http\/cookie.go\">https:\/\/golang.org\/src\/net\/http\/cookie.go<\/a><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type Cookie struct {\n\tName  string\n\tValue string\n\n\tPath       string    \/\/ optional\n\tDomain     string    \/\/ optional\n\tExpires    time.Time \/\/ optional\n\tRawExpires string    \/\/ for reading cookies only\n\n\t\/\/ MaxAge=0 means no 'Max-Age' attribute specified.\n\t\/\/ MaxAge<0 means delete cookie now, equivalently 'Max-Age: 0'\n\t\/\/ MaxAge>0 means Max-Age attribute present and given in seconds\n\tMaxAge   int\n\tSecure   bool\n\tHttpOnly bool\n\tSameSite SameSite\n\tRaw      string\n\tUnparsed []string \/\/ Raw text of unparsed attribute-value pairs\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">See <a href=\"https:\/\/tools.ietf.org\/html\/rfc6265\">https:\/\/tools.ietf.org\/html\/rfc6265<\/a> for details of each of the fields of the above cookie.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">When it comes to the setting of cookies, there are two cases<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>You want to set cookie only for one of the requests for a particular domain<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>You want to set cookies and you want that cookie to be sent for all requests to that domain.<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">The second use case is needed\u00a0when let&#8217;s say you generate an authentication token in the first call by entering username and password, and you want that token to be passed in each subsequent call in the cookie. We will use a cookie jar for this use case.\u00a0<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see both the use cases one by one.\u00a0<\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color has-large-font-size wp-block-heading\"><span class=\"ez-toc-section\" id=\"Set_cookie_for_one_of_the_request\"><\/span><strong>Set cookie for one of the request<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">This is the case where golang acts as an HTTP client. <strong>AddCookie<\/strong> method of <strong>net\/http<\/strong> package can be used add a cookie. If we call this method for two different names and value,\u00a0 then both that name and value will be added to the resultant cookie<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\nimport (\n    \"fmt\"\n    \"log\"\n    \"net\/http\"\n    \"net\/http\/cookiejar\"\n)\nvar client http.Client\nfunc init() {\n    jar, err := cookiejar.New(nil)\n    if err != nil {\n        log.Fatalf(\"Got error while creating cookie jar %s\", err.Error())\n    }\n    client = http.Client{\n        Jar: jar,\n    }\n}\nfunc main() {\n    cookie := &http.Cookie{\n        Name:   \"token\",\n        Value:  \"some_token\",\n        MaxAge: 300,\n    }\n    cookie2 := &http.Cookie{\n        Name:   \"clicked\",\n        Value:  \"true\",\n        MaxAge: 300,\n    }\n    req, err := http.NewRequest(\"GET\", \"http:\/\/google.com\", nil)\n    if err != nil {\n        log.Fatalf(\"Got error %s\", err.Error())\n    }\n    req.AddCookie(cookie)\n    req.AddCookie(cookie2)\n    for _, c := range req.Cookies() {\n        fmt.Println(c)\n    }\n    resp, err := client.Do(req)\n    if err != nil {\n        log.Fatalf(\"Error occured. Error is: %s\", err.Error())\n    }\n    defer resp.Body.Close()\n    fmt.Printf(\"StatusCode: %d\\n\", resp.StatusCode)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">token=some_token\nclicked=true\nStatusCode: 200<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We first need to create the instance of the cookie as below<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golang.org\/src\/net\/http\/cookie.go\">https:\/\/golang.org\/src\/net\/http\/cookie.go<\/a><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">cookie := &http.Cookie{\n    Name:   \"token\",\n    Value:  \"some_token\",\n    MaxAge: 300,\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Once the cookie is created then use the <strong>AddCookie<\/strong> method to add it to the HTTP request object<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">req.AddCookie(cookie)<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, HTTP Client added two cookies with the below name-value pair.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>token=some_token<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>clicked=true<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Both these cookies will be sent in the call to <a href=\"http:\/\/google.com\">google.com<\/a>.<\/p>\n\n\n\n<h2 class=\"has-luminous-vivid-orange-color has-text-color has-large-font-size wp-block-heading\"><span class=\"ez-toc-section\" id=\"Set_cookie_and_send_that_cookie_for_all_requests_to_that_domain\"><\/span><strong><strong>Set cookie and send that cookie for all requests to that domain<\/strong><\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">HTTP client in golang lets you specify a <strong>CookieJar<\/strong> that can be used for storing and sending the cookies while making external HTTP requests. As the name suggests, think of it as a jar that contains cookies.<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golang.org\/pkg\/net\/http\/#Client\">https:\/\/golang.org\/pkg\/net\/http\/#Client<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below is the structure of the net\/http <strong>Client<\/strong> struct. It contains an instance variable named <strong>Jar<\/strong> of type <strong>CookieJar <\/strong>which is an interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type Client struct {\n    Transport RoundTripper\n\n    CheckRedirect func(req *Request, via []*Request) error\n\n    Jar CookieJar\n\n    Timeout time.Duration\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Below is the <strong>CookieJar<\/strong> interface<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">type CookieJar interface {\n    SetCookies(u *url.URL, cookies []*Cookie)\n    Cookies(u *url.URL) []*Cookie\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">net\/http provides a default cookie jar implementation that implements the above <strong>CookieJar <\/strong>interface. We will use it while initializing our net\/http Client<\/p>\n\n\n\n<p><a href=\"https:\/\/golang.org\/pkg\/net\/http\/cookiejar\/#Jar\">https:\/\/golang.org\/pkg\/net\/http\/cookiejar\/#Jar<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">You can also provide your custom cookie jar during the initialization of net\/http Client struct which implements the above <strong>CookieJar<\/strong> interface.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">HTTP client uses this jar in two ways<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>Adding cookies in this Jar. You can explicitly add cookies to this jar. The cookies will also be\u00a0added to the jar if the server sends the Set-Cookies header in the response headers. All the cookies specified in the <strong>Set-Cookie<\/strong> header will be added. For more details around the Set-Cookie header please refer to this <a href=\"https:\/\/golangbyexamples.com\/set-cookie-response-header\/\">link<\/a>. This link contains all the details to understand the <strong>Set-Cookie<\/strong> header in golang.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li>For consulting this jar while making any external HTTP requests. It checks this jar to know what all\u00a0cookies it needs to send\u00a0for a particular domain<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see an example where the client will add a cookie while making HTTP requests. This cookie will be sent in all subsequent\u00a0requests to the same domain.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">In this example, we will see how the client can set the cookie in the cookie jar. For that let&#8217;s first create a client. Here is the program for the same<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Here is the client code<\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Client\"><\/span><strong>Client<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">module sample.com\/client\ngo 1.16<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>client.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net\/http\"\n\t\"net\/http\/cookiejar\"\n\t\"net\/url\"\n)\n\nvar client http.Client\n\nfunc init() {\n\tjar, err := cookiejar.New(nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error while creating cookie jar %s\", err.Error())\n\t}\n\n\tclient = http.Client{\n\t\tJar: jar,\n\t}\n}\n\nfunc main() {\n\treq, err := http.NewRequest(\"GET\", \"http:\/\/localhost:8080\/doc\", nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error %s\", err.Error())\n\t}\n\tcookie := &http.Cookie{\n\t\tName:   \"token\",\n\t\tValue:  \"some_token\",\n\t\tMaxAge: 300,\n\t}\n\turlObj, _ := url.Parse(\"http:\/\/localhost:8080\/\")\n\tclient.Jar.SetCookies(urlObj, []*http.Cookie{cookie})\n\tresp, err := client.Do(req)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured. Error is: %s\", err.Error())\n\t}\n\tdefer resp.Body.Close()\n\n\tfmt.Printf(\"StatusCode: %d\\n\", resp.StatusCode)\n\n\treq, err = http.NewRequest(\"GET\", \"http:\/\/localhost:8080\/doc\/id\", nil)\n\tif err != nil {\n\t\tlog.Fatalf(\"Got error %s\", err.Error())\n\t}\n\n\tresp, err = client.Do(req)\n\tif err != nil {\n\t\tlog.Fatalf(\"Error occured. Error is: %s\", err.Error())\n\t}\n\tdefer resp.Body.Close()\n\n\tfmt.Printf(\"StatusCode: %d\\n\", resp.StatusCode)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above client program, we are creating an HTTP client with a cookie Jar<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">jar, err := cookiejar.New(nil)\nif err != nil {\n     log.Fatalf(\"Got error while creating cookie jar %s\", err.Error())\n}\n\nclient = http.Client{\n     Jar: jar,\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">we are adding a cookie to the Cookie Jar<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">cookie := &http.Cookie{\n\t\tName:   \"token\",\n\t\tValue:  \"some_token\",\n\t\tMaxAge: 300,\n}\nurlObj, _ := url.Parse(\"http:\/\/localhost:8080\/\")\nclient.Jar.SetCookies(urlObj, []*http.Cookie{cookie})<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">To test the above code and to illustrate that cookies added to the cookie jar in the first call are indeed sent in the subsequent call as well, we need to create the server as well which will print the incoming cookies.<\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Server\"><\/span><strong>Server<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\">The server listens to port 8080 and has two APIs. These are the two APIs which is being hit by the client above.<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>localhost:8080\/doc<\/strong><\/li><li><strong>localhost:8080\/doc\/id<\/strong><\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">In both the APIs we are printing the cookies which it receives in the incoming header<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><strong>go.mod<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-\">module sample.com\/server\n\ngo 1.16<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>server.go<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"net\/http\"\n)\n\nfunc main() {\n\tdocHandler := http.HandlerFunc(docHandler)\n\thttp.Handle(\"\/doc\", docHandler)\n\n\tdocGetID := http.HandlerFunc(docGetID)\n\thttp.Handle(\"\/doc\/id\", docGetID)\n\n\thttp.ListenAndServe(\":8080\", nil)\n}\n\nfunc docHandler(w http.ResponseWriter, r *http.Request) {\n\tfmt.Println(\"Cookie in First API Call\")\n\tfor _, c := range r.Cookies() {\n\t\tfmt.Println(c)\n\t}\n\tfmt.Println()\n\tw.WriteHeader(200)\n\tw.Write([]byte(\"Doc Get Successful\"))\n\treturn\n}\n\nfunc docGetID(w http.ResponseWriter, r *http.Request) {\n\tfmt.Println(\"Cookie in Second API Call\")\n\tfor _, c := range r.Cookies() {\n\t\tfmt.Println(c)\n\t}\n\tw.WriteHeader(200)\n\tw.Write([]byte(\"Doc Get ID Successful\"))\n\treturn\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Now run the server<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run server.go<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">and client<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">go run client.go<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Notice the output at the server end<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">Cookie in First API Call\ntoken=some_token\n\nCookie in Second API Call\ntoken=some_token<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">The same cookie is being sent automatically\u00a0in both the first and second call which the client will make to the server. How does it work out\u00a0of the box? This is because <strong>CookieJar<\/strong> comes into the picture. The golang HTTP client checks the Cookie Jar before making the HTTP call. It then sends this cookie.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">This is all about setting cookies in golang. Hope you have liked the tutorial. Please share feedback in the comments.<\/p>\n\n\n\n<p>Also, check out our Golang advance tutorial Series &#8211; <a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\">Golang Advance Tutorial<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewSet cookie for one of the requestSet cookie and send that cookie for all requests to that domainClientServer Overview A cookie in golang is represented as below in golang&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[316,3,4,101],"class_list":["post-5532","post","type-post","status-publish","format-standard","hentry","category-tech","tag-cookie","tag-go","tag-golang","tag-set"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Set cookie http in Go (Golang) - Welcome To Golang By Example<\/title>\n<meta name=\"description\" content=\"This tutorial is about how we can set the cookie while making http requests in golang. The tutorial also talks about how cookie-jar is used as well.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Set cookie http in Go (Golang) - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"This tutorial is about how we can set the cookie while making http requests in golang. The tutorial also talks about how cookie-jar is used as well.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-04-28T06:05:11+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-04-28T06:05:19+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/\",\"url\":\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/\",\"name\":\"Set cookie http in Go (Golang) - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-04-28T06:05:11+00:00\",\"dateModified\":\"2021-04-28T06:05:19+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"description\":\"This tutorial is about how we can set the cookie while making http requests in golang. The tutorial also talks about how cookie-jar is used as well.\",\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Set cookie http in Go (Golang)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Set cookie http in Go (Golang) - Welcome To Golang By Example","description":"This tutorial is about how we can set the cookie while making http requests in golang. The tutorial also talks about how cookie-jar is used as well.","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/","og_locale":"en_US","og_type":"article","og_title":"Set cookie http in Go (Golang) - Welcome To Golang By Example","og_description":"This tutorial is about how we can set the cookie while making http requests in golang. The tutorial also talks about how cookie-jar is used as well.","og_url":"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-04-28T06:05:11+00:00","article_modified_time":"2021-04-28T06:05:19+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"6 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/","url":"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/","name":"Set cookie http in Go (Golang) - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-04-28T06:05:11+00:00","dateModified":"2021-04-28T06:05:19+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"description":"This tutorial is about how we can set the cookie while making http requests in golang. The tutorial also talks about how cookie-jar is used as well.","breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/set-cookie-http-golang\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/set-cookie-http-golang\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Set cookie http in Go (Golang)"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1re","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5532","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5532"}],"version-history":[{"count":1,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5532\/revisions"}],"predecessor-version":[{"id":5534,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5532\/revisions\/5534"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5532"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5532"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5532"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}