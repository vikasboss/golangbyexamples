{"id":5692,"date":"2021-05-23T19:23:18","date_gmt":"2021-05-23T13:53:18","guid":{"rendered":"https:\/\/golangbyexamples.com\/?p=5692"},"modified":"2021-05-27T09:12:40","modified_gmt":"2021-05-27T03:42:40","slug":"golang-regex-literal-strin","status":"publish","type":"post","link":"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/","title":{"rendered":"Golang Regex: Matching raw or literal string"},"content":{"rendered":"\n<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-light-blue\">\n<div class=\"ez-toc-title-container\">\n<p class=\"ez-toc-title\">Table of Contents<\/p>\n<span class=\"ez-toc-title-toggle\"><a class=\"ez-toc-pull-right ez-toc-btn ez-toc-btn-xs ez-toc-btn-default ez-toc-toggle\" style=\"display: none;\"><i class=\"ez-toc-glyphicon ez-toc-icon-toggle\"><\/i><\/a><\/span><\/div>\n<nav><ul class=\"ez-toc-list ez-toc-list-level-1\"><li class=\"ez-toc-page-1 ez-toc-heading-level-2\"><a class=\"ez-toc-link ez-toc-heading-1\" href=\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/#Overview\" title=\"Overview\">Overview<\/a><ul class=\"ez-toc-list-level-3\"><li class=\"ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-2\" href=\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/#MatchCompile_Function\" title=\"MatchCompile Function\">MatchCompile Function<\/a><\/li><li class=\"ez-toc-page-1 ez-toc-heading-level-3\"><a class=\"ez-toc-link ez-toc-heading-3\" href=\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/#Match_Method\" title=\"Match Method\">Match Method<\/a><\/li><\/ul><\/li><\/ul><\/nav><\/div>\n<h2 class=\"has-luminous-vivid-orange-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Overview\"><\/span><strong>Overview<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h2>\n\n\n\n<p class=\"has-medium-font-size\">We will be using <strong>regexp<\/strong> package in golang in our example that provides regular expression searching capabilities<a href=\"https:\/\/golang.org\/pkg\/regexp\/\">https:\/\/golang.org\/pkg\/regexp\/<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Before looking into the regex itself, let&#8217;s look at some basic functions or methods provided by Go to do a regex match.<\/p>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"MatchCompile_Function\"><\/span><strong>MatchCompile Function<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golang.org\/pkg\/regexp\/#MustCompile\">https:\/\/golang.org\/pkg\/regexp\/#MustCompile<\/a> <\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below is the signature of the function<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func MustCompile(str string) *Regexp<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We first compile the given regex string using the <strong>MustCompile<\/strong> function. This function panics if the given regex is not valid. After it is able to successfully compile the given regex, it returns the instance of regexp struct.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">sampleRegexp := regexp.MustCompile(\"some_regular_expression\"\")<\/code><\/pre>\n\n\n\n<h3 class=\"has-vivid-green-cyan-color has-text-color wp-block-heading\"><span class=\"ez-toc-section\" id=\"Match_Method\"><\/span><strong>Match Method<\/strong><span class=\"ez-toc-section-end\"><\/span><\/h3>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golang.org\/pkg\/regexp\/#Regexp.Match\">https:\/\/golang.org\/pkg\/regexp\/#Regexp.Match<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Below is the signature of the method<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">func (re *Regexp) Match(b []byte) bool<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">We can call the <strong>Match<\/strong> method on the regexp instance to match the given pattern with the regex. It returns true if the regex matches with the input string otherwise false. We need to pass in bytes of the input string to this method.<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">match := sampleRegexp.Match([]byte(\"some_string\"))<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">Let&#8217;s see a simple program for a basic regex having a literal or raw string<\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">package main\n\nimport (\n\t\"fmt\"\n\t\"regexp\"\n)\n\nfunc main() {\n\tsampleRegex := regexp.MustCompile(\"abc\")\n\n\tmatch := sampleRegex.Match([]byte(\"abc\"))\n\tfmt.Printf(\"For abc: %t\\n\", match)\n\n\tmatch = sampleRegex.Match([]byte(\"1abc2\"))\n\tfmt.Printf(\"For 1abc2: %t\\n\", match)\n\n\tmatch = sampleRegex.Match([]byte(\"xyz\"))\n\tfmt.Printf(\"For xyz: %t\\n\", match)\n}<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\"><strong>Output<\/strong><\/p>\n\n\n\n<pre class=\"wp-block-prismatic-blocks\"><code class=\"language-go\">For abc: true\nFor 1abc2: true\nFor xyz: false<\/code><\/pre>\n\n\n\n<p class=\"has-medium-font-size\">In the above program, we have a simple literal string regular expression<\/p>\n\n\n\n<p class=\"has-medium-font-size\">We first call <strong>MustCompile<\/strong> to check if the given regular expression is valid. After that, we match it with the below sample string or text<\/p>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>String &#8220;abc&#8221; <\/strong>&#8211; It gives a match and prints true<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>String &#8220;1abc2&#8221;<\/strong> &#8211; It gives a match and prints true. It matches as it contains <strong>&#8220;abc&#8221;<\/strong> as a substring.<\/li><\/ul>\n\n\n\n<ul class=\"has-medium-font-size wp-block-list\"><li><strong>String &#8220;xyz&#8221;<\/strong> &#8211; It does not give a match and prints false<\/li><\/ul>\n\n\n\n<p class=\"has-medium-font-size\">As we can notice in the above program that if the given string or text contains the regex as a substring then also it gives a match. If we want to do full string matches then we need to use the anchor characters at the start and end of the regex.&nbsp; <strong>Caret<\/strong> anchor character will be used at the start and <strong>Dollar<\/strong> anchor character will be used at the end.<\/p>\n\n\n\n<p class=\"has-medium-font-size\">Please refer to this article for details around full string matches<\/p>\n\n\n\n<p class=\"has-medium-font-size\"><a href=\"https:\/\/golangbyexamples.com\/golang-regex-match-full-string\/\">https:\/\/golangbyexamples.com\/golang-regex-match-full-string<\/a><\/p>\n\n\n\n<p class=\"has-medium-font-size\">Also, check out our Golang advance tutorial Series \u2013&nbsp;<a href=\"https:\/\/golangbyexamples.com\/golang-comprehensive-tutorial\/\"><u>Golang Advance Tutorial<\/u><\/a><\/p>\n\n\n\n<p><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Table of Contents OverviewMatchCompile FunctionMatch Method Overview We will be using regexp package in golang in our example that provides regular expression searching capabilitieshttps:\/\/golang.org\/pkg\/regexp\/ Before looking into the regex itself, let&#8217;s look&#8230;<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"spay_email":"","footnotes":"","jetpack_publicize_message":"","jetpack_is_tweetstorm":false},"categories":[1],"tags":[],"class_list":["post-5692","post","type-post","status-publish","format-standard","hentry","category-tech"],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v22.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Golang Regex: Matching raw or literal string - Welcome To Golang By Example<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Golang Regex: Matching raw or literal string - Welcome To Golang By Example\" \/>\n<meta property=\"og:description\" content=\"Table of Contents OverviewMatchCompile FunctionMatch Method Overview We will be using regexp package in golang in our example that provides regular expression searching capabilitieshttps:\/\/golang.org\/pkg\/regexp\/ Before looking into the regex itself, let&#8217;s look...\" \/>\n<meta property=\"og:url\" content=\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/\" \/>\n<meta property=\"og:site_name\" content=\"Welcome To Golang By Example\" \/>\n<meta property=\"article:published_time\" content=\"2021-05-23T13:53:18+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-05-27T03:42:40+00:00\" \/>\n<meta name=\"author\" content=\"admin\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"admin\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/\",\"url\":\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/\",\"name\":\"Golang Regex: Matching raw or literal string - Welcome To Golang By Example\",\"isPartOf\":{\"@id\":\"https:\/\/golangbyexamples.com\/#website\"},\"datePublished\":\"2021-05-23T13:53:18+00:00\",\"dateModified\":\"2021-05-27T03:42:40+00:00\",\"author\":{\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\"},\"breadcrumb\":{\"@id\":\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/golangbyexamples.com\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Golang Regex: Matching raw or literal string\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/golangbyexamples.com\/#website\",\"url\":\"https:\/\/golangbyexamples.com\/\",\"name\":\"Welcome To Golang By Example\",\"description\":\"\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/golangbyexamples.com\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f\",\"name\":\"admin\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g\",\"caption\":\"admin\"},\"url\":\"https:\/\/golangbyexamples.com\/author\/admin\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","yoast_head_json":{"title":"Golang Regex: Matching raw or literal string - Welcome To Golang By Example","robots":{"index":"index","follow":"follow","max-snippet":"max-snippet:-1","max-image-preview":"max-image-preview:large","max-video-preview":"max-video-preview:-1"},"canonical":"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/","og_locale":"en_US","og_type":"article","og_title":"Golang Regex: Matching raw or literal string - Welcome To Golang By Example","og_description":"Table of Contents OverviewMatchCompile FunctionMatch Method Overview We will be using regexp package in golang in our example that provides regular expression searching capabilitieshttps:\/\/golang.org\/pkg\/regexp\/ Before looking into the regex itself, let&#8217;s look...","og_url":"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/","og_site_name":"Welcome To Golang By Example","article_published_time":"2021-05-23T13:53:18+00:00","article_modified_time":"2021-05-27T03:42:40+00:00","author":"admin","twitter_card":"summary_large_image","twitter_misc":{"Written by":"admin","Est. reading time":"2 minutes"},"schema":{"@context":"https:\/\/schema.org","@graph":[{"@type":"WebPage","@id":"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/","url":"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/","name":"Golang Regex: Matching raw or literal string - Welcome To Golang By Example","isPartOf":{"@id":"https:\/\/golangbyexamples.com\/#website"},"datePublished":"2021-05-23T13:53:18+00:00","dateModified":"2021-05-27T03:42:40+00:00","author":{"@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f"},"breadcrumb":{"@id":"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/"]}]},{"@type":"BreadcrumbList","@id":"https:\/\/golangbyexamples.com\/golang-regex-literal-strin\/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https:\/\/golangbyexamples.com\/"},{"@type":"ListItem","position":2,"name":"Golang Regex: Matching raw or literal string"}]},{"@type":"WebSite","@id":"https:\/\/golangbyexamples.com\/#website","url":"https:\/\/golangbyexamples.com\/","name":"Welcome To Golang By Example","description":"","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https:\/\/golangbyexamples.com\/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Person","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/8833ea7638dafd763cb1db6c0ca4576f","name":"admin","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https:\/\/golangbyexamples.com\/#\/schema\/person\/image\/","url":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","contentUrl":"https:\/\/secure.gravatar.com\/avatar\/?s=96&d=mm&r=g","caption":"admin"},"url":"https:\/\/golangbyexamples.com\/author\/admin\/"}]}},"jetpack_featured_media_url":"","jetpack_publicize_connections":[],"jetpack_sharing_enabled":true,"jetpack_shortlink":"https:\/\/wp.me\/paOs1b-1tO","amp_validity":null,"amp_enabled":true,"_links":{"self":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5692","targetHints":{"allow":["GET"]}}],"collection":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/comments?post=5692"}],"version-history":[{"count":2,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5692\/revisions"}],"predecessor-version":[{"id":5738,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/posts\/5692\/revisions\/5738"}],"wp:attachment":[{"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/media?parent=5692"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/categories?post=5692"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/golangbyexamples.com\/wp-json\/wp\/v2\/tags?post=5692"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}